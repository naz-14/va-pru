type Order {
  id: Int!
  platform_id: Int!
  platform: Platform
  order_id: Int!
  order_date: String
  status_id: Int!
  status: Status
  reason: Reason
  user_id: Int
  uber_id: String
  user: UserDetails
  type_id: Int!
  type: Type
  store_id: Int
  store: Store
  warehouse_id: Int
  warehouse: Warehouse
  method_id: Int!
  method: Method
  shipping_id: Int!
  shipping_compay_id: Int
  shipping: Shipping
  payment_id: Int!
  payment: Payment
  innvoice_id: Int
  product_quantity: Int!
  total_price: Float!
  shipping_price: Float!
  products: [Product]
}

type Platform {
  id: Int!
  name: String!
}

type Status {
  id: Int!
  name: String!
}

type Reason {
  id: Int!
  order_id: Int!
  reason: String
  issusse_id: Int!
  user_id: Int!
  userDetails: UserDetails
  issusesDetails: IssusesDetails
  is_active: Boolean!
  createdAt: String!
}

type UserDetails {
  id: Int!
  name: String!
}

type IssusesDetails{
  id: Int!
  name: String!
}

type Type {
  id: Int!
  name: String!
}

type Store {
  name: String!
  uber_id: String!
  phone: String!
  address: String!
}

type Warehouse {
  name: String!
  phone: String!
  address: String!
}

type Method {
  id: Int!
  name: String!
}

type Shipping {
  id: Int!
  first_name: String!
  last_name: String!
  order_id: Int!
  company: String
  address_1: String!
  address_2: String
  city: String!
  state: String!
  postcode: String!
  country: String!
  email: String!
  phone: String!
}

type Payment {
  id: Int!
  order_id: Int!
  platform: String!
  payment_id: String!
}

type Product {
  id: Int!
  product_id: Int!
  sku: String!
  name: String!
  order_id: Int!
  quantity: Int!
  price: Float!
  total: Float!
  variation_id: Int
}

type woocommerceOrder {
  id: ID!
  number: String!
  status: String!
}

input ProductInput {
  product_id: Int!
  sku: String!
  name: String!
  order_id: Int!
  quantity: Int!
  price: Float!
  total: Float!
  variation_id: Int
}

type OrderRowsCount {
  rows: [Order]
  count: Int
}

type Query {
  getPendingOrders(
    searchQuery: String
    limit: Int
    offset: Int
    platform: Int
  ): OrderRowsCount
  getAllOrders: [woocommerceOrder!]!
  # getPendingOrders: [Order]
  getOrderById(id: Int!): Order
  getOneOrder(id: Int!): woocommerceOrder!
  getAllStatusesOrders:[Status!]!
}

type Mutation {
  getAllPendingExport: [Order]
}
