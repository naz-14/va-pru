{"version":3,"sources":["Auth/AuthContext.js","Types/types.js","Auth/AuthReducer.js","Assets/Images/vinos-america-logo-01.svg","Assets/Images/load.svg","Components/Global/LoadingLayer.jsx","Assets/Images/avatar-default.svg","Components/Layout/NavItem.jsx","Components/Helpers/ToastSweetAlert.jsx","graphql/Catalog/Orders/countOrders.js","Components/Layout/SideBar.jsx","Components/Layout/Header.jsx","Components/Layout/Footer.jsx","graphql/Auth/auth.js","graphql/Catalog/Users/user.js","Components/Layout/LayoutLogged.jsx","Routers/PrivateRoute.jsx","Components/Layout/LayoutUnlogged.jsx","Routers/PublicRoute.jsx","Components/Auth/Login.jsx","Components/Layout/ContentHeader.jsx","Components/Admin/Home/Example.jsx","Components/Auth/Verification.jsx","Components/Pages/404/Error404.jsx","Components/Auth/Recovery.jsx","Components/Global/Spinner.jsx","Components/Global/LayoutTable.jsx","Components/Admin/Catalogs/Users/List.jsx","Components/Global/Box.jsx","graphql/Global/sepomex.js","Components/Helpers/setInputValues.js","graphql/Catalog/Roles/roles.js","graphql/Catalog/Stores/stores.js","Components/Helpers/validatorCustomerForm.js","Components/Global/CropperImage.jsx","Components/Helpers/GenericFunctions.jsx","graphql/Global/uploadFiles.js","Components/Global/InputController.jsx","Components/Global/DynamicForm.jsx","Components/Admin/Catalogs/Users/Register.jsx","Components/Global/BoxCollapsible.jsx","graphql/Catalog/Modules/modules.js","Components/Admin/Catalogs/Users/Permissions.jsx","Components/Admin/Catalogs/Roles/Roles.jsx","Components/Admin/Catalogs/Roles/RolesNew.jsx","Components/Admin/Catalogs/Modules/Modules.jsx","Components/Admin/Catalogs/Modules/ModulesNew.jsx","graphql/Catalog/UsersApp/usersApp.js","Components/Admin/Catalogs/UsersApp/UsersApp.jsx","Components/Admin/Catalogs/UsersApp/UsersAppNew.jsx","graphql/Catalog/Quotes/quotes.js","Components/Helpers/StatusesLanguages.js","Components/Admin/Catalogs/ProvidersQuotes/ProvidersQuotes.jsx","Components/Helpers/validatorQuotes.js","graphql/Catalog/Documents/documentStatus.js","Components/Admin/Catalogs/ProvidersQuotes/ProvidersQuotesNew.jsx","Components/Admin/Catalogs/Users/UserProfile/Sidebar.jsx","Components/Admin/Catalogs/Users/UserProfile/UserInfo.jsx","Components/Admin/Catalogs/Users/UserProfile/UserProfileMain.jsx","Components/Sulog/Sulog.jsx","Components/Sulog/SulogNew.jsx","helpers/moduleRoutesGenerator.js","graphql/Catalog/Orders/pendingOrders.js","Components/Agent/Catalogs/Orders/Pending/PendingOrders.jsx","Components/Global/OrderCol/index.js","Components/OrderGeneral/index.js","Components/OrderDetailStore/index.js","Components/OrderShippingDetails/index.js","Components/OrderButtons/index.js","Assets/Images/bebida.jpg","Components/OrderProductCard/index.js","Components/OrderProducts/index.js","graphql/Catalog/ShippingCompanies/shippingCompanies.js","graphql/Catalog/Timeline/timeline.js","Components/Global/Timeline/Timeline.jsx","graphql/Catalog/InternalNotes/internalNotes.js","Components/Global/InternalNotes/InternalNotes.jsx","Components/Helpers/RejectOrder.jsx","graphql/Catalog/Issues/issues.js","graphql/Catalog/Reasons/reasons.js","graphql/Catalog/Orders/billingOrders.js","graphql/Catalog/Orders/inProcessOrders.js","Components/Agent/Catalogs/Orders/Pending/PendingOrdersNew.jsx","Components/Shared/Catalogs/Orders/Process/InProcessOrders.jsx","graphql/Catalog/Orders/toStockOrders.js","Components/Shared/Catalogs/Orders/Process/InProcessOrdersNew.jsx","graphql/Catalog/Orders/localOrders.js","Components/Agent/Catalogs/Orders/Local/LocalShippingOrders.jsx","Components/Agent/Catalogs/Orders/Local/LocalShippingOrdersNew.jsx","graphql/Catalog/Orders/nationalOrders.js","Components/Agent/Catalogs/Orders/National/NationalShippingOrders.jsx","Components/Agent/Catalogs/Orders/National/NationalShippingOrdersNew.jsx","graphql/Catalog/Orders/shippedOrders.js","Components/Shared/Catalogs/Orders/Shipped/ShippedOrders.jsx","Components/Shared/Catalogs/Orders/Shipped/ShippedOrdersNew.jsx","Components/Shared/Catalogs/Orders/ToStock/ToStockOrders.jsx","graphql/Catalog/Orders/collectOrders.js","Components/Shared/Catalogs/Orders/ToStock/ToStockOrdersNew.jsx","Components/Shared/Catalogs/Orders/Billing/BillingOrders.jsx","Components/Shared/Catalogs/Orders/Billing/BillingOrdersNew.jsx","graphql/Catalog/Orders/rejectedOrders.js","Components/Shared/Catalogs/Orders/Rejected/RejectedOrders.jsx","Components/OrdersIssuesDetails/index.js","Components/Shared/Catalogs/Orders/Rejected/RejectedOrdersNew.jsx","Components/Shared/Catalogs/Orders/Collect/CollectOrders.jsx","graphql/Catalog/Orders/inRouteOrders.js","Components/Shared/Catalogs/Orders/Collect/CollectOrdersNew.jsx","Components/Shared/Catalogs/Orders/InRoute/InRouteOrders.jsx","Components/Shared/Catalogs/Orders/InRoute/InRouteOrdersNew.jsx","helpers/submoduleRoutesGenerator.js","Routers/AppRouter.jsx","config/apollo.js","App.jsx","index.jsx"],"names":["AuthContext","createContext","types","authReducer","state","action","type","sessionStorage","setItem","JSON","stringify","payload","logged","LoadingLayer","className","src","logo","alt","loading","NavItem","to","label","icon","multiLevel","id","location","useLocation","useState","rotate","setRotate","onClick","href","pathname","includes","map","item","idx","exact","activeClassName","badge","ToastSweetAlert","a","message","mode","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","title","text","customClass","confirmButton","buttonsStyling","allowOutsideClick","confirmButtonText","GET_COUNTERS_ORDERS","gql","SideBar","prefixIcon","user","iconApp","logoIcon","avatar","Avatar","modules","menu","setMenu","badges","setBadges","useQuery","data","error","useEffect","listModule","module","submodule_info","module_info","relative_link","access_read","name","push","front_label","link","submodule","exists","find","listSubmodule","getAllCounters","role","itemSubmodule","pendings","processing","billing","toSupply","localShipping","nationalShipping","complete","rejected","route","collect","Header","dispatch","useContext","resizeHanlder","window","innerWidth","document","getElementById","onresize","showDenyButton","denyButtonText","denyButton","then","result","isConfirmed","removeItem","localStorage","setTimeout","Footer","moment","format","DECRYPT_TOKEN","AUTH_USER","EMPTY","APP_CONFIG","GET_USERS","GET_USER_BY_ID","EXPORT_USERS","GET_ALL_USER_PERMISSIONS","REGISTER_USER","UPDATE_USER","DELETE_USER","CREATE_TOKEN_RECOVERY","UPDATE_PASSWORD","UPDATE_USER_PASSWORD","CHECK_TOKEN_RECOVERY","LayoutLogged","children","dataAvatar","variables","getUserByIdId","parseInt","idUser","appLogo","appName","appMiniLogo","appFavicon","dataSys","setDataSys","undefined","getConfigSys","project_logo","project_name","project_mini_logo","project_favicon","headTitle","querySelector","setFavicon","createElement","setAttribute","appendChild","titleApp","GetUserById","url","userPermissions","PrivateRoute","isAuth","Component","component","rest","props","prototype","PropTypes","bool","isRequired","func","LayoutUnlogged","PublicRoute","userType","number","Login","password","form","setForm","setLoading","useMutation","authUser","decryptToken","getAllUserPermissions","handleLogin","e","preventDefault","input","userName","dataToken","token","tokenData","decoded","userID","userPermissionsData","email","Logo","onSubmit","method","placeholder","onChange","target","value","htmlFor","disabled","ContentHeader","breadcrumb","windowTitle","_title","parse","getItem","Content","style","fontSize","height","width","Verification","passwordConfirm","history","useHistory","_token","useParams","updatePassword","validateToken","handleSubmit","inputRecovery","Error404","RecoveryPassword","createTokenRecovery","Loader","paddingBottom","LayoutTable","requery","exportQuery","editText","totalCount","details","platformSelector","pagePagination","setPagePagination","loadingData","columns","setColumns","cell","setCell","dataExported","setDataExported","FileNameExported","setFileNameExported","loadingExport","setLoadingExport","create","edit","erase","exportBtn","permissionsBtn","path","permissions","setPermissions","refetchQueries","query","searchQuery","limit","offset","platform","deleteItem","exportItems","listPermissions","access_retrieve","access_edit","access_delete","access_export","submoduleName","relativePathSplit","split","replace","submodulePath","length","checkBtnPermissions","some","permission","Object","keys","selector","row","sortable","button","handleDelete","userId","handlePerRowsChange","newPerPage","getDataToExport","nameOperation","definitions","camelCaseNameOperation","charAt","toLowerCase","slice","fileName","click","filename","expandOnRowClicked","fixedHeader","fixedHeaderScrollHeight","highlightOnHover","pagination","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","pointerOnHover","responsive","striped","subHeader","subHeaderAlign","subHeaderWrap","paginationServer","onChangeRowsPerPage","onChangePage","page","paginationTotalRows","noDataComponent","progressPending","progressComponent","List","total","setTotal","dataToTable","setDataToTable","list","Users","rows","Nombre","first_name","last_name","Usuario","user_name","count","Box","btnGreenTxt","btnGreenPath","btnRedTxt","btnRedPath","content","btnSubmit","btnState","btnOnClick","errors","_id","values","SEPOMEX_MUTATION","setZipValues","setValue","setColonies","Data","setZip","colonies","colony","colony_name","id_colony","city","city_name","municipality","municipality_name","state_name","idCountry","id_country","idState","id_state","idCity","id_city","idMunicipality","id_municipality","setZipNullValues","GET_ROLES","GET_ROLE_BY_ID","EXPORT_ROLES","CREATE_ROLE","UPDATE_ROLE","DELETE_ROLE","GET_STORES","userNameValidator","contactsValidator","Yup","of","shape","contactName","required","paternalSurname","maternalSurname","phone","min","max","validationSchemaUser","RFC","matches","socialReason","direction","outdoorNumber","postalCode","colonia","contacts","firstName","lastName","userEmail","oneOf","userRole","userStore","validationSchemaUserUpdate","passwordValidator","currentPassword","CropperImage","_image","setCropper","image","cropperRef","useRef","doAction","debounce","handleCrop","current","imageElement","cropper","getCroppedCanvas","dragMode","modal","zoomTo","initialAspectRatio","viewMode","minCropBoxHeight","minCropBoxWidth","background","autoCropArea","checkOrientation","crop","ref","guides","FileValidator","validateFormat","blob","fr","FileReader","Promise","resolve","onload","arr","Uint8Array","subarray","header","i","toString","readAsArrayBuffer","UPDATE_AVATAR","InputController","control","options","inputType","isMulti","closeOnSelect","validateFormatMsg","formatAccept","previewPic","changeAction","blurAction","setImage","setResult","updateAvatar","MySwal","withReactContent","useController","defaultValue","field","fieldState","invalid","animatedComponents","makeAnimated","handleChange","handleChangeChoosen","handleClickInput","handleChangeImage","autoUpdate","files","handleCropImage","img","getFileFromUrl","res","handleChangeFile","file","reader","html","focusConfirm","readAsDataURL","defaultType","fetch","response","File","headers","get","toDataURL","onBlur","hidden","closeMenuOnSelect","components","NoOptionsMessage","option","styles","base","borderColor","accept","DynamicForm","btnAppendTxt","emptyText","prefix","inputs","iconSubmodule","idsToDelete","setIdsToDelete","useFieldArray","fields","append","remove","float","_index","Fragment","cursor","handleRemove","index","colSize","specialSubmodule","iconState","Register","_user","schemaValidator","setSchemaValidator","_password","set_Password","setPreviewPic","registerUser","updateUser","sepomexAdress","dataOneUser","loadingOneUser","errorOneUser","fetchPolicy","dataRoles","loadingRoles","errorRoles","dataStores","loadingStores","errorStores","addressId","setAddressId","roles","setRoles","stores","setStores","initialStateZip","idMuicipality","zip","useForm","resolver","yupResolver","reset","watch","methods","formState","getValues","getAdress","zipCode","getFullAddressByZipcode","getAllRoles","role_name","getAllStores","store","watchPassword","contact","contact_data","lastname","second_lastname","ext","mobile","id_role","id_store","address","street","external_number","interiorNumber","internal_number","zip_code","id_address","setUserValues","handleSave","id_user_register","inputAvatar","id_user_update","active","inputAddress","inputContact","readOnly","BoxCollapsible","nestedContent","ALL_MODULES","GET_ONE_MODULE","EXPORT_MODULES","CREATE_MODULE","UPDATE_MODULE","DELETE_MODULE","All_USER_PERMISSIONS","UPDATE_PERMISSIONS","Permissions","loadingModules","errorModules","dataModules","updatePermissions","setModules","getAllModules","fetchPermissions","prepareData","dataGenerated","ids","entries","idsSplited","idModule","idSubModule","id_user","id_module","id_submodule","delete","read","export","setData","nameModule","typePermission","Checkbox","render","checked","labelInput","event","moduleName","newName","getElementsByName","dName","eName","cName","exportName","itemModule","submodules","Roles","Descripción","description","RolesNew","createRole","getOneRoleId","updateRole","dataRoleId","loadingRoleId","errorRoleId","loadingBtn","setLoadingBtn","validationSchema","getOneRole","roleId","btnLoading","Modules","Etiqueta","Link","Icono","Submodulos","ModulesNew","setIcon","setIconSubmodule","dataModule","getOneModuleId","createModule","updateModule","frontLabel","relativeLink","frontLabelSubmodule","relativeLinkSubmodule","defaultValues","getOneModule","dataFormated","moduleId","moduleInput","submodulesIdsTodelete","submoduleInput","GET_ALL_USERS_APP","DELETE_USER_APP","CREATE_USER_APP","UPDATE_USER_APP","GET_APP_USER","UsersApp","getAllAppUsers","username","UsersAppNew","createAppUser","getAppUserId","updateAppUser","createValidationSchema","userPhone","updateValidationSchema","getAppUser","id_type","updateAppUserId","GET_QUOTES","CREATE_QUOTE","GET_PROVIDER_INFO","document_statuses_esp","ProvidersQuotes","statusEsp","cardCode","cardName","comments","docDate","docStatus","docTime","whsCode","quotes","setQuotes","date","fullCalendar","setFullCalendar","getQuotes","plugins","dayGridPlugin","interactionPlugin","initialView","events","eventClick","arg","idVar","filterData","showCloseButton","status","htmlContainer","locale","displayEventTime","eventContent","eventInfo","timeText","themeSystem","dateNow","Date","dateLimit","validationSchemaQuote","typeError","setDate","getDate","validationSchemaQuoteOnlyCodes","GET_DOCUMENTS_STATUSES","ProvidersQuotesNew","schemaValidatorStep1","providerData","statuses","setStatuses","statusesEsp","step","methodsStep1","handleSubmitStep1","errorsStep1","controlStep1","getDocumentsStatuses","handleSaveStep1","inputProvider","Sidebar","info","roleName","setRoleName","setDescription","UserInfo","_data","set_data","display","setDisplay","handleUpdatePassword","UserProfileMain","Sulog","SulogNew","moduleRoutesGenerator","UsersNew","UsersPermissions","routesArray","GET_PENDING_ORDERS","GET_ORDER_DETAILS_BY_ID","EXPORT_PENDING_ORDERS","CHANGE_TO_PROCESS","CHANGE_TO_BILLING","PendingOrders","getPendingOrders","order","order_date","Plataforma","Tipo","payment","payment_id","Cliente","shipping","order_id","Tienda","warehouse","console","log","OrderCol","mediumColSize","OrderGeneral","paymentId","orderId","orderDate","OrderDetailStore","withStore","orderType","orderStore","orderMethod","orderPaymentPlatform","shippingPrice","totalPrice","status_id","uberAssignedId","id_shippingCompany","shippingCompanies","show","handleStoreChange","handleShippingCompanyChange","storeOptions","setStoreOptions","shippingCompaniesOptions","setShippingCompaniesOptions","company","OrderShippingDetails","postcode","OrderButtons","oneButton","firstButtonGray","cancelBtn","onCancel","processBtn","onProcess","OrderProductCard","sku","price","quantity","id_product","Bebida","maxWidth","maxHeight","OrderProducts","productsArray","totalQuantity","product","product_id","GET_SIPPING_COMPANIES","GET_TIMELINE","Timeline","idOrder","timeLine","setTimeLine","boxScroll","dictionary","getTimeline","timeData","dateStatus","time","element","scrollTop","scrollHeight","GET_INTERNAL_NOTES","CREATE_INTERNAL_NOTE","InternalNotes","setValues","messages","setMessages","refResetDocument","createNote","getInternalNotes","fileInternal","sendInternalNotes","size","inputInternalNote","user_id","rel","autoComplete","RejectOrder","dataIssuses","createReason","clientsReason","inputOptions","inputValidator","reason","flag","toUpperCase","showCancelButton","reasonText","inputReason","issusse_id","goBack","GET_ALL_ISSUES","CREATE_REASON","GET_BILLING_ORDERS","GET_IN_PROCESS_ORDERS","PendingOrdersNew","storeId","setStoreId","shippingCompanyId","setShippingCompanyId","setIdOrder","warehouseId","setWarehouseId","storeFromDB","setStoreFromDB","issuses","setIssuses","dataShippingCompanies","loadingShippingCompanies","changeToProcess","changeToBilling","loadingIssuses","errorIssuses","getOrderById","orderData","store_id","warehouse_id","getAllIssusses","assign","onSubmitLocal","onSubmitNational","shippingCompayId","total_price","shipping_price","uber_id","getAllShippingCompanies","products","product_quantity","address_1","type_id","InProcessOrder","getInProcessOrders","GET_TO_STOCK_ORDERS","CHANGE_TO_SUPPLY","InProcessOrdersNew","changeToSupply","GET_LOCAL_ORDERS","LocalShippingOrders","getLocalOrders","Estatus","LocalShippingOrdersNew","alert","GET_NATIONAL_ORDERS","NationalShippingOrders","getNationalOrders","NationalShippingOrdersNew","GET_SHIPPED_ORDERS","CHANGE_TO_SHIPPED","ShippedOrders","getShippedOrders","ShippedOrdersNew","ToStockOrders","getToStockOrders","GET_COLLECT_ORDERS","CHANGE_TO_COLLECT","ToStockOrdersNew","changeToCollect","onSubmitLogistic","onSubmitNoLogistic","BillingOrders","getBillingOrders","BillingOrdersNew","GET_TO_REJECTED_ORDERS","CHANGE_TO_RETURNED","RejectedOrders","getRejectedOrders","OrdersIssuesDetails","issues","timestap","RejectedOrdersNew","issusesDetails","userDetails","createdAt","CollectOrders","getCollectOrders","GET_IN_ROUTE_ORDERS","CHANGE_TO_IN_ROUTE","CollectOrdersNew","changeToShipped","changeToInRoute","onSubmitComplete","onSubmitInRoute","InRouteOrders","getInRouteOrders","InRouteOrdersNew","changeToReturned","onSubmitCompleted","onSubmitReturned","submoduleRoutesGenerator","InProcessOrders","AppRouter","PasswordRecovery","Home","httpLink","createUploadLink","uri","authLink","setContext","_","requestPath","authorization","client","ApolloClient","connectToDevTools","cache","InMemoryCache","addTypename","concat","dotenv","App","useReducer","Provider","ApolloProvider","ReactDOM"],"mappings":"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","file":"static/js/main.4239ec4b.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n","export const types = {\r\n  login: '[auth] login',\r\n  logout: '[auth] logout',\r\n}\r\n","import { types } from '../Types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      sessionStorage.setItem('user', JSON.stringify(action.payload))\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      }\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      }\r\n    default:\r\n      return { state }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/vinos-america-logo-01.9362df42.svg\";","export default __webpack_public_path__ + \"static/media/load.03efd336.svg\";","import React from 'react'\r\nimport logo from './../../Assets/Images/vinos-america-logo-01.svg'\r\nimport loading from './../../Assets/Images/load.svg'\r\n\r\nexport const LoadingLayer = () => {\r\n  return (\r\n    <div className=\"container-loading\">\r\n      <div className=\"section-loading\">\r\n        <img src={logo} className=\"img-logo-full\" alt=\"iconapp\" />\r\n        <img src={loading} alt=\"loading\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default LoadingLayer\r\n","export default __webpack_public_path__ + \"static/media/avatar-default.d04e51c6.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\nexport const NavItem = ({\r\n  to = '/',\r\n  label = 'Label',\r\n  icon = 'fas-fa-circle',\r\n  multiLevel = false,\r\n  id,\r\n}) => {\r\n  const location = useLocation()\r\n  const [rotate, setRotate] = useState(false)\r\n\r\n  const handleRotate = () => {\r\n    setRotate(!rotate)\r\n  }\r\n\r\n  return multiLevel ? (\r\n    <>\r\n      <li className={`nav-item`} onClick={() => handleRotate()}>\r\n        <a\r\n          href={`#Submenu${id}`}\r\n          data-toggle=\"collapse\"\r\n          aria-expanded={location?.pathname.includes(to) ? 'true' : 'false'}\r\n          className={`nav-link ${\r\n            location?.pathname.includes(to) ? 'active' : ''\r\n          }`}\r\n        >\r\n          <i className={`nav-icon ${icon}`}></i>\r\n          <p>\r\n            {label}\r\n            <i\r\n              className={\r\n                rotate\r\n                  ? 'right fas fa-angle-right toggle-up'\r\n                  : 'right fas fa-angle-right toggle-down'\r\n              }\r\n            ></i>\r\n          </p>\r\n        </a>\r\n        <ul\r\n          className={`list-unstyled nav-item-list ${\r\n            location?.pathname.includes(to) ? 'collapse show' : 'collapse'\r\n          }`}\r\n          id={`Submenu${id}`}\r\n        >\r\n          {multiLevel.map((item, idx) => (\r\n            <li key={idx} className=\"nav-item\">\r\n              <NavLink\r\n                exact\r\n                to={item?.to}\r\n                className={`nav-link`}\r\n                activeClassName=\"active\"\r\n              >\r\n                <i className={`${item.icon} nav-icon`}></i>\r\n                <p>\r\n                  {item?.label}\r\n                  {item?.badge > 0 && (\r\n                    <span className=\"badge badge-color right\">\r\n                      {item?.badge}\r\n                    </span>\r\n                  )}\r\n                </p>\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </li>\r\n    </>\r\n  ) : (\r\n    <li className=\"nav-item\">\r\n      <NavLink\r\n        exact\r\n        to={to}\r\n        className={`nav-link ${location?.pathname.includes(to) && 'active'}`}\r\n        activeClassName=\"active\"\r\n      >\r\n        <i className={`nav-icon ${icon}`}></i>\r\n        <p>{label}</p>\r\n      </NavLink>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default NavItem\r\n","import Swal from 'sweetalert2'\r\n\r\nexport const ToastSweetAlert = async({ message, mode }) => {\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    },\r\n  })\r\n\r\n  switch (mode) {\r\n    case 'ok':\r\n      return Toast.fire({\r\n        icon: 'success',\r\n        title: `${message}`,\r\n      })\r\n    case 'error':\r\n      return Toast.fire({\r\n        icon: 'error',\r\n        title: `${message}`,\r\n      })\r\n    case 'okModal':\r\n      Swal.fire({\r\n        title: 'Bien',\r\n        text: message,\r\n        icon: 'success',\r\n        customClass: {\r\n          confirmButton: 'btn btn-sm btn-accept',\r\n        },\r\n        buttonsStyling: false,\r\n        allowOutsideClick: false,\r\n      })\r\n      break\r\n    case 'errorModal':\r\n      Swal.fire({\r\n        title: 'Error',\r\n        text: message,\r\n        icon: 'error',\r\n        allowOutsideClick: false,\r\n        confirmButtonText: '<i class=\"fas fa-check\"> Aceptar</i>',\r\n        buttonsStyling: false,\r\n        customClass: {\r\n          confirmButton: 'btn btn-sm btn-accept',\r\n        },\r\n      })\r\n      break\r\n    default:\r\n  }\r\n}\r\n","import { gql } from '@apollo/client'\n\nexport const GET_COUNTERS_ORDERS = gql`\n  query GetAllCounters {\n    getAllCounters {\n      pendings\n      processing\n      billing\n      toSupply\n      collect\n      route\n      localShipping\n      nationalShipping\n      complete\n      rejected\n    }\n  }\n`\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { useQuery } from '@apollo/client'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Avatar from './../../Assets/Images/avatar-default.svg'\r\nimport NavItem from './NavItem'\r\nimport { Link } from 'react-router-dom'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport { GET_COUNTERS_ORDERS } from '../../graphql/Catalog/Orders/countOrders'\r\n\r\nexport const SideBar = ({\r\n  prefixIcon = 'fas fa-',\r\n  user = 'User',\r\n  iconApp,\r\n  logoIcon,\r\n  avatar = Avatar,\r\n  modules = [],\r\n}) => {\r\n  const [menu, setMenu] = useState([])\r\n  const [badges, setBadges] = useState([])\r\n   const {\r\n    data,\r\n    loading,\r\n    error,\r\n  } = useQuery(GET_COUNTERS_ORDERS)\r\n\r\n  useEffect(() => {\r\n    let listModule = []\r\n    modules.map((item) => {\r\n      const module = item\r\n      const submodule = item.submodule_info\r\n      if (submodule <= 0) {\r\n        if (\r\n          !module.module_info.relative_link.includes('?') &&\r\n          module?.access_read &&\r\n          item?.module_info.name !== 'UserProfileMain'\r\n        ) {\r\n          listModule.push({\r\n            name: module.module_info?.name,\r\n            label: module.module_info?.front_label,\r\n            link: module.module_info?.relative_link,\r\n            icon: module.module_info?.icon,\r\n            submodule: null,\r\n          })\r\n        }\r\n      } else {\r\n        let exists = listModule.find(\r\n          (item) => item.name === module.module_info.name\r\n        )\r\n\r\n        let listSubmodule = []\r\n\r\n        modules.map((item) => {\r\n          if (module?.module_info?.name === item?.module_info?.name) {\r\n            if (\r\n              !item.submodule_info?.relative_link.includes('?') &&\r\n              item?.access_read\r\n            ) {\r\n              listSubmodule.push({\r\n                name: item.submodule_info?.name,\r\n                label: item.submodule_info?.front_label,\r\n                link: item.submodule_info?.relative_link,\r\n                icon: item.submodule_info?.icon,\r\n              })\r\n            }\r\n          }\r\n          return null\r\n        })\r\n        if (!exists) {\r\n          listModule.push({\r\n            name: module.module_info?.name,\r\n            label: module.module_info?.front_label,\r\n            link: module.module_info?.relative_link,\r\n            icon: module.module_info?.icon,\r\n            submodule: listSubmodule,\r\n          })\r\n        }\r\n      }\r\n      return null\r\n    })\r\n    setMenu(listModule)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [modules])\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error)\r\n        return ToastSweetAlert({\r\n          mode: 'errorModal',\r\n          message: error.message,\r\n        })\r\n      setBadges(data.getAllCounters)\r\n    }\r\n  },[data, loading, error])\r\n\r\n  return (\r\n    // <!-- Main Sidebar Container -->\r\n    <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n      {/* <!-- Brand Logo --> */}\r\n      <Link to=\"/dashboard\" className=\"brand-link logo-switch\">\r\n        <img src={logoIcon} alt=\"Logo Small\" className=\"brand-image logo-xs\" />\r\n        <img src={iconApp} alt=\"Logo Large\" className=\"brand-image logo-xl\" />\r\n      </Link>\r\n\r\n      {/* <!-- Sidebar --> */}\r\n      <div className=\"sidebar\">\r\n        {/* <!-- Sidebar user panel (optional) --> */}\r\n        <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n          <div className=\"image  container-pic\">\r\n            <img\r\n              src={avatar}\r\n              className=\"img-circle avatar-preview elevation-2\"\r\n              alt=\"User\"\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <Link to={'/profile'} className=\"d-block\">\r\n              {user}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        {/* <!-- Sidebar Menu --> */}\r\n        <nav className=\"mt-2\">\r\n          <ul\r\n            className=\"nav nav-pills nav-sidebar flex-column\"\r\n            data-widget=\"treeview\"\r\n            role=\"menu\"\r\n            data-accordion=\"false\"\r\n          >\r\n            {/* <!-- Add icons to the links using the .nav-icon className */}\r\n            {/* with font-awesome or any other icon font library --> */}\r\n\r\n            <NavItem to=\"/dashboard\" icon=\"fas fa-home\" label=\"Dashboard\" />\r\n            {menu.map((item, idx) => {\r\n              if (!item.submodule) {\r\n                return (\r\n                  <NavItem\r\n                    key={`${idx}${item.link}`}\r\n                    to={`${item.link}`}\r\n                    icon={`${prefixIcon}${item?.icon}`}\r\n                    label={item.label}\r\n                  />\r\n                )\r\n              } else {\r\n                return (\r\n                  <NavItem\r\n                    id={idx}\r\n                    key={`${idx}${item.link}`}\r\n                    to={item.link}\r\n                    icon={`${prefixIcon}${item?.icon}`}\r\n                    label={item.label}\r\n                    multiLevel={item.submodule.map((itemSubmodule) => {\r\n                      return {\r\n                        label: itemSubmodule.label,\r\n                        icon: `${prefixIcon}${itemSubmodule?.icon}`,\r\n                        to: `${item.link}${itemSubmodule.link}`,\r\n                        badge:\r\n                          itemSubmodule.name === 'PendingOrders'\r\n                            ? badges.pendings\r\n                            : itemSubmodule.name === 'InProcessOrders'\r\n                            ? badges.processing\r\n                            : itemSubmodule.name === 'BillingOrders'\r\n                            ? badges.billing\r\n                            : itemSubmodule.name === 'ToStockOrders'\r\n                            ? badges.toSupply\r\n                            : itemSubmodule.name === 'LocalShippingOrders'\r\n                            ? badges.localShipping\r\n                            : itemSubmodule.name === 'NationalShippingOrders'\r\n                            ? badges.nationalShipping\r\n                            : itemSubmodule.name === 'ShippedOrders'\r\n                            ? badges.complete\r\n                            : itemSubmodule.name === 'RejectedOrders'\r\n                            ? badges.rejected\r\n                            : itemSubmodule.name === 'InRouteOrders'\r\n                            ? badges.route\r\n                            : itemSubmodule.name === 'CollectOrders'\r\n                            ? badges.collect\r\n                            : false,\r\n                      }\r\n                    })}\r\n                  />\r\n                )\r\n              }\r\n            })}\r\n          </ul>\r\n        </nav>\r\n        {/* <!-- /.sidebar-menu --> */}\r\n      </div>\r\n      {/* <!-- /.sidebar --> */}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default SideBar\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { AuthContext } from '../../Auth/AuthContext'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport { types } from '../../Types/types'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const Header = () => {\r\n  const { dispatch } = useContext(AuthContext)\r\n\r\n  const handleLogout = () => {\r\n    Swal.fire({\r\n      title: '¿Cerrar sesión?',\r\n      text: '¿Estas seguro de querer finalizar la sesión?',\r\n      icon: 'question',\r\n      allowOutsideClick: false,\r\n      buttonsStyling: false,\r\n      showDenyButton: true,\r\n      denyButtonText: '<i class=\"fas fa-times\"> Cancelar</i>',\r\n      confirmButtonText: '<i class=\"fas fa-minus-circle\"> Salir</i>',\r\n      customClass: {\r\n        confirmButton: 'btn btn-sm btn-accept',\r\n        denyButton: 'btn btn-sm btn-danger',\r\n      },\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          sessionStorage.removeItem('user')\r\n          sessionStorage.removeItem('requestPath')\r\n          localStorage.removeItem('token')\r\n          localStorage.removeItem('configSys')\r\n          localStorage.removeItem('platform')\r\n          ToastSweetAlert({\r\n            mode: 'ok',\r\n            message: 'Sesión finalizada',\r\n          })\r\n          setTimeout(() => {\r\n            dispatch({\r\n              type: types.logout,\r\n            })\r\n          }, 400)\r\n        } catch (error) {\r\n          ToastSweetAlert({\r\n            mode: 'errorModal',\r\n            message: error.message,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const resizeHanlder = () => {\r\n    const width = window.innerWidth\r\n    if (width <= 991) {\r\n      document.getElementById('sidebarMain').className =\r\n        'sidebar-mini layout-fixed sidebar-closed sidebar-collapse'\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.onresize = resizeHanlder\r\n  }, [])\r\n\r\n  return (\r\n    <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n      {/* <!-- Left navbar links --> */}\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className=\"nav-link menuBurguer\"\r\n            data-widget=\"pushmenu\"\r\n            href=\"/#\"\r\n            role=\"button\"\r\n          >\r\n            <i className=\"fas fa-bars\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* <!-- Right navbar links --> */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\" onClick={() => handleLogout()}>\r\n          <a\r\n            className=\"nav-link\"\r\n            data-widget=\"control-sidebar\"\r\n            data-slide=\"true\"\r\n            href=\"/#\"\r\n            role=\"button\"\r\n          >\r\n            <i className=\"fas fa-power-off\"></i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"main-footer\">\r\n      <strong>\r\n        Copyright &copy; {moment().format('YYYY')}{' '}\r\n        <a href=\"https://google.com\">DynamicSolutions</a>\r\n      </strong>\r\n      <div className=\"float-right d-none d-sm-inline-block\">\r\n        <b>Version</b> 1.0.0\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\nexport default Footer\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const DECRYPT_TOKEN = gql`\r\n  mutation decryptToken($token: String!) {\r\n    decryptToken(token: $token) {\r\n      id\r\n      user_name\r\n      name\r\n      first_name\r\n      last_name\r\n      avatar\r\n      role\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\nexport const AUTH_USER = gql`\r\n  mutation authUser($input: userLoginInput!) {\r\n    authUser(input: $input) {\r\n      token\r\n    }\r\n  }\r\n`\r\n\r\nexport const EMPTY = gql`\r\n  mutation _emptyMutation {\r\n    _empty\r\n  }\r\n`\r\n\r\nexport const APP_CONFIG = gql`\r\n  query AppConfig {\r\n    getConfigSys {\r\n      project_logo\r\n      project_name\r\n      project_mini_logo\r\n      project_favicon\r\n    }\r\n  }\r\n`\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_USERS = gql`\r\n  query getUsers($searchQuery: String, $limit: Int, $offset: Int) {\r\n    Users(searchQuery: $searchQuery, limit: $limit, offset: $offset) {\r\n      rows {\r\n        id\r\n        name\r\n        first_name\r\n        last_name\r\n        user_name\r\n        email\r\n        id_role\r\n      }\r\n      count\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER_BY_ID = gql`\r\n  query GetUserById($getUserByIdId: Int!) {\r\n    GetUserById(id: $getUserByIdId) {\r\n      name\r\n      id\r\n      first_name\r\n      last_name\r\n      user_name\r\n      email\r\n      id_role\r\n      id_store\r\n      password\r\n      id_address\r\n      id_user_register\r\n      id_avatar_file\r\n      avatar {\r\n        id\r\n        url\r\n      }\r\n      address {\r\n        id\r\n        street\r\n        external_number\r\n        internal_number\r\n        id_country\r\n        country {\r\n          id\r\n          name\r\n        }\r\n        id_state\r\n        state {\r\n          name\r\n          id\r\n          id_country\r\n        }\r\n        id_city\r\n        city {\r\n          id\r\n          name\r\n          id_state\r\n        }\r\n        id_municipality\r\n        municipality {\r\n          id\r\n          id_city\r\n          name\r\n        }\r\n        id_colony\r\n        colony {\r\n          id\r\n          name\r\n          id_municipality\r\n          zip_code\r\n        }\r\n        zip_code\r\n      }\r\n      contacts {\r\n        id\r\n        id_user\r\n        id_contact\r\n        contact_data {\r\n          id\r\n          name\r\n          lastname\r\n          second_lastname\r\n          phone\r\n          ext\r\n          mobile\r\n          email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const EXPORT_USERS = gql`\r\n  mutation GetAllUsersExport {\r\n    getAllUsersExport {\r\n      name\r\n      id\r\n      first_name\r\n      last_name\r\n      user_name\r\n      email\r\n      id_role\r\n      id_store\r\n      password\r\n      id_address\r\n      id_user_register\r\n      id_avatar_file\r\n      avatar {\r\n        id\r\n        url\r\n      }\r\n      address {\r\n        id\r\n        street\r\n        external_number\r\n        internal_number\r\n        id_country\r\n        country {\r\n          id\r\n          name\r\n        }\r\n        id_state\r\n        state {\r\n          name\r\n          id\r\n          id_country\r\n        }\r\n        id_city\r\n        city {\r\n          id\r\n          name\r\n          id_state\r\n        }\r\n        id_municipality\r\n        municipality {\r\n          id\r\n          id_city\r\n          name\r\n        }\r\n        id_colony\r\n        colony {\r\n          id\r\n          name\r\n          id_municipality\r\n          zip_code\r\n        }\r\n        zip_code\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_USER = gql`\r\n  mutation getOneUser($userId: Int!) {\r\n    getUser(userID: $userId) {\r\n      name\r\n      first_name\r\n      last_name\r\n      user_name\r\n    }\r\n  }\r\n`\r\nexport const GET_ALL_USER_PERMISSIONS = gql`\r\n  mutation getAllUserPermissions($userID: Int!) {\r\n    getAllUserPermissions(userID: $userID) {\r\n      id\r\n      id_module\r\n      module_info {\r\n        name\r\n        relative_link\r\n        icon\r\n        front_label\r\n      }\r\n      submodule_info {\r\n        name\r\n        relative_link\r\n        icon\r\n        front_label\r\n      }\r\n      id_submodule\r\n      access_retrieve\r\n      access_read\r\n      access_edit\r\n      access_delete\r\n      access_export\r\n    }\r\n  }\r\n`\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation RegisterUser(\r\n    $input: userRegisterInput!\r\n    $inputAvatar: Upload!\r\n    $inputAddress: addressInput!\r\n    $inputContact: [contactInput!]!\r\n  ) {\r\n    registerUser(\r\n      input: $input\r\n      inputAvatar: $inputAvatar\r\n      inputAddress: $inputAddress\r\n      inputContact: $inputContact\r\n    ) {\r\n      id\r\n      user_name\r\n      id_role\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_USER = gql`\r\n  mutation UpdateUser(\r\n    $userId: Int!\r\n    $inputAvatar: Upload\r\n    $input: userRegisterInput!\r\n    $addressId: Int!\r\n    $inputAddress: addressInput!\r\n    $inputContact: [contactInput!]!\r\n  ) {\r\n    updateUser(\r\n      userID: $userId\r\n      inputAvatar: $inputAvatar\r\n      input: $input\r\n      addressId: $addressId\r\n      inputAddress: $inputAddress\r\n      inputContact: $inputContact\r\n    )\r\n  }\r\n`\r\n\r\nexport const DELETE_USER = gql`\r\n  mutation DeleteUserMutation($id: Int!, $userId: Int!) {\r\n    deleteUser(id: $id, userId: $userId)\r\n  }\r\n`\r\n\r\nexport const CREATE_TOKEN_RECOVERY = gql`\r\n  mutation CreateRecoveryToken($userName: String!) {\r\n    createRecoveryToken(userName: $userName) {\r\n      id\r\n      token_recovery\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_PASSWORD = gql`\r\n  mutation RecoveryUserPassword($inputRecovery: passwordRecoveryInput!) {\r\n    recoveryUserPassword(inputRecovery: $inputRecovery)\r\n  }\r\n`\r\n\r\nexport const UPDATE_USER_PASSWORD = gql`\r\n  mutation PasswordUpdate(\r\n    $idUser: Int!\r\n    $currentPassword: String!\r\n    $password: String!\r\n  ) {\r\n    passwordUpdate(\r\n      id_user: $idUser\r\n      currentPassword: $currentPassword\r\n      password: $password\r\n    )\r\n  }\r\n`\r\n\r\nexport const CHECK_TOKEN_RECOVERY = gql`\r\n  mutation checkTokenRecovery($token: String!) {\r\n    checkTokenRecovery(token: $token)\r\n  }\r\n`\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport SideBar from './SideBar'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport { AuthContext } from './../../Auth/AuthContext'\r\nimport { useQuery } from '@apollo/client'\r\nimport { APP_CONFIG } from '../../graphql/Auth/auth'\r\nimport { GET_USER_BY_ID } from '../../graphql/Catalog/Users/user'\r\n\r\nexport const LayoutLogged = ({ children }) => {\r\n  const { user } = useContext(AuthContext)\r\n  const { data: dataAvatar } = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      getUserByIdId: parseInt(user.idUser),\r\n    },\r\n  })\r\n  const [dataSys, setDataSys] = useState({\r\n    appLogo: '',\r\n    appName: '',\r\n    appMiniLogo: '',\r\n    appFavicon: '',\r\n  })\r\n\r\n  const { loading, error, data } = useQuery(APP_CONFIG)\r\n\r\n  //LOAD SYSCONFIG\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (data !== undefined || data == null) {\r\n        if (error) return\r\n        setDataSys({\r\n          appLogo: data.getConfigSys.project_logo,\r\n          appName: data.getConfigSys.project_name,\r\n          appMiniLogo: data.getConfigSys.project_mini_logo,\r\n          appFavicon: data.getConfigSys.project_favicon,\r\n        })\r\n        localStorage.setItem('configSys', JSON.stringify(data.getConfigSys))\r\n\r\n        let headTitle = document.querySelector('head')\r\n        let setFavicon = document.createElement('link')\r\n        setFavicon.setAttribute('rel', 'icon')\r\n        setFavicon.setAttribute('href', `${data.getConfigSys.project_favicon}`)\r\n        headTitle.appendChild(setFavicon)\r\n      }\r\n    }\r\n  }, [loading, error, data])\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <SideBar\r\n        titleApp={dataSys.appName}\r\n        prefixIcon=\"fas fa-\"\r\n        iconApp={dataSys.appLogo}\r\n        logoIcon={dataSys.appMiniLogo}\r\n        user={user.name}\r\n        avatar={dataAvatar ? dataAvatar?.GetUserById.avatar.url : null}\r\n        modules={user.userPermissions}\r\n      />\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"content-fade\">{children}</div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutLogged\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { LayoutLogged } from '../Components/Layout/LayoutLogged'\r\n\r\nexport const PrivateRoute = ({ isAuth, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? (\r\n          <LayoutLogged>\r\n            <Component {...props} />\r\n          </LayoutLogged>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPrivateRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\nexport const LayoutUnlogged = ({ children }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <div className=\"content-fade-login\">{children}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayoutUnlogged\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { LayoutUnlogged } from '../Components/Layout/LayoutUnlogged'\r\n\r\nexport const PublicRoute = ({\r\n  isAuth,\r\n  userType,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? (\r\n          <>\r\n            <Redirect to=\"/dashboard\" />\r\n          </>\r\n        ) : (\r\n          <LayoutUnlogged>\r\n            <Component {...props} />\r\n          </LayoutUnlogged>\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.prototype = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n  userType: PropTypes.number.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { types } from '../../Types/types'\r\nimport { useMutation } from '@apollo/client'\r\nimport { AUTH_USER, DECRYPT_TOKEN } from '../../graphql/Auth/auth'\r\nimport { GET_ALL_USER_PERMISSIONS } from '../../graphql/Catalog/Users/user'\r\nimport { AuthContext } from '../../Auth/AuthContext'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport Logo from './../../Assets/Images/vinos-america-logo-01.svg'\r\n\r\nexport const Login = () => {\r\n  const { dispatch } = useContext(AuthContext)\r\n  const [form, setForm] = useState({\r\n    user: '',\r\n    password: '',\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [authUser] = useMutation(AUTH_USER)\r\n  const [decryptToken] = useMutation(DECRYPT_TOKEN)\r\n  const [getAllUserPermissions] = useMutation(GET_ALL_USER_PERMISSIONS)\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    try {\r\n      const { data: dataToken } = await authUser({\r\n        variables: {\r\n          input: {\r\n            userName: form.user,\r\n            password: form.password,\r\n          },\r\n        },\r\n      })\r\n      const token = dataToken.authUser.token\r\n      localStorage.setItem('token', token)\r\n      const { data: tokenData } = await decryptToken({\r\n        variables: {\r\n          token,\r\n        },\r\n      })\r\n      const decoded = tokenData.decryptToken\r\n      const { data: userPermissionsData } = await getAllUserPermissions({\r\n        variables: {\r\n          userID: decoded.id,\r\n        },\r\n      })\r\n      const userPermissions = userPermissionsData.getAllUserPermissions\r\n\r\n      dispatch({\r\n        type: types.login,\r\n        payload: {\r\n          logged: true,\r\n          idUser: decoded.id,\r\n          role: decoded.role,\r\n          email: decoded.email,\r\n          userPermissions,\r\n          avatar: decoded.avatar,\r\n          name: decoded.name,\r\n        },\r\n      })\r\n      setLoading(false)\r\n      /* return ToastSweetAlert({\r\n        mode: 'ok',\r\n        message: 'Sesión iniciada',\r\n      }) */\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <Link to=\"/\" className=\"h1 d-flex justify-content-center mb-5\">\r\n        <img src={Logo} className=\"img-logo-full\" alt=\"logo\" />\r\n      </Link>\r\n      <span>Inicio de sesión</span>\r\n      <div className=\"full-box\" id=\"boxLogin\">\r\n        <form onSubmit={handleLogin} method=\"post\" className=\"row\">\r\n          <div className=\"input-icons-login col-12\">\r\n            <input\r\n              id=\"user\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Usuario\"\r\n              onChange={(e) => setForm({ ...form, user: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"input-icons-login col-12\">\r\n            <input\r\n              id=\"pass\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Contraseña\"\r\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"actions-login col-12\">\r\n            <div className=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"remember\"\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"remember\">\r\n                Recordarme\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/recuperar-contraseña\">Olvidé mi contraseña</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"login-btn col-12\">\r\n            {loading ? (\r\n              <button\r\n                className=\"btn btn-accept btn-login\"\r\n                type=\"button\"\r\n                disabled\r\n              >\r\n                <span\r\n                  className=\"spinner-grow spinner-grow-sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></span>\r\n                <span className=\"sr-only\">Iniciando...</span>\r\n              </button>\r\n            ) : (\r\n              <button type=\"submit\" className=\"btn btn-accept btn-login\">\r\n                Iniciar sesión\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const ContentHeader = ({\r\n  title = 'Title',\r\n  breadcrumb = 'breadcrumb',\r\n  windowTitle = 'Window Title',\r\n}) => {\r\n  const _title = JSON.parse(localStorage.getItem('configSys'))\r\n\r\n  useEffect(() => {\r\n    document.title = `${_title?.project_name} | ${windowTitle}`\r\n  }, [title, windowTitle, _title?.project_name])\r\n\r\n  return (\r\n    <section className=\"content-header\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col-sm-6\">\r\n            <h1 className=\"header-title\">{title}</h1>\r\n          </div>\r\n          {breadcrumb !== '' && (\r\n            <div className=\"col-sm-6\">\r\n              <ol className=\"breadcrumb float-sm-right\">\r\n                <li className=\"breadcrumb-item\">\r\n                  <Link to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n                <li className=\"breadcrumb-item active\">{breadcrumb}</li>\r\n              </ol>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ContentHeader\r\n","import React from 'react'\r\nimport ContentHeader from './../../Layout/ContentHeader'\r\n\r\nexport const Content = () => {\r\n  return (\r\n    <div>\r\n      <ContentHeader title=\"\" breadcrumb=\"\" windowTitle=\"Dashboard\" />\r\n      {/* <!-- Small boxes (Stat box) --> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3 col-6\">\r\n          {/* <!-- small box --> */}\r\n          <div className=\"small-box\">\r\n            <div className=\"inner\">\r\n              <h3>150</h3>\r\n\r\n              <p>New Orders</p>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <i className=\"ion ion-bag\"></i>\r\n            </div>\r\n            <a href=\"#/\" className=\"small-box-footer\">\r\n              More info <i className=\"fas fa-arrow-circle-right\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ./col --> */}\r\n        <div className=\"col-lg-3 col-6\">\r\n          {/* <!-- small box --> */}\r\n          <div className=\"small-box\">\r\n            <div className=\"inner\">\r\n              <h3>\r\n                53<sup style={{ fontSize: '20px' }}>%</sup>\r\n              </h3>\r\n\r\n              <p>Bounce Rate</p>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <i className=\"ion ion-stats-bars\"></i>\r\n            </div>\r\n            <a href=\"/#\" className=\"small-box-footer\">\r\n              More info <i className=\"fas fa-arrow-circle-right\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ./col --> */}\r\n        <div className=\"col-lg-3 col-6\">\r\n          {/* <!-- small box --> */}\r\n          <div className=\"small-box\">\r\n            <div className=\"inner\">\r\n              <h3>44</h3>\r\n\r\n              <p>User Registrations</p>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <i className=\"ion ion-person-add\"></i>\r\n            </div>\r\n            <a href=\"/#\" className=\"small-box-footer\">\r\n              More info <i className=\"fas fa-arrow-circle-right\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ./col --> */}\r\n        <div className=\"col-lg-3 col-6\">\r\n          {/* <!-- small box --> */}\r\n          <div className=\"small-box\">\r\n            <div className=\"inner\">\r\n              <h3>65</h3>\r\n\r\n              <p>Unique Visitors</p>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <i className=\"ion ion-pie-graph\"></i>\r\n            </div>\r\n            <a href=\"/#\" className=\"small-box-footer\">\r\n              More info <i className=\"fas fa-arrow-circle-right\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* <!-- ./col --> */}\r\n      </div>\r\n      {/* <!-- /.row --> */}\r\n      {/* <!-- Main row --> */}\r\n      <div className=\"row\">\r\n        {/* <!-- Left col --> */}\r\n        <section className=\"col-lg-7 connectedSortable\">\r\n          {/* <!-- Custom tabs (Charts with tabs)--> */}\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">\r\n                <i className=\"fas fa-chart-pie mr-1\"></i>\r\n                Sales\r\n              </h3>\r\n              <div className=\"card-tools\">\r\n                <ul className=\"nav nav-pills ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      className=\"nav-link active\"\r\n                      href=\"#revenue-chart\"\r\n                      data-toggle=\"tab\"\r\n                    >\r\n                      Area\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      className=\"nav-link\"\r\n                      href=\"#sales-chart\"\r\n                      data-toggle=\"tab\"\r\n                    >\r\n                      Donut\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {/*<!-- /.card-header --> */}\r\n            <div className=\"card-body\">\r\n              <div className=\"tab-content p-0\">\r\n                {/* <!-- Morris chart - Sales --> */}\r\n                <div\r\n                  className=\"chart tab-pane active\"\r\n                  id=\"revenue-chart\"\r\n                  style={{ position: 'relative', height: '300px' }}\r\n                >\r\n                  <canvas\r\n                    id=\"revenue-chart-canvas\"\r\n                    height=\"300\"\r\n                    style={{ height: '300px' }}\r\n                  ></canvas>\r\n                </div>\r\n                <div\r\n                  className=\"chart tab-pane\"\r\n                  id=\"sales-chart\"\r\n                  style={{ position: 'relative', height: '300px' }}\r\n                >\r\n                  <canvas\r\n                    id=\"sales-chart-canvas\"\r\n                    height=\"300\"\r\n                    style={{ height: '300px' }}\r\n                  ></canvas>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/*<!-- /.card-body --> */}\r\n          </div>\r\n          {/* <!-- /.card --> */}\r\n\r\n          {/* <!-- DIRECT CHAT --> */}\r\n          <div className=\"card direct-chat direct-chat-primary\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">Direct Chat</h3>\r\n\r\n              <div className=\"card-tools\">\r\n                <span title=\"3 New Messages\" className=\"badge badge-primary\">\r\n                  3\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-tool\"\r\n                  data-card-widget=\"collapse\"\r\n                >\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-tool\"\r\n                  title=\"Contacts\"\r\n                  data-widget=\"chat-pane-toggle\"\r\n                >\r\n                  <i className=\"fas fa-comments\"></i>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-tool\"\r\n                  data-card-widget=\"remove\"\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {/* <!-- /.card-header --> */}\r\n            <div className=\"card-body\">\r\n              {/* <!-- Conversations are loaded here --> */}\r\n              <div className=\"direct-chat-messages\">\r\n                {/* <!-- Message. Default to the left --> */}\r\n                <div className=\"direct-chat-msg\">\r\n                  <div className=\"direct-chat-infos clearfix\">\r\n                    <span className=\"direct-chat-name float-left\">\r\n                      Alexander Pierce\r\n                    </span>\r\n                    <span className=\"direct-chat-timestamp float-right\">\r\n                      23 Jan 2:00 pm\r\n                    </span>\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-infos --> */}\r\n                  <img\r\n                    className=\"direct-chat-img\"\r\n                    src=\"dist/img/user1-128x128.jpg\"\r\n                    alt=\"message user\"\r\n                  />\r\n                  {/* <!-- /.direct-chat-img --> */}\r\n                  <div className=\"direct-chat-text\">\r\n                    Is this template really for free? That's unbelievable!\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-text --> */}\r\n                </div>\r\n                {/* <!-- /.direct-chat-msg --> */}\r\n\r\n                {/* <!-- Message to the right --> */}\r\n                <div className=\"direct-chat-msg right\">\r\n                  <div className=\"direct-chat-infos clearfix\">\r\n                    <span className=\"direct-chat-name float-right\">\r\n                      Sarah Bullock\r\n                    </span>\r\n                    <span className=\"direct-chat-timestamp float-left\">\r\n                      23 Jan 2:05 pm\r\n                    </span>\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-infos --> */}\r\n                  <img\r\n                    className=\"direct-chat-img\"\r\n                    src=\"dist/img/user3-128x128.jpg\"\r\n                    alt=\"message user\"\r\n                  />\r\n                  {/* <!-- /.direct-chat-img --> */}\r\n                  <div className=\"direct-chat-text\">You better believe it!</div>\r\n                  {/* <!-- /.direct-chat-text --> */}\r\n                </div>\r\n                {/* <!-- /.direct-chat-msg --> */}\r\n\r\n                {/* <!-- Message. Default to the left --> */}\r\n                <div className=\"direct-chat-msg\">\r\n                  <div className=\"direct-chat-infos clearfix\">\r\n                    <span className=\"direct-chat-name float-left\">\r\n                      Alexander Pierce\r\n                    </span>\r\n                    <span className=\"direct-chat-timestamp float-right\">\r\n                      23 Jan 5:37 pm\r\n                    </span>\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-infos --> */}\r\n                  <img\r\n                    className=\"direct-chat-img\"\r\n                    src=\"dist/img/user1-128x128.jpg\"\r\n                    alt=\"message user\"\r\n                  />\r\n                  {/* <!-- /.direct-chat-img --> */}\r\n                  <div className=\"direct-chat-text\">\r\n                    Working with AdminLTE on a great new app! Wanna join?\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-text --> */}\r\n                </div>\r\n                {/* <!-- /.direct-chat-msg --> */}\r\n\r\n                {/* <!-- Message to the right --> */}\r\n                <div className=\"direct-chat-msg right\">\r\n                  <div className=\"direct-chat-infos clearfix\">\r\n                    <span className=\"direct-chat-name float-right\">\r\n                      Sarah Bullock\r\n                    </span>\r\n                    <span className=\"direct-chat-timestamp float-left\">\r\n                      23 Jan 6:10 pm\r\n                    </span>\r\n                  </div>\r\n                  {/* <!-- /.direct-chat-infos --> */}\r\n                  <img\r\n                    className=\"direct-chat-img\"\r\n                    src=\"dist/img/user3-128x128.jpg\"\r\n                    alt=\"message user\"\r\n                  />\r\n                  {/* <!-- /.direct-chat-img --> */}\r\n                  <div className=\"direct-chat-text\">I would love to.</div>\r\n                  {/* <!-- /.direct-chat-text --> */}\r\n                </div>\r\n                {/* <!-- /.direct-chat-msg --> */}\r\n              </div>\r\n              {/* <!--/.direct-chat-messages--> */}\r\n\r\n              {/* <!-- Contacts are loaded here --> */}\r\n              <div className=\"direct-chat-contacts\">\r\n                <ul className=\"contacts-list\">\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user1-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          Count Dracula\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            2/28/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          How have you been? I was...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user7-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          Sarah Doe\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            2/23/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          I will be waiting for...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user3-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          Nadia Jolie\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            2/20/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          I'll call you back at...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user5-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          Nora S. Vans\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            2/10/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          Where is your new...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user6-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          John K.\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            1/27/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          Can I take a look at...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                  <li>\r\n                    <a href=\"/#\">\r\n                      <img\r\n                        className=\"contacts-list-img\"\r\n                        src=\"dist/img/user8-128x128.jpg\"\r\n                        alt=\"User Avatar\"\r\n                      />\r\n\r\n                      <div className=\"contacts-list-info\">\r\n                        <span className=\"contacts-list-name\">\r\n                          Kenneth M.\r\n                          <small className=\"contacts-list-date float-right\">\r\n                            1/4/2015\r\n                          </small>\r\n                        </span>\r\n                        <span className=\"contacts-list-msg\">\r\n                          Never mind I found...\r\n                        </span>\r\n                      </div>\r\n                      {/* <!-- /.contacts-list-info --> */}\r\n                    </a>\r\n                  </li>\r\n                  {/* <!-- End Contact Item --> */}\r\n                </ul>\r\n                {/* <!-- /.contacts-list --> */}\r\n              </div>\r\n              {/* <!-- /.direct-chat-pane --> */}\r\n            </div>\r\n            {/* <!-- /.card-body --> */}\r\n            <div className=\"card-footer\">\r\n              <form action=\"#\" method=\"post\">\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"message\"\r\n                    placeholder=\"Type Message ...\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <span className=\"input-group-append\">\r\n                    <button type=\"button\" className=\"btn btn-primary\">\r\n                      Send\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            {/* <!-- /.card-footer--> */}\r\n          </div>\r\n          {/* <!--/.direct-chat --> */}\r\n        </section>\r\n        {/* <!-- /.Left col --> */}\r\n        {/* <!-- right col (We are only adding the ID to make the widgets sortable)--> */}\r\n        <section className=\"col-lg-5 connectedSortable\">\r\n          {/* <!-- Map card --> */}\r\n          <div className=\"card bg-gradient-primary\">\r\n            <div className=\"card-header border-0\">\r\n              <h3 className=\"card-title\">\r\n                <i className=\"fas fa-map-marker-alt mr-1\"></i>\r\n                Visitors\r\n              </h3>\r\n              {/* <!-- card tools --> */}\r\n              <div className=\"card-tools\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-sm daterange\"\r\n                  title=\"Date range\"\r\n                >\r\n                  <i className=\"far fa-calendar-alt\"></i>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-sm\"\r\n                  data-card-widget=\"collapse\"\r\n                  title=\"Collapse\"\r\n                >\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n              </div>\r\n              {/* <!-- /.card-tools --> */}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div\r\n                id=\"world-map\"\r\n                style={{ height: '250px', width: '100%' }}\r\n              ></div>\r\n            </div>\r\n            {/* <!-- /.card-body--> */}\r\n            <div className=\"card-footer bg-transparent\">\r\n              <div className=\"row\">\r\n                <div className=\"col-4 text-center\">\r\n                  <div id=\"sparkline-1\"></div>\r\n                  <div className=\"text-white\">Visitors</div>\r\n                </div>\r\n                {/* <!-- ./col --> */}\r\n                <div className=\"col-4 text-center\">\r\n                  <div id=\"sparkline-2\"></div>\r\n                  <div className=\"text-white\">Online</div>\r\n                </div>\r\n                {/* <!-- ./col --> */}\r\n                <div className=\"col-4 text-center\">\r\n                  <div id=\"sparkline-3\"></div>\r\n                  <div className=\"text-white\">Sales</div>\r\n                </div>\r\n                {/* <!-- ./col --> */}\r\n              </div>\r\n              {/* <!-- /.row --> */}\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.card --> */}\r\n\r\n\r\n          {/* <!-- Calendar --> */}\r\n          <div className=\"card bg-gradient-success\">\r\n            <div className=\"card-header border-0\">\r\n              <h3 className=\"card-title\">\r\n                <i className=\"far fa-calendar-alt\"></i>\r\n                Calendar\r\n              </h3>\r\n              {/* <!-- tools card --> */}\r\n              <div className=\"card-tools\">\r\n                {/* <!-- button with a dropdown --> */}\r\n                <div className=\"btn-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-sm dropdown-toggle\"\r\n                    data-toggle=\"dropdown\"\r\n                    data-offset=\"-52\"\r\n                  >\r\n                    <i className=\"fas fa-bars\"></i>\r\n                  </button>\r\n                  <div className=\"dropdown-menu\" role=\"menu\">\r\n                    <a href=\"/#\" className=\"dropdown-item\">\r\n                      Add new event\r\n                    </a>\r\n                    <a href=\"/#\" className=\"dropdown-item\">\r\n                      Clear events\r\n                    </a>\r\n                    <div className=\"dropdown-divider\"></div>\r\n                    <a href=\"/#\" className=\"dropdown-item\">\r\n                      View calendar\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-sm\"\r\n                  data-card-widget=\"collapse\"\r\n                >\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success btn-sm\"\r\n                  data-card-widget=\"remove\"\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n              {/* <!-- /. tools --> */}\r\n            </div>\r\n            {/* <!-- /.card-header --> */}\r\n            <div className=\"card-body pt-0\">\r\n              {/* <!--The calendar --> */}\r\n              <div id=\"calendar\" style={{ width: '100%' }}></div>\r\n            </div>\r\n            {/* <!-- /.card-body --> */}\r\n          </div>\r\n          {/* <!-- /.card --> */}\r\n        </section>\r\n        {/* <!-- right col --> */}\r\n      </div>\r\n      {/* <!-- /.row (main row) --> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/client'\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  CHECK_TOKEN_RECOVERY,\r\n} from '../../graphql/Catalog/Users/user'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport Logo from './../../Assets/Images/vinos-america-logo-01.svg'\r\n\r\nexport const Verification = () => {\r\n  const [form, setForm] = useState({\r\n    password: '',\r\n    passwordConfirm: '',\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const { token: _token } = useParams()\r\n\r\n  const [updatePassword] = useMutation(UPDATE_PASSWORD)\r\n  const [dataToken] = useMutation(CHECK_TOKEN_RECOVERY)\r\n\r\n  useEffect(() => {\r\n    if (_token) {\r\n      async function validateToken() {\r\n        try {\r\n          await dataToken({\r\n            variables: {\r\n              token: _token,\r\n            },\r\n          })\r\n        } catch (error) {\r\n          ToastSweetAlert(\r\n            {\r\n              mode: 'errorModal',\r\n              message: error.message,\r\n            },\r\n            history.push('/recuperar-contraseña')\r\n          )\r\n        }\r\n      }\r\n      validateToken()\r\n    } else {\r\n      ToastSweetAlert(\r\n        {\r\n          mode: 'errorModal',\r\n          message: 'Acción no permitida',\r\n        },\r\n        history.push('/recuperar-contraseña')\r\n      )\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (form.password !== form.passwordConfirm) {\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: 'Las contraseñas no coinciden',\r\n      })\r\n    }\r\n    if (form.password === '' || form.passwordConfirm === '') {\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: 'Debe ingresar una contraseña',\r\n      })\r\n    }\r\n    setLoading(true)\r\n\r\n    try {\r\n      await updatePassword({\r\n        variables: {\r\n          inputRecovery: {\r\n            token: _token,\r\n            password: form.password,\r\n          },\r\n        },\r\n      })\r\n\r\n      setLoading(false)\r\n      return ToastSweetAlert(\r\n        {\r\n          mode: 'okModal',\r\n          message:\r\n            'Se actualizo correctamente tu contraseña. Ahora puedes iniciar sesión con tu nueva contraseña',\r\n        },\r\n        history.push('/login')\r\n      )\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <Link to=\"/\" className=\"h1\">\r\n        <img src={Logo} className=\"img-logo-full m-4\" alt=\"logo\" />\r\n      </Link>\r\n      <span className=\"mb-2\">Ingresa una nueva contraseña</span>\r\n      <div className=\"full-box\" id=\"boxLogin\">\r\n        <form onSubmit={handleSubmit} method=\"post\" className=\"row\">\r\n          <div className=\"input-icons-login col-12\">\r\n            <input\r\n              id=\"pass\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Nueva contraseña\"\r\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n            />\r\n          </div>\r\n          <div className=\"input-icons-login col-12\">\r\n            <input\r\n              id=\"pass\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirme la contraseña\"\r\n              onChange={(e) =>\r\n                setForm({ ...form, passwordConfirm: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"login-btn col-12\">\r\n            {loading ? (\r\n              <button className=\"btn btn-accept\" type=\"button\" disabled>\r\n                <span\r\n                  className=\"spinner-grow spinner-grow-sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></span>\r\n                <span className=\"sr-only\">Procesando...</span>\r\n              </button>\r\n            ) : (\r\n              <button type=\"submit\" className=\"btn btn-accept\">\r\n                Actualizar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Verification\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Error404 = () => {\r\n  return (\r\n    <div className=\"container-notfound\">\r\n      <div className=\"error-page\">\r\n        <h2 className=\"headline text-warning\"> 404</h2>\r\n\r\n        <div className=\"error-content\">\r\n          <h1 className=\"title-notfound\">\r\n            <i className=\"fas fa-exclamation-triangle text-warning\"></i>\r\n            &nbsp;&nbsp;Algo ha salido mal!\r\n          </h1>\r\n\r\n          <span className=\"subtitle-notfound\">\r\n            La página que estabas buscando no existe o no tienes permiso para\r\n            verla. Intenta\r\n            <Link to=\"/dashboard\"> regresar a la página principal</Link>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error404\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/client'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport Logo from './../../Assets/Images/vinos-america-logo-01.svg'\r\nimport { CREATE_TOKEN_RECOVERY } from '../../graphql/Catalog/Users/user'\r\n\r\nexport const RecoveryPassword = () => {\r\n  const [form, setForm] = useState({\r\n    userName: '',\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const [createTokenRecovery] = useMutation(CREATE_TOKEN_RECOVERY)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (form.userName === '') {\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message:\r\n          'Ingresa el nombre de usuario de la cuenta que quieres recuperar',\r\n      })\r\n    }\r\n    setLoading(true)\r\n    try {\r\n      await createTokenRecovery({\r\n        variables: {\r\n          userName: form.userName,\r\n        },\r\n      })\r\n      setLoading(false)\r\n      return ToastSweetAlert(\r\n        {\r\n          mode: 'okModal',\r\n          message:\r\n            'Se te ha enviado un correo con las indicaciones para restablecer tu contraseña',\r\n        },\r\n        history.push('/login')\r\n      )\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <Link to=\"/\" className=\"h1\">\r\n        <img src={Logo} className=\"img-logo-full m-4\" alt=\"logo\" />\r\n      </Link>\r\n      <span className=\"mb-2\">Recuperar contraseña</span>\r\n      <div className=\"full-box\">\r\n        <form onSubmit={handleSubmit} method=\"post\" className=\"row\">\r\n          <div className=\"input-icons-login col-12\">\r\n            <input\r\n              id=\"user\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Ingresa tu nombre de usuario\"\r\n              onChange={(e) => setForm({ ...form, userName: e.target.value })}\r\n            />\r\n          </div>\r\n          <caption className=\"col-12\">\r\n            Ingresa tu usuario para enviar un código para que restablezcas tu\r\n            contraseña{' '}\r\n          </caption>\r\n          <div className=\"login-btn col-12\">\r\n            {loading ? (\r\n              <button className=\"btn btn-accept btn-sm\" type=\"button\" disabled>\r\n                <span\r\n                  className=\"spinner-grow spinner-grow-sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></span>\r\n                <span className=\"sr-only\">Procesando...</span>\r\n              </button>\r\n            ) : (\r\n              <button type=\"submit\" className=\"btn btn-accept btn-sm\">\r\n                Solicitar\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecoveryPassword\r\n","import React from 'react'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div style={{ paddingBottom: '24px' }}>\r\n      <div\r\n        className=\"spinner-border\"\r\n        style={{ width: '5rem', height: '5rem' }}\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\"></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Loader\r\n","import React, { useEffect, useState, useContext } from 'react'\nimport DataTable from 'react-data-table-component'\nimport Loader from './Spinner'\nimport debounce from 'lodash.debounce'\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\nimport Swal from 'sweetalert2'\nimport { Link } from 'react-router-dom'\nimport { AuthContext } from './../../Auth/AuthContext'\nimport { useLocation } from 'react-router'\nimport { EMPTY } from './../../graphql/Auth/auth'\nimport { useMutation } from '@apollo/client'\nimport { CSVLink } from 'react-csv'\n\nexport const LayoutTable = ({\n  data = [],\n  title,\n  gql = EMPTY,\n  requery = EMPTY,\n  exportQuery = EMPTY,\n  editText = <i className=\"fas fa-edit\"></i>,\n  details = false,\n  platformSelector = false,\n  totalCount,\n  pagePagination,\n  setPagePagination,\n  loadingData,\n}) => {\n  const [columns, setColumns] = useState([])\n  const [cell, setCell] = useState([])\n  const [dataExported, setDataExported] = useState([])\n  const [FileNameExported, setFileNameExported] = useState('')\n  const [loadingExport, setLoadingExport] = useState(false)\n  const location = useLocation()\n  const [permissions, setPermissions] = useState({\n    create: false,\n    edit: false,\n    erase: false,\n    exportBtn: false,\n    permissionsBtn: false,\n    path: '',\n  })\n  const { create, edit, erase, exportBtn, permissionsBtn, path } = permissions\n  const { user } = useContext(AuthContext)\n\n  const [deleteItem] = useMutation(gql, {\n    refetchQueries: [\n      {\n        query: requery,\n        variables: { searchQuery: null, limit: 10, offset: 0, platform: null },\n      },\n    ],\n  })\n\n  const [exportItems] = useMutation(exportQuery)\n\n  //SET PERMISSIONS\n  useEffect(() => {\n    const permissions = user?.userPermissions\n    let listPermissions = []\n    permissions.map((item) => {\n      let moduleName = `${item?.module_info?.relative_link}`\n      if (moduleName === location.pathname) {\n        return (listPermissions = {\n          create: item.access_retrieve,\n          edit: item.access_edit,\n          erase: item.access_delete,\n          exportBtn: item.access_export,\n          path: item.module_info.relative_link,\n        })\n      }\n      return null\n    })\n    permissions.map((item) => {\n      let submoduleName = item.submodule_info?.relative_link\n      if (submoduleName) {\n        if (location.pathname.includes('new')) {\n          const relativePath = location.pathname\n            .split('new')[0]\n            .replace(/.$/, '')\n          const relativePathSplit = relativePath.split('/')\n          const submodulePath = relativePathSplit[relativePathSplit.length - 1]\n          if (submoduleName === `/${submodulePath}`) {\n            return (listPermissions = {\n              create: item.access_retrieve,\n              edit: item.access_edit,\n              erase: item.access_delete,\n              exportBtn: item.access_export,\n              path: `${item.module_info.relative_link}/${submodulePath}`,\n            })\n          }\n        }\n        if (location.pathname.includes('edit')) {\n          const relativePath = location.pathname\n            .split('edit')[0]\n            .replace(/.$/, '')\n          const relativePathSplit = relativePath.split('/')\n          const submodulePath = relativePathSplit[relativePathSplit.length - 1]\n          if (submoduleName === `/${submodulePath}`) {\n            return (listPermissions = {\n              create: item.access_retrieve,\n              edit: item.access_edit,\n              erase: item.access_delete,\n              exportBtn: item.access_export,\n              path: `${item.module_info.relative_link}/${submodulePath}`,\n            })\n          }\n        }\n        const relativePathSplit = location.pathname.split('/')\n        const submodulePath = relativePathSplit[relativePathSplit.length - 1]\n        if (submoduleName === `/${submodulePath}`) {\n          return (listPermissions = {\n            create: item.access_retrieve,\n            edit: item.access_edit,\n            erase: item.access_delete,\n            exportBtn: item.access_export,\n            path: `${item.module_info.relative_link}/${submodulePath}`,\n          })\n        }\n      }\n      return true\n    })\n    if (location.pathname === '/catalog/users') {\n      const checkBtnPermissions = permissions.some((permission) => {\n        if (permission?.module_info.name === 'UsersPermissions') {\n          if (permission?.access_read) {\n            return true\n          } else {\n            return false\n          }\n        }\n        return null\n      })\n      listPermissions.permissionsBtn = checkBtnPermissions\n    }\n    return setPermissions(listPermissions)\n  }, [location.pathname, user])\n\n  //SETTING DATA\n  useEffect(() => {\n    let columns = []\n    setCell(data)\n    if (data.length === 0) return\n    Object.keys(data[0]).map((item) => {\n      return columns.push({\n        name: item,\n        selector: (row) => row[item],\n        sortable: true,\n      })\n    })\n\n    columns.push({\n      name: 'Acciones',\n      button: true,\n      cell: (row) => (\n        <>\n          <div className=\"btn-group btn-actions-table\">\n            <Link\n              className=\"btn btn-accept btn-sm\"\n              to={`${path}/details/${row['id']}/show`}\n            >\n              Detalles\n            </Link>\n            {edit && (\n              <Link\n                className=\"btn btn-accept btn-sm\"\n                to={`${path}/edit/${row['id']}`}\n              >\n                {editText}\n              </Link>\n            )}\n\n            {erase && (\n              <button\n                type=\"button\"\n                className=\"btn btn-danger btn-sm\"\n                onClick={() => handleDelete(row['id'])}\n              >\n                <i className=\"fas fas fa-trash\"></i>\n              </button>\n            )}\n            {permissionsBtn && (\n              <Link\n                className=\"btn btn-warning btn-sm\"\n                to={`${path}/permissions/edit/${row['id']}`}\n              >\n                <i className=\"fas fa-lock\"></i>\n              </Link>\n            )}\n          </div>\n        </>\n      ),\n    })\n    setColumns(columns)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    data,\n    edit,\n    erase,\n    permissionsBtn,\n    path,\n    loadingExport,\n    dataExported,\n    loadingData,\n  ])\n\n  //PAGINATION OPTIONS DATA TABLE\n  const Options = {\n    rowsPerPageText: 'Filas por página',\n    rangeSeparatorText: 'de',\n    // selectAllRowsItem: true,\n    // selectAllRowsItemText: 'Todos',\n  }\n\n  const handleDelete = async (id) => {\n    Swal.fire({\n      title: '¿Eliminar registro?',\n      text: 'Esta acción no se podra revertir',\n      icon: 'warning',\n      allowOutsideClick: false,\n      buttonsStyling: false,\n      showDenyButton: true,\n      denyButtonText: '<i class=\"fas fa-times\"> Cancelar</i>',\n      confirmButtonText: '<i class=\"fas fa-minus-circle\"> Eliminar</i>',\n      customClass: {\n        confirmButton: 'btn btn-sm btn-accept',\n        denyButton: 'btn btn-sm btn-danger',\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        try {\n          deleteItem({\n            variables: {\n              id: parseInt(id),\n              userId: parseInt(user.idUser),\n            },\n          })\n          return ToastSweetAlert({\n            mode: 'ok',\n            message: 'Registro eliminado',\n          })\n        } catch (error) {\n          ToastSweetAlert({\n            mode: 'errorModal',\n            message: error.message,\n          })\n        }\n      }\n    })\n  }\n\n  //LOGIC FOR FILTER DATA\n  const handleSearh = (value) => {\n    const query = value.target.value.toLowerCase()\n    if (!query) {\n      setCell(data)\n    }\n    setPagePagination({\n      limit: 10,\n      offset: 0,\n      searchQuery: query,\n      platform: pagePagination?.platform,\n    })\n  }\n\n  //LOGIC DATA PAGINATION\n  const handlePageChange = (page) => {\n    setPagePagination({\n      ...pagePagination,\n      limit: pagePagination.limit,\n      offset: pagePagination.limit * (page - 1),\n    })\n  }\n\n  const handlePerRowsChange = async (newPerPage) => {\n    setPagePagination({ ...pagePagination, limit: newPerPage })\n  }\n\n  const getDataToExport = async () => {\n    if (!loadingExport) {\n      setLoadingExport(true)\n      try {\n        const dataExported = await exportItems()\n        const nameOperation = exportQuery.definitions[0].name.value\n        const camelCaseNameOperation =\n          nameOperation.charAt(0).toLowerCase() + nameOperation.slice(1)\n        const fileName = nameOperation.slice(6)\n        setFileNameExported(fileName)\n        setDataExported(dataExported.data[`${camelCaseNameOperation}`])\n        document.getElementById('exportfileCSV').click()\n        setLoadingExport(false)\n        ToastSweetAlert({\n          mode: 'ok',\n          message: 'CSV Generado',\n        })\n      } catch (error) {\n        setLoadingExport(false)\n        ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"card layout-configs\">\n      <div className=\"card-header\">\n        <h3 className=\"card-title\">{title}</h3>\n        <div className=\"control-btn-box\">\n          <>\n            <div\n              className=\"btn-group actions-btn\"\n              role=\"group\"\n              aria-label=\"Button group with nested dropdown\"\n            >\n              <div className=\"btn-group\" role=\"group\">\n                {exportBtn && (\n                  <>\n                    <button\n                      id=\"btnGroupDrop1\"\n                      type=\"button\"\n                      className=\"btn btn-accept btn-sm\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      disabled={loadingExport}\n                    >\n                      <i className=\"fas fa-cloud-download-alt\"></i>\n                    </button>\n                    <div\n                      className=\"dropdown-menu\"\n                      aria-labelledby=\"btnGroupDrop1\"\n                    >\n                      <>\n                        <CSVLink\n                          id=\"exportfileCSV\"\n                          filename={FileNameExported}\n                          data={dataExported}\n                          className=\"hide\"\n                        ></CSVLink>\n                        <span\n                          className=\"dropdown-item pointer\"\n                          onClick={getDataToExport}\n                        >\n                          <i className=\"fas fa-file-export\"></i> Exportar CSV\n                        </span>\n                      </>\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {create && (\n                <Link to={`${path}/new`} className=\"btn btn-accept btn-sm\">\n                  <i className=\"fa fa-plus\"></i> Agregar Nuevo &nbsp;\n                </Link>\n              )}\n            </div>\n          </>\n        </div>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <DataTable\n            columns={columns}\n            data={cell}\n            expandOnRowClicked\n            fixedHeader\n            fixedHeaderScrollHeight=\"600px\"\n            highlightOnHover\n            pagination\n            paginationComponentOptions={Options}\n            pointerOnHover\n            responsive\n            striped\n            subHeader\n            subHeaderAlign=\"left\"\n            subHeaderWrap\n            // actions={\n            //   platformSelector && (\n            //\n            //     <div className=\"platform-selector\">\n            //       <div className=\"row\">\n            //         <div className=\"col-s6 mr-3\">\n            //           <i className=\"fa fa-filter\"></i>\n            //         </div>\n            //         <div className=\"col-s6\">\n            //           <select\n            //             className=\"form-control\"\n            //             type=\"select\"\n            //             onChange={(e) =>\n            //               setPagePagination({\n            //                 ...pagePagination,\n            //                 platform: parseInt(e.target.value),\n            //               })\n            //             }\n            //           >\n            //             <option value=\"\" disabled>\n            //               Selecciona una opción\n            //             </option>\n            //             <option value=\"\">Todas</option>\n            //             <option value=\"1\">Woocomerce</option>\n            //             <option value=\"2\">MercadoLibre</option>\n            //             <option value=\"3\">Amazon</option>\n            //           </select>\n            //         </div>\n            //       </div>\n            //     </div>\n            //   )\n            // }\n            // subHeaderComponent={\n            //   <div className=\"input-icons col-md-6 col-sm-12\">\n            //     <i className=\"fa fa-search icon\"></i>\n            //     <input\n            //       type=\"text\"\n            //       className=\"input-field form-control position-searchInput\"\n            //       placeholder=\"Buscar\"\n            //       onChange={debounce(handleSearh, 300)}\n            //     />\n            //   </div>\n            // }\n            paginationServer\n            onChangeRowsPerPage={handlePerRowsChange}\n            onChangePage={handlePageChange}\n            paginationTotalRows={totalCount}\n            noDataComponent=\"No se encontraros datos\"\n            progressPending={loadingData}\n            progressComponent={<Loader />}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default LayoutTable\n","import React, { useEffect, useState } from 'react'\r\nimport ContentHeader from '../../../../Components/Layout/ContentHeader'\r\nimport LayoutTable from '../../../../Components/Global/LayoutTable'\r\nimport { useQuery } from '@apollo/client'\r\nimport {\r\n  GET_USERS,\r\n  DELETE_USER,\r\n  EXPORT_USERS,\r\n} from '../../../../graphql/Catalog/Users/user'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\n\r\nconst List = () => {\r\n  const [pagePagination, setPagePagination] = useState({\r\n    searchQuery: null,\r\n    limit: 10,\r\n    offset: 0,\r\n  })\r\n  const [total, setTotal] = useState(0)\r\n  const { loading, error, data } = useQuery(GET_USERS, {\r\n    variables: {\r\n      searchQuery: pagePagination.searchQuery,\r\n      limit: pagePagination.limit,\r\n      offset: pagePagination.offset,\r\n    },\r\n  })\r\n  const [dataToTable, setDataToTable] = useState([])\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error)\r\n        return ToastSweetAlert({\r\n          mode: 'errorModal',\r\n          message: error.message,\r\n        })\r\n      let list = []\r\n      data.Users.rows.map((item) => {\r\n        return list.push({\r\n          id: item.id,\r\n          Nombre: item.name,\r\n          'Apellido Paterno': item.first_name,\r\n          'Apellido Materno': item.last_name,\r\n          Usuario: item.user_name,\r\n        })\r\n      })\r\n      setDataToTable(list)\r\n      setTotal(data.Users.count)\r\n    }\r\n  }, [loading, error, data])\r\n\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Control de usuarios\"\r\n        breadcrumb=\"Usuarios\"\r\n        windowTitle=\"Usuarios\"\r\n      />\r\n      <LayoutTable\r\n        data={dataToTable}\r\n        title=\"Lista de usuarios\"\r\n        gql={DELETE_USER}\r\n        requery={GET_USERS}\r\n        exportQuery={EXPORT_USERS}\r\n        totalCount={total}\r\n        pagePagination={pagePagination}\r\n        setPagePagination={setPagePagination}\r\n        loadingData={loading}\r\n      />\r\n    </>\r\n  )\r\n}\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\n\r\nexport const Box = ({\r\n  title = 'title',\r\n  btnGreenTxt = false,\r\n  btnGreenPath = '/',\r\n  btnRedTxt = false,\r\n  btnRedPath = '/',\r\n  content = '',\r\n  btnSubmit = false,\r\n  btnState = false,\r\n  btnOnClick = false,\r\n  errors = false,\r\n}) => {\r\n  const { id: _id } = useParams()\r\n  useEffect(() => {\r\n    if (Object.values(errors).length > 0) {\r\n      ToastSweetAlert({\r\n        mode: 'error',\r\n        message: 'Hay errores, revisa el formulario',\r\n      })\r\n    }\r\n  }, [errors])\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">{title}</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {content}\r\n          <div className=\"control-btn-box\">\r\n            {btnGreenTxt && (\r\n              <Link\r\n                to={btnGreenPath}\r\n                className=\"btn btn-accept btn-sm mt-2 mb-2\"\r\n              >\r\n                <i className=\"fa fa-plus\"></i> {btnGreenTxt}\r\n              </Link>\r\n            )}\r\n            {btnRedTxt && (\r\n              <Link to={btnRedPath} className=\"btn btn-danger btn-sm mt-2 mb-2\">\r\n                <i className=\"fa fa-times\"></i> {btnRedTxt}\r\n              </Link>\r\n            )}\r\n            {btnOnClick && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={btnOnClick}\r\n                className=\"btn btn-accept btn-sm mt-2 mb-2\"\r\n                disabled={btnState ? true : false}\r\n              >\r\n                <i className={`${_id ? 'fa fa-edit' : 'fa fa-save'}`}></i>\r\n                {btnState ? ' Procesando...' : _id ? ' Actualizar' : ' Guardar'}\r\n              </button>\r\n            )}\r\n            {btnSubmit && (\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-accept btn-sm mt-2 mb-2\"\r\n                disabled={btnState ? true : false}\r\n              >\r\n                <i className={`${_id ? 'fa fa-edit' : 'fa fa-save'}`}></i>\r\n                {btnState ? ' Procesando...' : _id ? ' Actualizar' : ' Guardar'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Box\r\n","import {gql} from '@apollo/client'\r\n\r\nexport const SEPOMEX_MUTATION = gql`\r\n  mutation GetFullAddressByZipcodeMutation($zipCode: Int!) {\r\n  getFullAddressByZipcode(zipCode: $zipCode) {\r\n      id\r\n      colonies {\r\n        id_colony\r\n        colony_name\r\n      }\r\n      id_municipality\r\n      municipality_name\r\n      id_city\r\n      city_name\r\n      id_state\r\n      state_name\r\n      id_country\r\n      country_name\r\n  }\r\n}\r\n`","export const setUserValues = (reset, Data, setAddressId, getAdress) => {\r\n  if (Data) {\r\n    const contacts = Data.contacts.map((contact, index) => {\r\n      return {\r\n        contactName: `${contact.contact_data.name}`,\r\n        paternalSurname: `${contact.contact_data.lastname}`,\r\n        maternalSurname: `${contact.contact_data.second_lastname}`,\r\n        phone: contact.contact_data.phone,\r\n        ext: contact.contact_data.ext,\r\n        cell: contact.contact_data.mobile,\r\n        email: contact.contact_data.email,\r\n      }\r\n    })\r\n    const dataFormated = {\r\n      name: `${Data.name}`,\r\n      firstName: `${Data.first_name}`,\r\n      lastName: `${Data.last_name}`,\r\n      userName: `${Data.user_name}`,\r\n      userEmail: `${Data.email}`,\r\n      userRole: `${Data.id_role}`,\r\n      userStore: `${Data.id_store}`,\r\n      direction: `${Data.address.street}`,\r\n      outdoorNumber: `${Data.address.external_number}`,\r\n      interiorNumber: `${Data.address.internal_number}`,\r\n      city: `${Data.address.city.name}`,\r\n      municipality: `${Data.address.municipality}`,\r\n      state: `${Data.address.state.name}`,\r\n      colonia: `${Data.address.id_colony}`,\r\n      postalCode: `${Data.address.zip_code}`,\r\n      contacts: contacts,\r\n      avatar: Data?.avatar?.url,\r\n    }\r\n    reset(dataFormated)\r\n\r\n    setAddressId(Data.id_address)\r\n\r\n    getAdress(Data.address.zip_code)\r\n  }\r\n}\r\n\r\nexport const setZipValues = (setValue, setColonies, Data, setZip) => {\r\n  const list = Data.colonies.map((colony) => {\r\n    return { label: colony.colony_name, value: colony.id_colony }\r\n  })\r\n  setColonies(list)\r\n  setZip({\r\n    city: Data.city_name,\r\n    municipality: Data.municipality_name,\r\n    state: Data.state_name,\r\n    idCountry: Data.id_country,\r\n    idState: Data.id_state,\r\n    idCity: Data.id_city,\r\n    idMunicipality: Data.id_municipality,\r\n  })\r\n  setValue('city', Data.municipality_name)\r\n  setValue('municipality', Data.state_name)\r\n  setValue('state', Data.state_name)\r\n}\r\n\r\nexport const setZipNullValues = (setValue) => {\r\n  setValue('colonia', '')\r\n  setValue('city', '')\r\n  setValue('municipality', '')\r\n  setValue('state', '')\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_ROLES = gql`\r\n  query GetAllRoles($searchQuery: String, $limit: Int, $offset: Int) {\r\n    getAllRoles(searchQuery: $searchQuery, limit: $limit, offset: $offset) {\r\n      rows {\r\n        id\r\n        role_name\r\n        description\r\n      }\r\n      count\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_ROLE_BY_ID = gql`\r\n  query GetOneRole($getOneRoleId: Int!) {\r\n    getOneRole(id: $getOneRoleId) {\r\n      id\r\n      role_name\r\n      description\r\n    }\r\n  }\r\n`\r\n\r\nexport const EXPORT_ROLES = gql`\r\n  mutation GetAllRolesExport {\r\n    getAllRolesExport {\r\n      role_name\r\n      description\r\n      id_user_register\r\n      id_user_delete\r\n      id_user_update\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_ROLE = gql`\r\n  mutation CreateRole($input: RoleInput!) {\r\n    createRole(input: $input) {\r\n      id\r\n      role_name\r\n      description\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_ROLE = gql`\r\n  mutation UpdateRole($roleId: Int!, $input: RoleInput!) {\r\n    updateRole(roleId: $roleId, input: $input)\r\n  }\r\n`\r\n\r\nexport const DELETE_ROLE = gql`\r\n  mutation DeleteRole($id: Int!, $userId: Int!) {\r\n    deleteRole(id: $id, userId: $userId)\r\n  }\r\n`\r\n","import { gql } from '@apollo/client'\n\nexport const GET_STORES = gql`\n  query GetAllStores($searchQuery: String, $limit: Int, $offset: Int) {\n  getAllStores(searchQuery: $searchQuery, limit: $limit, offset: $offset) {\n    rows {\n      id\n      name\n    }\n  }\n}\n`","import * as Yup from 'yup'\r\n\r\nconst RfcValidator =\r\n  /^([A-ZÑ\\x26]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1]))((-)?([A-Z\\d]{3}))?$/\r\n\r\nconst userNameValidator = /^[a-zA-Z0-9]*$/\r\n\r\nconst contactsValidator = Yup.array().of(\r\n  Yup.object().shape({\r\n    contactName: Yup.string().required('Este campo es obligatorio'),\r\n    paternalSurname: Yup.string().required('Este campo es obligatorio'),\r\n    maternalSurname: Yup.string(),\r\n    phone: Yup.string()\r\n      .min(10, 'El número de teléfono debe ser a 10 digitos')\r\n      .max(10, 'El número de teléfono debe ser a 10 digitos')\r\n      .required('Este campo es obligatorio'),\r\n    cell: Yup.string()\r\n      .min(10, 'El número de teléfono debe ser a 10 digitos')\r\n      .max(10, 'El número de teléfono debe ser a 10 digitos')\r\n      .required('Este campo es obligatorio'),\r\n    email: Yup.string()\r\n      .email('Email inválido')\r\n      .required('Este campo es obligatorio'),\r\n  })\r\n)\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  name: Yup.string().required('Este campo es obligatorio'),\r\n  RFC: Yup.string()\r\n    .matches(RfcValidator, 'RFC inválido')\r\n    .required('Este campo es obligatorio'),\r\n  socialReason: Yup.string().required('Este campo es obligatorio'),\r\n  direction: Yup.string().required('Este campo es obligatorio'),\r\n  outdoorNumber: Yup.string().required('Este campo es obligatorio'),\r\n  postalCode: Yup.string()\r\n    .min(4, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .max(6, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .required('Este campo es obligatorio'),\r\n  colonia: Yup.string().required('Este campo es obligatorio'),\r\n  city: Yup.string().required('Este campo es obligatorio'),\r\n  municipality: Yup.string().required('Este campo es obligatorio'),\r\n  state: Yup.string().required('Este campo es obligatorio'),\r\n  contacts: contactsValidator,\r\n})\r\n\r\nexport const validationSchemaUser = Yup.object().shape({\r\n  name: Yup.string().required('Este campo es obligatorio'),\r\n  firstName: Yup.string().required('Este campo es obligatorio'),\r\n  lastName: Yup.string(),\r\n  userEmail: Yup.string()\r\n    .email('Email inválido')\r\n    .required('Este campo es obligatorio'),\r\n  userName: Yup.string()\r\n    .matches(\r\n      userNameValidator,\r\n      'El nombre de usuario sólo puede contener letras y números, sin espacios'\r\n    )\r\n    .required('Este campo es obligatorio'),\r\n  password: Yup.string()\r\n    .min(6, 'La contraseña debe tener al menos 6 caracteres')\r\n    .required('Este campo es obligatorio'),\r\n  passwordConfirm: Yup.string()\r\n    .required('Necesita confirmar la contraseña')\r\n    .oneOf([Yup.ref('password'), null], 'La contraseña no coincide'),\r\n  direction: Yup.string().required('Este campo es obligatorio'),\r\n  outdoorNumber: Yup.string().required('Este campo es obligatorio'),\r\n  postalCode: Yup.string()\r\n    .min(4, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .max(6, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .required('Este campo es obligatorio'),\r\n  colonia: Yup.string().required('Este campo es obligatorio'),\r\n  city: Yup.string().required('Este campo es obligatorio'),\r\n  municipality: Yup.string().required('Este campo es obligatorio'),\r\n  state: Yup.string().required('Este campo es obligatorio'),\r\n  userRole: Yup.string().required('Este campo es obligatorio'),\r\n  userStore: Yup.string(),\r\n  contacts: contactsValidator,\r\n  // avatar: Yup.string().required('Este campo es obligatorio'),\r\n})\r\n\r\nexport const validationSchemaUserUpdate = Yup.object().shape({\r\n  name: Yup.string().required('Este campo es obligatorio'),\r\n  firstName: Yup.string().required('Este campo es obligatorio'),\r\n  lastName: Yup.string(),\r\n  userEmail: Yup.string()\r\n    .email('Email inválido')\r\n    .required('Este campo es obligatorio'),\r\n  userName: Yup.string()\r\n    .matches(\r\n      userNameValidator,\r\n      'El nombre de usuario sólo puede contener letras y números, sin espacios'\r\n    )\r\n    .required('Este campo es obligatorio'),\r\n  direction: Yup.string().required('Este campo es obligatorio'),\r\n  outdoorNumber: Yup.string().required('Este campo es obligatorio'),\r\n  postalCode: Yup.string()\r\n    .min(4, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .max(6, 'El CP debe ser mayor a 4 y menor a 6 dígitos')\r\n    .required('Este campo es obligatorio'),\r\n  colonia: Yup.string().required('Este campo es obligatorio'),\r\n  city: Yup.string().required('Este campo es obligatorio'),\r\n  municipality: Yup.string().required('Este campo es obligatorio'),\r\n  state: Yup.string().required('Este campo es obligatorio'),\r\n  userRole: Yup.string().required('Este campo es obligatorio'),\r\n  userStore: Yup.string(),\r\n  contacts: contactsValidator,\r\n  // avatar: Yup.string().required('Este campo es obligatorio'),\r\n})\r\n\r\nexport const passwordValidator = Yup.object().shape({\r\n  currentPassword: Yup.string().required('Este campo es requerido'),\r\n  password: Yup.string()\r\n    .min(6, 'La contraseña debe tener al menos 6 caracteres')\r\n    .required('Este campo es obligatorio'),\r\n  passwordConfirm: Yup.string()\r\n    .required('Necesita confirmar la contraseña')\r\n    .oneOf([Yup.ref('password'), null], 'La contraseña no coincide'),\r\n})\r\n","import React, { useRef, useState } from 'react'\r\nimport { debounce } from 'lodash'\r\nimport Cropper from 'react-cropper'\r\n\r\nexport const CropperImage = ({ _image, setCropper }) => {\r\n  const [image] = useState(_image)\r\n  const cropperRef = useRef()\r\n\r\n  const doAction = useRef(\r\n    debounce((e) => {\r\n      handleCrop(e)\r\n    }, 350)\r\n  ).current\r\n\r\n  const handleCrop = () => {\r\n    \r\n    const imageElement = cropperRef?.current\r\n    setCropper(imageElement?.cropper.getCroppedCanvas())\r\n  }\r\n  return (\r\n    <Cropper\r\n      className=\"cropper-component\"\r\n      dragMode=\"move\"\r\n      modal={true}\r\n      zoomTo={0.5}\r\n      initialAspectRatio={1}\r\n      src={image}\r\n      viewMode={1}\r\n      minCropBoxHeight={10}\r\n      minCropBoxWidth={10}\r\n      background={true}\r\n      responsive={true}\r\n      autoCropArea={1}\r\n      checkOrientation={false}\r\n      crop={doAction}\r\n      ref={cropperRef}\r\n      guides={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CropperImage\r\n","import { ToastSweetAlert } from './ToastSweetAlert'\r\n\r\n//MORE SIGNATURES\r\n//en.wikipedia.org/wiki/List_of_file_signatures\r\n\r\nexport async function FileValidator(image, validateFormat) {\r\n  try {\r\n    var blob = image\r\n    var fr = new FileReader()\r\n    const format = validateFormat.toLowerCase()\r\n    return new Promise((resolve) => {\r\n      fr.onload = function (e) {\r\n        var arr = new Uint8Array(e.target.result).subarray(0, 4)\r\n        var header = ''\r\n        for (var i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16)\r\n        }\r\n        switch (format) {\r\n          case 'all':\r\n            return resolve(true)\r\n          case 'png': //\"PNG\"\r\n            if (header === '89504e47') return resolve(true)\r\n            else return resolve(false)\r\n          case 'jpg':\r\n          case 'jpge': //\"JPG JPGE\"\r\n            switch (header) {\r\n              case 'ffd8ffe0':\r\n              case 'ffd8ffe1':\r\n              case 'ffd8ffe2':\r\n              case 'ffd8ffe3':\r\n              case 'ffd8ffe8':\r\n              case 'ffd8ffdb':\r\n                return resolve(true)\r\n              default:\r\n                return resolve(false)\r\n            }\r\n          case 'icon': //\"JPG\"\r\n            if (header === '00000100') return resolve(true)\r\n            else return resolve(false)\r\n          case 'imageavatar': //JPG, JPGE, PNG,\r\n            switch (header) {\r\n              case 'ffd8ffe0':\r\n              case 'ffd8ffe1':\r\n              case 'ffd8ffe2':\r\n              case 'ffd8ffe3':\r\n              case 'ffd8ffe8':\r\n              case 'ffd8ffdb':\r\n              case '89504e47':\r\n                return resolve(true)\r\n              default:\r\n                return resolve(false)\r\n            }\r\n          case 'pdf': //PDF\r\n            if (header === '255044462D') return resolve(true)\r\n            else return resolve(false)\r\n          default:\r\n            return resolve(false)\r\n        }\r\n      }\r\n      fr.readAsArrayBuffer(blob)\r\n    })\r\n  } catch (e) {\r\n    return ToastSweetAlert({\r\n      mode: 'errorModal',\r\n      message: 'Algo salio mal, vuelve a intentar en unos minutos',\r\n    })\r\n  }\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const UPLOAD_FILE = gql`\r\n  mutation UploadFile($file: Upload!) {\r\n    uploadFile(file: $file) {\r\n      url\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPLOAD_MULTIPLE_FILES = gql`\r\n  mutation UploadMultipleFile($file: [Upload!]!) {\r\n    uploadMultipleFile(file: $file) {\r\n      url\r\n    }\r\n  }\r\n`\r\nexport const UPLOAD_IMAGE = gql`\r\n  mutation UploadImage($file: Upload!) {\r\n    uploadImage(file: $file) {\r\n      url\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPLOAD_MULTIPLE_IMAGES = gql`\r\n  mutation UploadMultipleImage($file: [Upload!]!) {\r\n    uploadMultipleImage(file: $file) {\r\n      url\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_AVATAR = gql`\r\nmutation AvatarUpdate($idUser: Int!, $avatar: Upload!) {\r\n  avatarUpdate(id_user: $idUser, avatar: $avatar)\r\n}\r\n`\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport Avatar from '../../Assets/Images/avatar-default.svg'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport { useController } from 'react-hook-form'\r\nimport { debounce } from 'lodash'\r\nimport CropperImage from './CropperImage'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport Swal from 'sweetalert2'\r\nimport { FileValidator } from '../Helpers/GenericFunctions'\r\nimport { ToastSweetAlert } from '../Helpers/ToastSweetAlert'\r\nimport { UPDATE_AVATAR } from '../../graphql/Global/uploadFiles'\r\nimport { useMutation } from '@apollo/client'\r\nimport { GET_USER_BY_ID } from '../../graphql/Catalog/Users/user'\r\n\r\nexport const InputController = ({\r\n  label,\r\n  name,\r\n  control,\r\n  rows = 3,\r\n  options = '',\r\n  inputType = 'text',\r\n  userId = null,\r\n  isMulti = false,\r\n  closeOnSelect = true,\r\n  validateFormat = 'image',\r\n  validateFormatMsg = 'Elija uno de los formatos sugeridos',\r\n  formatAccept = 'image/*',\r\n  previewPic = Avatar,\r\n  changeAction = () => {},\r\n  blurAction = () => {},\r\n  ...props\r\n}) => {\r\n  const [cropper, setCropper] = useState(null)\r\n  const [image, setImage] = useState(Avatar)\r\n  const [result, setResult] = useState(false)\r\n  const [updateAvatar] = useMutation(UPDATE_AVATAR, {\r\n    refetchQueries: [\r\n      GET_USER_BY_ID,\r\n      {\r\n        variables: {\r\n          getUserByIdId: parseInt(userId),\r\n        },\r\n      },\r\n    ],\r\n  })\r\n  const MySwal = withReactContent(Swal)\r\n  const {\r\n    field: { onChange, value },\r\n    fieldState: { invalid, error },\r\n  } = useController({ control, name, defaultValue: '' })\r\n\r\n  const animatedComponents = makeAnimated()\r\n\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value)\r\n    doAction(e)\r\n  }\r\n\r\n  const handleChangeChoosen = (e) => {\r\n    onChange(e.value)\r\n    doAction(e)\r\n  }\r\n\r\n  const doAction = useRef(\r\n    debounce((e) => {\r\n      changeAction(e)\r\n    }, 500)\r\n  ).current\r\n\r\n  const handleClickInput = (name) => {\r\n    const element = document.getElementById(name)\r\n    element.click()\r\n  }\r\n\r\n  const handleChangeImage = async (e, validateFormat, autoUpdate = false) => {\r\n    if (!e.target.files[0]) {\r\n      return\r\n    }\r\n    const validate = await FileValidator(e.target.files[0], validateFormat)\r\n    if (validate) {\r\n      changeAction(e)\r\n      const isComplete = await handleCropImage(e.target.files[0])\r\n      if (isComplete) {\r\n        setTimeout(async function () {\r\n          let res, img\r\n\r\n          img = localStorage.getItem('usersImage')\r\n          if (img) res = await getFileFromUrl(img, '.jpg')\r\n          else res = e.target.files[0]\r\n\r\n          onChange(res)\r\n          if (autoUpdate) {\r\n            await updateAvatar({\r\n              variables: {\r\n                idUser: parseInt(userId),\r\n                avatar: res,\r\n              },\r\n            })\r\n          }\r\n        }, 350)\r\n      }\r\n    } else\r\n      ToastSweetAlert({\r\n        mode: 'errorModal',\r\n        message: validateFormatMsg,\r\n      })\r\n  }\r\n\r\n  const handleChangeFile = (e, validateFormat) => {\r\n    const file = e.target.files[0]\r\n    if (!file) return\r\n    onChange(e.target.files[0])\r\n    changeAction(e)\r\n  }\r\n\r\n  const handleCropImage = async (file) => {\r\n    if (file) {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader()\r\n        reader.onload = async () => {\r\n          await MySwal.fire({\r\n            title: 'Selecciona la fracción que deseas utilizar',\r\n            allowOutsideClick: false,\r\n            html: (\r\n              <CropperImage _image={reader.result} setCropper={setCropper} />\r\n            ),\r\n            showDenyButton: true,\r\n            focusConfirm: false,\r\n            denyButtonText: '<i class=\"fas fa-times\"> Cancelar</i>',\r\n            confirmButtonText: '<i class=\"fas fa-check\"> Finalizar</i>',\r\n            customClass: {\r\n              confirmButton: 'btn btn-sm btn-accept',\r\n              denyButton: 'btn btn-sm btn-danger',\r\n              icon: 'no-border',\r\n            },\r\n          }).then((result) => {\r\n            setResult(result.isConfirmed)\r\n            return resolve(result.isConfirmed)\r\n          })\r\n        }\r\n        reader.readAsDataURL(file)\r\n      })\r\n    }\r\n  }\r\n\r\n  const getFileFromUrl = async (url, defaultType) => {\r\n    const response = await fetch(url)\r\n    const data = await response.blob()\r\n    return new File([data], 'file', {\r\n      type: response.headers.get('content-type') || defaultType,\r\n    })\r\n  }\r\n\r\n  //CONTROl THE SET OF THE CROPPED IMAGE\r\n  useEffect(() => {\r\n    if (result) {\r\n      localStorage.setItem('usersImage', cropper?.toDataURL())\r\n      setImage(cropper?.toDataURL())\r\n      setResult(false)\r\n    }\r\n  }, [result, cropper, image])\r\n\r\n  //SETIMAGE PREVIEW WHEN EXISTS\r\n  useEffect(() => {\r\n    if (!cropper) {\r\n      setImage(previewPic)\r\n    }\r\n  }, [image, previewPic, cropper])\r\n\r\n  return (\r\n    <>\r\n      {inputType === 'text' && (\r\n        <>\r\n          <label>\r\n            <b>{label}</b>\r\n          </label>\r\n          <input\r\n            {...props}\r\n            onChange={(e) => handleChange(e)}\r\n            value={value ? value : ''}\r\n            onBlur={blurAction}\r\n            className={`form-control rounded-2 ${invalid && 'is-invalid'}`}\r\n          />\r\n          <span className=\"error invalid-feedback\">{error?.message}</span>\r\n        </>\r\n      )}\r\n      {inputType === 'textarea' && (\r\n        <>\r\n          <label>\r\n            <b>{label}</b>\r\n          </label>\r\n          <textarea\r\n            {...props}\r\n            onChange={(e) => handleChange(e)}\r\n            value={value ? value : ''}\r\n            rows={rows}\r\n            onBlur={blurAction}\r\n            className={`form-control rounded-2 ${invalid && 'is-invalid'}`}\r\n          />\r\n          <span className=\"error invalid-feedback\">{error?.message}</span>\r\n        </>\r\n      )}\r\n\r\n      {inputType === 'select' && (\r\n        <>\r\n          <label>\r\n            <b>{label}</b>\r\n          </label>\r\n          <select\r\n            {...props}\r\n            onChange={(e) => handleChange(e)}\r\n            value={value ? value : ''}\r\n            rows={rows}\r\n            onBlur={blurAction}\r\n            className={`form-control rounded-2 ${invalid && 'is-invalid'}`}\r\n          >\r\n            <option disabled hidden value=\"\">\r\n              Seleccione una opción\r\n            </option>\r\n            <>\r\n              {options.length > 0 ? (\r\n                <> {options}</>\r\n              ) : (\r\n                <option value=\"\" disabled>\r\n                  No hay datos registrados\r\n                </option>\r\n              )}\r\n            </>\r\n          </select>\r\n          <span className=\"error invalid-feedback\">{error?.message}</span>\r\n        </>\r\n      )}\r\n      {inputType === 'choosen' && (\r\n        <>\r\n          <label>\r\n            <b>{label}</b>\r\n          </label>\r\n          <Select\r\n            {...props}\r\n            closeMenuOnSelect={closeOnSelect}\r\n            components={animatedComponents}\r\n            name={name}\r\n            placeholder=\"Selecciona una opción\"\r\n            NoOptionsMessage=\"No hay datos registrados\"\r\n            isMulti={isMulti}\r\n            control={control}\r\n            options={options}\r\n            onBlur={blurAction}\r\n            onChange={(e) => handleChangeChoosen(e)}\r\n            className={`${invalid && 'is-invalid'}`}\r\n            value={options?.find((option) => {\r\n              if (parseInt(option.value) === parseInt(value)) {\r\n                return option\r\n              }\r\n              return null\r\n            })}\r\n            styles={{\r\n              control: (base) => ({\r\n                ...base,\r\n                borderColor: invalid ? '#dc3545' : '#ced4da',\r\n                ':hover': { borderColor: invalid ? '#dc3545' : '#ced4da' },\r\n              }),\r\n            }}\r\n          />\r\n          <span className=\"error invalid-feedback\">{error?.message}</span>\r\n        </>\r\n      )}\r\n\r\n      {inputType === 'image' && (\r\n        <div className=\"container-upload\">\r\n          <div className=\"avatar-upload\">\r\n            <input\r\n              {...props}\r\n              id={name}\r\n              type=\"file\"\r\n              hidden\r\n              defaultValue={value}\r\n              onChange={(e) => handleChangeImage(e, validateFormat)}\r\n              onBlur={blurAction}\r\n              accept={formatAccept}\r\n              control={control}\r\n            />\r\n            <label\r\n              className=\"btn btn-danger circle-btn\"\r\n              htmlFor=\"imageUpload\"\r\n              onClick={() => handleClickInput(name)}\r\n            >\r\n              <i\r\n                className={`fas fa-${\r\n                  cropper || image ? 'pencil-alt' : 'plus'\r\n                } `}\r\n              ></i>\r\n            </label>\r\n          </div>\r\n          <div className=\"avatar-preview\">\r\n            <img src={cropper || image ? image : Avatar} alt=\"avatar-upload\" />\r\n          </div>\r\n          <span className=\"error\">{error?.message}</span>\r\n        </div>\r\n      )}\r\n\r\n      {inputType === 'imageAutoSend' && (\r\n        <div className=\"container-upload\">\r\n          <div className=\"avatar-upload\">\r\n            <input\r\n              {...props}\r\n              id={name}\r\n              type=\"file\"\r\n              hidden\r\n              defaultValue={value}\r\n              onChange={(e) => handleChangeImage(e, validateFormat, true)}\r\n              onBlur={blurAction}\r\n              accept={formatAccept}\r\n              control={control}\r\n            />\r\n            <label\r\n              className=\"btn btn-danger circle-btn\"\r\n              htmlFor=\"imageUpload\"\r\n              onClick={() => handleClickInput(name)}\r\n            >\r\n              <i\r\n                className={`fas fa-${\r\n                  cropper || image ? 'pencil-alt' : 'plus'\r\n                } `}\r\n              ></i>\r\n            </label>\r\n          </div>\r\n          <div className=\"avatar-preview\">\r\n            <img src={cropper || image ? image : Avatar} alt=\"avatar-upload\" />\r\n          </div>\r\n          <span className=\"error\">{error?.message}</span>\r\n        </div>\r\n      )}\r\n\r\n      {inputType === 'file' && (\r\n        <>\r\n          <label>\r\n            <b>{label}</b>\r\n          </label>\r\n          <input\r\n            {...props}\r\n            type=\"file\"\r\n            defaultValue={value}\r\n            onChange={(e) => handleChangeFile(e, validateFormat)}\r\n            accept={formatAccept}\r\n            onBlur={blurAction}\r\n            className={`form-control rounded-2 ${invalid && 'is-invalid'}`}\r\n          />\r\n          <span className=\"error invalid-feedback\">{error?.message}</span>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default InputController\r\n","import React from 'react'\r\nimport InputController from './InputController'\r\nimport { useFieldArray } from 'react-hook-form'\r\n\r\nexport const DynamicForm = ({\r\n  btnAppendTxt = 'Agregar',\r\n  emptyText = 'No hay elementos',\r\n  prefix = 'prefix',\r\n  control = 'control',\r\n  inputs = [],\r\n  iconSubmodule,\r\n  idsToDelete,\r\n  setIdsToDelete = false,\r\n}) => {\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: prefix,\r\n  })\r\n\r\n  const handleRemove = (item, idx) => {\r\n    if (setIdsToDelete) {\r\n      remove(idx)\r\n      setIdsToDelete([...idsToDelete, item.id])\r\n    } else {\r\n      remove(idx)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-5 col-12\">\r\n        <button\r\n          className=\"btn btn-sm btn-success\"\r\n          type=\"button\"\r\n          style={{ float: 'right' }}\r\n          onClick={() => append({})}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n          &nbsp;{btnAppendTxt}\r\n        </button>\r\n      </div>\r\n      {fields.length > 0 ? (\r\n        fields.map((_index, idx) => (\r\n          <React.Fragment key={_index + idx}>\r\n            <div className=\"col-12 btn-add-header\">\r\n              <span\r\n                style={{\r\n                  cursor: 'pointer',\r\n                  float: 'right',\r\n                }}\r\n                className=\"btn btn-sm btn-outline-danger fas fa-trash-alt\"\r\n                data-toggle=\"tooltip\"\r\n                data-placement=\"top\"\r\n                title=\"Eliminar\"\r\n                onClick={() => handleRemove(_index, idx)}\r\n              ></span>\r\n            </div>\r\n            {inputs.map((input, index) => (\r\n              <div\r\n                className={`mb-4 col-md-12 col-lg-${input.colSize}`}\r\n                key={index}\r\n              >\r\n                {input.specialSubmodule ? (\r\n                  <>\r\n                    <label>Icono</label>\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-append\">\r\n                        <span\r\n                          className=\"input-group-text\"\r\n                          id=\"inputGroupAppend\"\r\n                        >\r\n                          <i\r\n                            className={`fas fa-${\r\n                              iconSubmodule?.[`${prefix}[${idx}].iconSubmodule`]\r\n                            }`}\r\n                          ></i>\r\n                        </span>\r\n                      </div>\r\n                      <InputController\r\n                        name={`${prefix}[${idx}].iconSubmodule`}\r\n                        placeholder=\"Icono de FontAwesome u otra librería activa\"\r\n                        aria-describedby=\"inputGroupAppend\"\r\n                        control={control}\r\n                        changeAction={(e) =>\r\n                          input?.iconState({\r\n                            ...iconSubmodule,\r\n                            [`${prefix}[${idx}].iconSubmodule`]: e.target.value,\r\n                          })\r\n                        }\r\n                        blurAction={input?.blurAction}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <InputController\r\n                    label={input.label}\r\n                    type={input.type}\r\n                    name={`${prefix}[${idx}].${input.name}`}\r\n                    placeholder={input.placeholder}\r\n                    control={control}\r\n                    changeAction={input?.changeAction}\r\n                    blurAction={input?.blurAction}\r\n                  />\r\n                )}\r\n              </div>\r\n            ))}\r\n          </React.Fragment>\r\n        ))\r\n      ) : (\r\n        <div className=\"col-12\">\r\n          <h4 className=\"text-center\">{emptyText}</h4>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default DynamicForm\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport ContentHeader from '../../../../Components/Layout/ContentHeader'\r\nimport Box from '../../../Global/Box'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport {\r\n  REGISTER_USER,\r\n  GET_USERS,\r\n  UPDATE_USER,\r\n  GET_USER_BY_ID,\r\n} from '../../../../graphql/Catalog/Users/user'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { SEPOMEX_MUTATION } from '../../../../graphql/Global/sepomex'\r\nimport {\r\n  setUserValues,\r\n  setZipNullValues,\r\n  setZipValues,\r\n} from '../../../Helpers/setInputValues'\r\nimport { GET_ROLES } from '../../../../graphql/Catalog/Roles/roles'\r\nimport { GET_STORES } from '../../../../graphql/Catalog/Stores/stores'\r\nimport {\r\n  validationSchemaUser,\r\n  validationSchemaUserUpdate,\r\n} from '../../../Helpers/validatorCustomerForm'\r\nimport InputController from '../../../Global/InputController'\r\nimport { AuthContext } from '../../../../Auth/AuthContext'\r\nimport DynamicForm from '../../../Global/DynamicForm'\r\n\r\nconst Register = () => {\r\n  const { id: _id } = useParams()\r\n  const { user: _user } = useContext(AuthContext)\r\n  const [schemaValidator, setSchemaValidator] = useState(validationSchemaUser)\r\n  const [_password, set_Password] = useState('1')\r\n  const [previewPic, setPreviewPic] = useState(null)\r\n\r\n  const [registerUser] = useMutation(REGISTER_USER, {\r\n    refetchQueries: [{ query: GET_USERS }],\r\n  })\r\n\r\n  const [updateUser] = useMutation(UPDATE_USER, {\r\n    refetchQueries: [\r\n      { query: GET_USERS },\r\n      {\r\n        query: GET_USER_BY_ID,\r\n        variables: {\r\n          getUserByIdId: parseInt(_id),\r\n        },\r\n      },\r\n    ],\r\n  })\r\n  const [sepomexAdress] = useMutation(SEPOMEX_MUTATION)\r\n  const {\r\n    data: dataOneUser,\r\n    loading: loadingOneUser,\r\n    error: errorOneUser,\r\n  } = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      getUserByIdId: parseInt(_id),\r\n    },\r\n  })\r\n\r\n  const {\r\n    data: dataRoles,\r\n    loading: loadingRoles,\r\n    error: errorRoles,\r\n  } = useQuery(GET_ROLES, { fetchPolicy: 'no-cache' })\r\n\r\n  const {\r\n    data: dataStores,\r\n    loading: loadingStores,\r\n    error: errorStores,\r\n  } = useQuery(GET_STORES, { fetchPolicy: 'no-cache' })\r\n\r\n  const [addressId, setAddressId] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [roles, setRoles] = useState([])\r\n  const [stores, setStores] = useState([])\r\n  const [colonies, setColonies] = useState([])\r\n  const history = useHistory()\r\n\r\n  const initialStateZip = {\r\n    colonia: [],\r\n    city: '',\r\n    municipality: '',\r\n    state: '',\r\n    idCountry: '',\r\n    idState: '',\r\n    idCity: '',\r\n    idMuicipality: '',\r\n  }\r\n\r\n  const [zip, setZip] = useState(initialStateZip)\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    methods,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n    control,\r\n    getValues,\r\n  } = useForm({\r\n    resolver: yupResolver(schemaValidator),\r\n  })\r\n\r\n  const getAdress = async (zipCode) => {\r\n    try {\r\n      const { data } = await sepomexAdress({\r\n        variables: {\r\n          zipCode: parseInt(zipCode),\r\n        },\r\n      })\r\n      setZipValues(setValue, setColonies, data.getFullAddressByZipcode, setZip)\r\n    } catch (error) {\r\n      setZipNullValues(setValue)\r\n      ToastSweetAlert({\r\n        mode: 'errorModal',\r\n        message: 'Por favor ingrese un código postal válido',\r\n      })\r\n\r\n      setZip(initialStateZip)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loadingRoles) {\r\n      const list = dataRoles?.getAllRoles.rows.map((role) => {\r\n        return { label: role.role_name, value: role.id }\r\n      })\r\n      setRoles(list)\r\n    }\r\n  }, [loadingRoles, dataRoles, errorRoles])\r\n\r\n  useEffect(() => {\r\n    if (!loadingStores) {\r\n      const list = dataStores?.getAllStores.rows.map((store) => {\r\n        return { label: store.name, value: store.id }\r\n      })\r\n      setStores(list)\r\n    }\r\n  }, [loadingStores, dataStores, errorStores])\r\n\r\n  const watchPassword = watch('password')\r\n\r\n  useEffect(() => {\r\n    if (watchPassword === undefined || watchPassword === '') {\r\n      setSchemaValidator(validationSchemaUserUpdate)\r\n      set_Password('1')\r\n    } else {\r\n      setSchemaValidator(validationSchemaUser)\r\n      set_Password(getValues('password'))\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [watchPassword])\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      setSchemaValidator(validationSchemaUserUpdate)\r\n      if (!loadingOneUser) {\r\n        if (errorOneUser)\r\n          return ToastSweetAlert({\r\n            mode: 'errorModal',\r\n            message: errorOneUser.message,\r\n          })\r\n        setPreviewPic(dataOneUser?.GetUserById?.avatar?.url)\r\n        setUserValues(reset, dataOneUser.GetUserById, setAddressId, getAdress)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [_id, dataOneUser, errorOneUser])\r\n\r\n  const handleSave = async (Data) => {\r\n    if (Data.contacts.length < 1) {\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: 'Debe agregar al menos 1 contacto',\r\n      })\r\n    }\r\n    setLoading(true)\r\n    const contacts = Data.contacts.map((contact) => {\r\n      return {\r\n        name: contact.contactName,\r\n        lastname: contact.paternalSurname,\r\n        second_lastname: contact.maternalSurname,\r\n        phone: contact.phone,\r\n        ext: contact.ext,\r\n        mobile: contact.cell,\r\n        email: contact.email,\r\n        id_user_register: parseInt(_user.idUser),\r\n      }\r\n    })\r\n    try {\r\n      if (_id) {\r\n        await updateUser({\r\n          variables: {\r\n            userId: parseInt(_id),\r\n            addressId: parseInt(addressId),\r\n            inputAvatar: Data?.avatar?.name ? getValues('avatar') : null,\r\n            input: {\r\n              name: Data.name,\r\n              first_name: Data.firstName,\r\n              last_name: Data.lastName,\r\n              user_name: Data.userName,\r\n              email: Data.userEmail,\r\n              password: _password,\r\n              id_role: parseInt(Data.userRole),\r\n              id_store: parseInt(Data.userStore),\r\n              id_user_update: parseInt(_user.idUser),\r\n              active: true,\r\n            },\r\n            inputAddress: {\r\n              street: Data.direction,\r\n              external_number: Data.outdoorNumber,\r\n              internal_number: Data.interiorNumber,\r\n              id_country: parseInt(zip.idCountry),\r\n              id_state: parseInt(zip.idState),\r\n              id_city: parseInt(zip.idCity),\r\n              id_municipality: parseInt(zip.idMunicipality),\r\n              id_colony: parseInt(Data.colonia),\r\n              zip_code: parseInt(Data.postalCode),\r\n              id_user_update: parseInt(_user.idUser),\r\n            },\r\n            inputContact: contacts,\r\n          },\r\n        })\r\n        return (\r\n          ToastSweetAlert({\r\n            mode: 'ok',\r\n            message: 'Usuario actualizado correctamente',\r\n          }),\r\n          history.push(`/catalog/users`)\r\n        )\r\n      } else {\r\n        const user = await registerUser({\r\n          variables: {\r\n            inputAvatar: getValues('avatar'),\r\n            input: {\r\n              name: Data.name,\r\n              first_name: Data.firstName,\r\n              last_name: Data.lastName,\r\n              user_name: Data.userName,\r\n              email: Data.userEmail,\r\n              password: Data.password,\r\n              id_role: parseInt(Data.userRole),\r\n              id_store: parseInt(Data.userStore),\r\n              id_user_register: parseInt(_user.idUser),\r\n              active: true,\r\n            },\r\n            inputAddress: {\r\n              street: Data.direction,\r\n              external_number: Data.outdoorNumber,\r\n              internal_number: Data.interiorNumber,\r\n              id_country: parseInt(zip.idCountry),\r\n              id_state: parseInt(zip.idState),\r\n              id_city: parseInt(zip.idCity),\r\n              id_municipality: parseInt(zip.idMunicipality),\r\n              id_colony: parseInt(Data.colonia),\r\n              zip_code: parseInt(Data.postalCode),\r\n              id_user_register: parseInt(_user.idUser),\r\n            },\r\n            inputContact: contacts,\r\n          },\r\n        })\r\n        return ToastSweetAlert(\r\n          {\r\n            mode: 'ok',\r\n            message: 'Usuario registrado correctamente',\r\n          },\r\n          history.push(\r\n            user.data.registerUser.id_role === 1\r\n              ? `/catalog/users`\r\n              : `/catalog/users/permissions/edit/${user.data.registerUser.id}`\r\n          )\r\n        )\r\n      }\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (zip.colonia?.length > 0) {\r\n      if (dataOneUser !== undefined && dataOneUser !== null) {\r\n        setValue('colonia', dataOneUser.GetUserById.address.id_colony)\r\n      } else {\r\n        setValue('colonia', zip.colonia[0].id_colony)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [zip, dataOneUser])\r\n\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Control de usuarios\"\r\n        breadcrumb=\"Usuarios\"\r\n        windowTitle={`${_id ? 'Editar' : 'Agregar'} usuario `}\r\n      />\r\n      <FormProvider {...methods}>\r\n        <form className=\"p-5\" onSubmit={handleSubmit(handleSave)}>\r\n          <Box\r\n            title={`${_id ? 'Editar' : 'Agregar'} nuevo usuario`}\r\n            btnRedPath=\"/catalog/users\"\r\n            btnRedTxt=\"Cancelar\"\r\n            btnSubmit={true}\r\n            btnState={loading}\r\n            errors={errors}\r\n            content={\r\n              <>\r\n                <div className=\"mb-3 col-12\">\r\n                  <h2>Datos Generales</h2>\r\n                </div>\r\n                <div className=\"mb-3 col-12\">\r\n                  <hr />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"mb-3 col-lg-12 col-md-12 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Avatar\"\r\n                      inputType=\"image\"\r\n                      name=\"avatar\"\r\n                      previewPic={previewPic}\r\n                      validateFormat=\"imageAvatar\"\r\n                      validateFormatMsg=\"Solo se admite JPG, JPGE y PNG\"\r\n                      // formatAccept=\".jpg .png .jpge\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Nombre\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Ingrese un nombre\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Apellido paterno\"\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      placeholder=\"Ingrese un apellido paterno\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Apellido materno\"\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      placeholder=\"Ingrese un apellido materno\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Usuario\"\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      placeholder=\"Ingrese un usuario\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Correo electrónico\"\r\n                      type=\"text\"\r\n                      name=\"userEmail\"\r\n                      placeholder=\"Ingrese un correo electrónico\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Rol\"\r\n                      type=\"text\"\r\n                      name=\"userRole\"\r\n                      inputType=\"choosen\"\r\n                      options={roles}\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Tienda\"\r\n                      type=\"text\"\r\n                      name=\"userStore\"\r\n                      inputType=\"choosen\"\r\n                      options={stores}\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Contraseña\"\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Ingrese una contraseña\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Confirmar contraseña\"\r\n                      type=\"password\"\r\n                      name=\"passwordConfirm\"\r\n                      placeholder=\"Confirme la contraseña\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-4\"></div>\r\n                  <div className=\"mb-3 mt-3 col-12\">\r\n                    <h2>Direccion</h2>\r\n                  </div>\r\n                  <div className=\"mb-3 col-12\">\r\n                    <hr />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Calle\"\r\n                      type=\"text\"\r\n                      name=\"direction\"\r\n                      placeholder=\"Ingrese una calle\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Numero exterior\"\r\n                      type=\"text\"\r\n                      name=\"outdoorNumber\"\r\n                      placeholder=\"# ext.\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Numero interior\"\r\n                      type=\"text\"\r\n                      name=\"interiorNumber\"\r\n                      placeholder=\"# int.\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"C. P.\"\r\n                      type=\"text\"\r\n                      name=\"postalCode\"\r\n                      placeholder=\"Ingrese un C. P.\"\r\n                      control={control}\r\n                      blurAction={(e) => {\r\n                        getAdress(e.target.value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Colonia\"\r\n                      type=\"text\"\r\n                      name=\"colonia\"\r\n                      inputType=\"choosen\"\r\n                      options={colonies}\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Ciudad\"\r\n                      readOnly\r\n                      type=\"text\"\r\n                      name=\"city\"\r\n                      placeholder=\"Ciudad\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Municipio\"\r\n                      readOnly\r\n                      type=\"text\"\r\n                      name=\"municipality\"\r\n                      placeholder=\"Municipio\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Estado\"\r\n                      readOnly\r\n                      type=\"text\"\r\n                      name=\"state\"\r\n                      placeholder=\"Estado\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-4\"></div>\r\n                  <div className=\"mb-3 mt-3 col-12\">\r\n                    <h2>Contactos</h2>\r\n                  </div>\r\n                  <div className=\"mb-3 col-12\">\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3 col-12 row\">\r\n                  <DynamicForm\r\n                    control={control}\r\n                    btnAppendTxt={'Agregar Contacto'}\r\n                    emptyText=\"No ha agregado ningún contacto\"\r\n                    prefix=\"contacts\"\r\n                    inputs={[\r\n                      {\r\n                        name: 'contactName',\r\n                        label: 'Nombre',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un nombre',\r\n                        colSize: 4,\r\n                      },\r\n                      {\r\n                        name: 'paternalSurname',\r\n                        label: 'Apellido paterno',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un apellido',\r\n                        colSize: 4,\r\n                      },\r\n                      {\r\n                        name: 'maternalSurname',\r\n                        label: 'Apellido materno',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un apellido',\r\n                        colSize: 4,\r\n                      },\r\n                      {\r\n                        name: 'phone',\r\n                        label: 'Teléfono',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un número de teléfono',\r\n                        colSize: 3,\r\n                      },\r\n                      {\r\n                        name: 'ext',\r\n                        label: 'Extensión',\r\n                        type: 'text',\r\n                        placeholder: 'Ext',\r\n                        colSize: 1,\r\n                      },\r\n                      {\r\n                        name: 'cell',\r\n                        label: 'Celular',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un número de celular',\r\n                        colSize: 4,\r\n                      },\r\n                      {\r\n                        name: 'email',\r\n                        label: 'Correo',\r\n                        type: 'text',\r\n                        placeholder: 'Ingresa un correo electrónico',\r\n                        colSize: 4,\r\n                      },\r\n                    ]}\r\n                  />\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\n\r\nexport const BoxCollapsible = ({\r\n  title = 'Title',\r\n  icon = 'fas fa-user',\r\n  content = '',\r\n  nestedContent = false,\r\n  header = false,\r\n}) => {\r\n  return nestedContent ? (\r\n    <div className=\"card collapsed-card\">\r\n      <div className=\"card-header border-0 permissions-cardH\">\r\n        <h3 className=\"card-title\">\r\n          <i className={`${icon} mr-1`}></i>\r\n          {title}\r\n        </h3>\r\n        <div className=\"card-tools\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-accept btn-sm\"\r\n            data-card-widget=\"collapse\"\r\n            title=\"Abrir\"\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {header && header}\r\n        {content}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0 permissions-cardH\">\r\n        <h3 className=\"card-title\">\r\n          <i className={`${icon} mr-1`}></i>\r\n          {title}\r\n        </h3>\r\n        <div className=\"card-tools\">{content}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoxCollapsible\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const ALL_MODULES = gql`\r\n  query getAllModules($searchQuery: String, $limit: Int, $offset: Int) {\r\n    getAllModules(searchQuery: $searchQuery, limit: $limit, offset: $offset) {\r\n      rows {\r\n        id\r\n        name\r\n        front_label\r\n        icon\r\n        relative_link\r\n        submodules {\r\n          id\r\n          name\r\n          relative_link\r\n          front_label\r\n          icon\r\n        }\r\n      }\r\n      count\r\n    }\r\n  }\r\n`\r\nexport const GET_ONE_MODULE = gql`\r\n  query GetOneModule($getOneModuleId: Int!) {\r\n    getOneModule(id: $getOneModuleId) {\r\n      id\r\n      name\r\n      front_label\r\n      relative_link\r\n      icon\r\n      submodules {\r\n        id\r\n        module_id\r\n        name\r\n        front_label\r\n        icon\r\n        relative_link\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const EXPORT_MODULES = gql`\r\n  mutation GetAllModulesExport {\r\n    getAllModulesExport {\r\n      id\r\n      name\r\n      front_label\r\n      icon\r\n      relative_link\r\n      submodules {\r\n        id\r\n        name\r\n        relative_link\r\n        front_label\r\n        icon\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_MODULE = gql`\r\n  mutation CreateModuleMutation(\r\n    $moduleInput: moduleInput!\r\n    $submoduleInput: [submoduleInput]!\r\n  ) {\r\n    createModule(moduleInput: $moduleInput, submoduleInput: $submoduleInput) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_MODULE = gql`\r\n  mutation UpdateModule(\r\n    $moduleId: Int!\r\n    $moduleInput: moduleInput!\r\n    $submoduleInput: [submoduleInput]!\r\n    $submodulesIdsTodelete: [Int]!\r\n  ) {\r\n    updateModule(\r\n      moduleId: $moduleId\r\n      moduleInput: $moduleInput\r\n      submoduleInput: $submoduleInput\r\n      submodulesIdsTodelete: $submodulesIdsTodelete\r\n    ) {\r\n      id\r\n      name\r\n      front_label\r\n      relative_link\r\n      icon\r\n      submodules {\r\n        front_label\r\n        id\r\n        icon\r\n        module_id\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const DELETE_MODULE = gql`\r\n  mutation deleteModule($id: Int!) {\r\n    deleteModule(id: $id)\r\n  }\r\n`\r\n\r\nexport const All_USER_PERMISSIONS = gql`\r\n  mutation GetAllUserPermissionsMutation($userID: Int!) {\r\n    getAllUserPermissions(userID: $userID) {\r\n      id\r\n      id_module\r\n      id_submodule\r\n      access_delete\r\n      access_retrieve\r\n      access_read\r\n      access_edit\r\n      access_export\r\n      module_info {\r\n        name\r\n      }\r\n      submodule_info {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_PERMISSIONS = gql`\r\n  mutation CreateUserPermissionMutation(\r\n    $userId: Int!\r\n    $modules: [userModuleInput!]!\r\n  ) {\r\n    createUserPermission(userID: $userId, modules: $modules)\r\n  }\r\n`\r\nexport const UPDATE_PERMISSIONS = gql`\r\n  mutation UpdateUserPermissionMutation(\r\n    $userId: Int!\r\n    $modules: [userModuleInput!]!\r\n  ) {\r\n    updateUserPermission(userID: $userId, modules: $modules)\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\r\nimport ContentHeader from '../../../Layout/ContentHeader'\r\nimport Box from '../../../Global/Box'\r\nimport BoxCollapsible from '../../../Global/BoxCollapsible'\r\nimport {\r\n  ALL_MODULES,\r\n  All_USER_PERMISSIONS,\r\n  UPDATE_PERMISSIONS,\r\n} from '../../../../graphql/Catalog/Modules/modules'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst Permissions = () => {\r\n  const {\r\n    loading: loadingModules,\r\n    error: errorModules,\r\n    data: dataModules,\r\n  } = useQuery(ALL_MODULES, {\r\n    variables: {\r\n      limit: null,\r\n      offset: null,\r\n    },\r\n  })\r\n\r\n  const [userPermissions] = useMutation(All_USER_PERMISSIONS)\r\n  const [updatePermissions] = useMutation(UPDATE_PERMISSIONS)\r\n\r\n  const [modules, setModules] = useState([])\r\n  const [permissions, setPermissions] = useState([])\r\n  const { id: _id } = useParams()\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  //LOAD MODULES AND SUBMODULES\r\n  useEffect(() => {\r\n    if (!loadingModules) {\r\n      if (dataModules !== undefined || dataModules == null) {\r\n        if (errorModules)\r\n          return ToastSweetAlert({\r\n            mode: 'error',\r\n            message: errorModules.message,\r\n          })\r\n        setModules(dataModules.getAllModules.rows)\r\n      }\r\n    }\r\n  }, [loadingModules, errorModules, dataModules, permissions])\r\n\r\n  //SET USER PERMISSIONS IF ID IN ROUTE\r\n  useEffect(() => {\r\n    if (_id) {\r\n      async function fetchPermissions() {\r\n        try {\r\n          const { data: userPermissionsData } = await userPermissions({\r\n            variables: {\r\n              userID: parseInt(_id),\r\n            },\r\n          })\r\n          setPermissions(userPermissionsData.getAllUserPermissions)\r\n        } catch (error) {\r\n          ToastSweetAlert({\r\n            mode: 'errorModal',\r\n            message: error.message,\r\n          })\r\n        }\r\n      }\r\n      fetchPermissions()\r\n    }\r\n  }, [_id, userPermissions, modules])\r\n\r\n  const { handleSubmit, control, setValue } = useForm()\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true)\r\n    const dataGenerated = await prepareData(data)\r\n\r\n    try {\r\n      await updatePermissions({\r\n        variables: {\r\n          userId: parseInt(_id),\r\n          modules: dataGenerated,\r\n        },\r\n      })\r\n      return (\r\n        ToastSweetAlert({\r\n          mode: 'ok',\r\n          message: 'Permisos actualizados correctamente',\r\n        }),\r\n        history.push(`/catalog/users`)\r\n      )\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  const prepareData = async (data) => {\r\n    let list = []\r\n    const ids = Object.entries(data)\r\n    list = Object.values(data).map((item, idx) => {\r\n      const idsSplited = ids[idx][0].split('-')\r\n      const idModule = parseInt(idsSplited[0])\r\n      const idSubModule = idsSplited[1] ? parseInt(idsSplited[1]) : null\r\n      return {\r\n        id_user: parseInt(_id),\r\n        id_module: idModule,\r\n        id_submodule: idSubModule,\r\n        access_delete: item.delete ? true : false,\r\n        access_edit: item.edit ? true : false,\r\n        access_read: item.read ? true : false,\r\n        access_retrieve: item.create ? true : false,\r\n        access_export: item.export ? true : false,\r\n      }\r\n    })\r\n    return list\r\n  }\r\n\r\n  const setData = (nameModule, typePermission) => {\r\n    for (let i = 0; i < permissions.length; i++) {\r\n      if (permissions[i]?.id_submodule !== null) {\r\n        if (nameModule === permissions[i]?.submodule_info?.name) {\r\n          return permissions[i][typePermission]\r\n        }\r\n      } else {\r\n        if (nameModule === permissions[i]?.module_info?.name) {\r\n          return permissions[i][typePermission]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const Checkbox = (props) => (\r\n    <Controller\r\n      {...props}\r\n      render={({ field }) => {\r\n        return (\r\n          <div className=\"custom-control custom-switch ml-auto mb-0\">\r\n            <input\r\n              {...field}\r\n              type=\"checkbox\"\r\n              value={props.value}\r\n              checked={field.value}\r\n              className=\"custom-control-input ml-2 mr-n2\"\r\n              id={`${props.labelInput}`}\r\n              onChange={(event) => {\r\n                let moduleName = event.target.name\r\n                moduleName = moduleName.split('[')\r\n                let newName = moduleName[0] + '[read]'\r\n                if (\r\n                  props.labelInput.includes('delete') ||\r\n                  props.labelInput.includes('edit') ||\r\n                  props.labelInput.includes('create') ||\r\n                  props.labelInput.includes('export')\r\n                ) {\r\n                  setValue(newName, true)\r\n                } else if (\r\n                  document.getElementsByName(newName)[0].checked === false\r\n                ) {\r\n                  let moduleName = event.target.name\r\n                  moduleName = moduleName.split('[')\r\n                  let dName = moduleName[0] + '[delete]'\r\n                  setValue(dName, false)\r\n                  let eName = moduleName[0] + '[edit]'\r\n                  setValue(eName, false)\r\n                  let cName = moduleName[0] + '[create]'\r\n                  setValue(cName, false)\r\n                  let exportName = moduleName[0] + '[export]'\r\n                  setValue(exportName, false)\r\n                }\r\n                field.onChange(event.target.checked ? true : false)\r\n              }}\r\n            />\r\n            <label\r\n              htmlFor={`${props.labelInput}`}\r\n              className=\"custom-control-label mr-2 ml-2\"\r\n            >\r\n              {props.label}\r\n            </label>\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Asignación de permisos\"\r\n        breadcrumb=\"Permisos\"\r\n        windowTitle=\"Permisos usuario\"\r\n      />\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Box\r\n          key=\"boxkey\"\r\n          title=\"Seleccione los permisos para el usuario\"\r\n          btnRedTxt=\"Cancelar\"\r\n          btnRedPath=\"/catalog/users\"\r\n          btnSubmit={true}\r\n          btnState={loading}\r\n          content={modules.map((itemModule) => {\r\n            if (itemModule.submodules.length <= 0) {\r\n              return (\r\n                <BoxCollapsible\r\n                  key={itemModule.id}\r\n                  title={itemModule.front_label}\r\n                  icon=\"fas fa-box\"\r\n                  content={\r\n                    <div className=\"card-wrapper\">\r\n                      <Checkbox\r\n                        labelInput={`read${itemModule.name}`}\r\n                        label=\"Lectura\"\r\n                        control={control}\r\n                        name={`${itemModule.id}-null-${itemModule.name}[read]`}\r\n                        defaultValue={setData(itemModule.name, 'access_read')}\r\n                      />\r\n                      <Checkbox\r\n                        labelInput={`create${itemModule.name}`}\r\n                        label=\"Crear\"\r\n                        control={control}\r\n                        name={`${itemModule.id}-null-${itemModule.name}[create]`}\r\n                        defaultValue={setData(\r\n                          itemModule.name,\r\n                          'access_retrieve'\r\n                        )}\r\n                      />\r\n                      <Checkbox\r\n                        labelInput={`edit${itemModule.name}`}\r\n                        label=\"Editar\"\r\n                        control={control}\r\n                        name={`${itemModule.id}-null-${itemModule.name}[edit]`}\r\n                        defaultValue={setData(itemModule.name, 'access_edit')}\r\n                      />\r\n                      <Checkbox\r\n                        labelInput={`delete${itemModule.name}`}\r\n                        label=\"Eliminar\"\r\n                        control={control}\r\n                        name={`${itemModule.id}-null-${itemModule.name}[delete]`}\r\n                        defaultValue={setData(itemModule.name, 'access_delete')}\r\n                      />\r\n                      <Checkbox\r\n                        labelInput={`export${itemModule.name}`}\r\n                        label=\"Exportar\"\r\n                        control={control}\r\n                        name={`${itemModule.id}-null-${itemModule.name}[export]`}\r\n                        defaultValue={setData(itemModule.name, 'access_export')}\r\n                      />\r\n                    </div>\r\n                  }\r\n                />\r\n              )\r\n            } else {\r\n              return (\r\n                <BoxCollapsible\r\n                  key={itemModule.id}\r\n                  title={itemModule.front_label}\r\n                  icon=\"fas fa-box\"\r\n                  nestedContent={true}\r\n                  content={itemModule.submodules.map((itemSubmodule) => {\r\n                    return (\r\n                      <div key={itemSubmodule.id} className=\"card\">\r\n                        <div className=\"card-header border-0 permissions-cardH\">\r\n                          <h3 className=\"card-title\">\r\n                            {itemSubmodule.front_label}\r\n                          </h3>\r\n                          <div className=\"card-tools\">\r\n                            <div className=\"card-wrapper\">\r\n                              <Checkbox\r\n                                labelInput={`read${itemSubmodule.name}`}\r\n                                label=\"Lectura\"\r\n                                control={control}\r\n                                name={`${itemModule.id}-${itemSubmodule.id}-${itemSubmodule.name}[read]`}\r\n                                defaultValue={setData(\r\n                                  itemSubmodule.name,\r\n                                  'access_read'\r\n                                )}\r\n                              />\r\n                              <Checkbox\r\n                                labelInput={`create${itemSubmodule.name}`}\r\n                                label=\"Crear\"\r\n                                control={control}\r\n                                name={`${itemModule.id}-${itemSubmodule.id}-${itemSubmodule.name}[create]`}\r\n                                defaultValue={setData(\r\n                                  itemSubmodule.name,\r\n                                  'access_retrieve'\r\n                                )}\r\n                              />\r\n                              <Checkbox\r\n                                labelInput={`edit${itemSubmodule.name}`}\r\n                                label=\"Editar\"\r\n                                control={control}\r\n                                name={`${itemModule.id}-${itemSubmodule.id}-${itemSubmodule.name}[edit]`}\r\n                                defaultValue={setData(\r\n                                  itemSubmodule.name,\r\n                                  'access_edit'\r\n                                )}\r\n                              />\r\n                              <Checkbox\r\n                                labelInput={`delete${itemSubmodule.name}`}\r\n                                label=\"Eliminar\"\r\n                                control={control}\r\n                                name={`${itemModule.id}-${itemSubmodule.id}-${itemSubmodule.name}[delete]`}\r\n                                defaultValue={setData(\r\n                                  itemSubmodule.name,\r\n                                  'access_delete'\r\n                                )}\r\n                              />\r\n                              <Checkbox\r\n                                labelInput={`export${itemSubmodule.name}`}\r\n                                label=\"Exportar\"\r\n                                control={control}\r\n                                name={`${itemModule.id}-${itemSubmodule.id}-${itemSubmodule.name}[export]`}\r\n                                defaultValue={setData(\r\n                                  itemSubmodule.name,\r\n                                  'access_export'\r\n                                )}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                />\r\n              )\r\n            }\r\n          })}\r\n        />\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Permissions\r\n","import { useQuery } from '@apollo/client'\r\nimport React, { useEffect, useState } from 'react'\r\nimport {\r\n  DELETE_ROLE,\r\n  GET_ROLES,\r\n  EXPORT_ROLES,\r\n} from '../../../../graphql/Catalog/Roles/roles'\r\nimport LayoutTable from '../../../Global/LayoutTable'\r\nimport ContentHeader from '../../../Layout/ContentHeader'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\n\r\nexport const Roles = () => {\r\n  const [pagePagination, setPagePagination] = useState({\r\n    searchQuery: null,\r\n    limit: 10,\r\n    offset: 0,\r\n  })\r\n  const [total, setTotal] = useState(0)\r\n  const { loading, error, data } = useQuery(GET_ROLES, {\r\n    variables: {\r\n      searchQuery: pagePagination.searchQuery,\r\n      limit: pagePagination.limit,\r\n      offset: pagePagination.offset,\r\n    },\r\n  })\r\n  const [dataToTable, setDataToTable] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error)\r\n        return ToastSweetAlert({\r\n          mode: 'errorModal',\r\n          message: error.message,\r\n        })\r\n      let list = []\r\n      data.getAllRoles.rows.map((item) => {\r\n        return list.push({\r\n          id: item.id,\r\n          Nombre: item.role_name,\r\n          Descripción: item.description,\r\n        })\r\n      })\r\n      setDataToTable(list)\r\n      setTotal(data.getAllRoles.count)\r\n    }\r\n  }, [loading, error, data])\r\n\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Roles de usuario\"\r\n        breadcrumb=\"Roles\"\r\n        windowTitle=\"Roles\"\r\n      />\r\n      <LayoutTable\r\n        data={dataToTable}\r\n        title=\"Lista de perfiles\"\r\n        gql={DELETE_ROLE}\r\n        requery={GET_ROLES}\r\n        exportQuery={EXPORT_ROLES}\r\n        totalCount={total}\r\n        pagePagination={pagePagination}\r\n        setPagePagination={setPagePagination}\r\n        loadingData={loading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Roles\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as Yup from 'yup'\r\nimport Box from '../../../Global/Box'\r\nimport ContentHeader from '../../../Layout/ContentHeader'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport {\r\n  CREATE_ROLE,\r\n  GET_ROLES,\r\n  GET_ROLE_BY_ID,\r\n  UPDATE_ROLE,\r\n} from '../../../../graphql/Catalog/Roles/roles'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport InputController from '../../../Global/InputController'\r\nimport { AuthContext } from '../../../../Auth/AuthContext'\r\n\r\nexport const RolesNew = () => {\r\n  const { id: _id } = useParams()\r\n  const { user } = useContext(AuthContext)\r\n\r\n  const [createRole] = useMutation(CREATE_ROLE, {\r\n    refetchQueries: [{ query: GET_ROLES }],\r\n  })\r\n\r\n  const [updateRole] = useMutation(UPDATE_ROLE, {\r\n    refetchQueries: [\r\n      { query: GET_ROLES },\r\n      { query: GET_ROLE_BY_ID, variables: { getOneRoleId: parseInt(_id) } },\r\n    ],\r\n  })\r\n\r\n  const {\r\n    data: dataRoleId,\r\n    loading: loadingRoleId,\r\n    error: errorRoleId,\r\n  } = useQuery(GET_ROLE_BY_ID, {\r\n    variables: {\r\n      getOneRoleId: parseInt(_id),\r\n    },\r\n  })\r\n\r\n  const [loadingBtn, setLoadingBtn] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    role_name: Yup.string().required('El nombre del rol es requerido'),\r\n    description: Yup.string(),\r\n  })\r\n\r\n  const {\r\n    methods,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n    reset,\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!loadingRoleId) {\r\n      if (_id) {\r\n        if (errorRoleId) {\r\n          setLoadingBtn(false)\r\n          return ToastSweetAlert({\r\n            mode: 'errorModal',\r\n            message: errorRoleId.message,\r\n          })\r\n        }\r\n\r\n        reset(dataRoleId?.getOneRole)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [_id, dataRoleId, errorRoleId])\r\n\r\n  const onSubmit = async (Data) => {\r\n    setLoadingBtn(true)\r\n    try {\r\n      if (_id) {\r\n        await updateRole({\r\n          variables: {\r\n            roleId: parseInt(_id),\r\n            input: {\r\n              role_name: Data.role_name,\r\n              description: Data.description,\r\n              id_user_update: user.idUser,\r\n            },\r\n          },\r\n        })\r\n        return (\r\n          ToastSweetAlert({\r\n            mode: 'ok',\r\n            message: 'Rol actualizado correctamente',\r\n          }),\r\n          history.push(`/catalog/roles`)\r\n        )\r\n      } else {\r\n        await createRole({\r\n          variables: {\r\n            input: {\r\n              role_name: Data.role_name,\r\n              description: Data.description,\r\n              id_user_register: user.idUser,\r\n            },\r\n          },\r\n        })\r\n        return ToastSweetAlert(\r\n          {\r\n            mode: 'ok',\r\n            message: 'Rol registrado correctamente',\r\n          },\r\n          history.push(`/catalog/roles`)\r\n        )\r\n      }\r\n    } catch (error) {\r\n      setLoadingBtn(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Roles de usuario\"\r\n        breadcrumb=\"Roles\"\r\n        windowTitle={`${_id ? 'Editar' : 'Agregar'} role `}\r\n      />\r\n      <FormProvider {...methods}>\r\n        <form className=\"p-3\" onSubmit={handleSubmit(onSubmit)}>\r\n          <Box\r\n            title={`${_id ? 'Editar' : 'Agregar'} nuevo rol`}\r\n            btnRedPath=\"/catalog/roles\"\r\n            btnRedTxt=\"Cancelar\"\r\n            errors={errors}\r\n            btnSubmit={true}\r\n            btnLoading={loadingBtn}\r\n            content={\r\n              <>\r\n                <div className=\"row\">\r\n                  <div className=\"mb-3 col-lg-12 col-md-12 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Nombre del rol\"\r\n                      name=\"role_name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre del rol\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mb-3 col-lg-12 col-md-12 col-sm-12\">\r\n                    <InputController\r\n                      label=\"Descripción\"\r\n                      name=\"description\"\r\n                      inputType=\"textarea\"\r\n                      rows={3}\r\n                      placeholder=\"Descripción\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  )\r\n}\r\nexport default RolesNew\r\n","import React, { useEffect, useState } from 'react'\r\nimport ContentHeader from '../../../../Components/Layout/ContentHeader'\r\nimport LayoutTable from '../../../../Components/Global/LayoutTable'\r\nimport { useQuery } from '@apollo/client'\r\nimport {\r\n  ALL_MODULES,\r\n  DELETE_MODULE,\r\n  EXPORT_MODULES,\r\n} from '../../../../graphql/Catalog/Modules/modules'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\n\r\nexport const Modules = () => {\r\n  const [pagePagination, setPagePagination] = useState({\r\n    searchQuery: null,\r\n    limit: 10,\r\n    offset: 0,\r\n  })\r\n  const [total, setTotal] = useState(0)\r\n  const { loading, error, data } = useQuery(ALL_MODULES, {\r\n    variables: {\r\n      searchQuery: pagePagination.searchQuery,\r\n      limit: pagePagination.limit,\r\n      offset: pagePagination.offset,\r\n    },\r\n  })\r\n  const [dataToTable, setDataToTable] = useState([])\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error)\r\n        return ToastSweetAlert({\r\n          mode: 'errorModal',\r\n          message: error.message,\r\n        })\r\n      let list = []\r\n      data.getAllModules.rows.map((item) => {\r\n        return list.push({\r\n          id: item.id,\r\n          'Nombre módulo': item.name,\r\n          Etiqueta: item.front_label,\r\n          Link: item.relative_link,\r\n          Icono: <i className={`fas fa-${item.icon}`}></i>,\r\n          Submodulos: item.submodules.length,\r\n        })\r\n      })\r\n      setDataToTable(list)\r\n      setTotal(data.getAllModules.count)\r\n    }\r\n  }, [loading, error, data])\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Control de módulos\"\r\n        breadcrumb=\"Módulos\"\r\n        windowTitle=\"Módulos\"\r\n      />\r\n      <LayoutTable\r\n        data={dataToTable}\r\n        title=\"Lista de módulos\"\r\n        gql={DELETE_MODULE}\r\n        requery={ALL_MODULES}\r\n        exportQuery={EXPORT_MODULES}\r\n        totalCount={total}\r\n        pagePagination={pagePagination}\r\n        setPagePagination={setPagePagination}\r\n        loadingData={loading}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modules\r\n","import React, { useEffect, useState } from 'react'\r\nimport ContentHeader from '../../../Layout/ContentHeader'\r\nimport Box from '../../../Global/Box'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport InputController from '../../../Global/InputController'\r\nimport DynamicForm from '../../../Global/DynamicForm'\r\nimport {\r\n  GET_ONE_MODULE,\r\n  CREATE_MODULE,\r\n  UPDATE_MODULE,\r\n  ALL_MODULES,\r\n} from '../../../../graphql/Catalog/Modules/modules'\r\nimport * as Yup from 'yup'\r\n\r\nexport const ModulesNew = () => {\r\n  const { id: _id } = useParams()\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n  const [icon, setIcon] = useState('')\r\n  const [idsToDelete, setIdsToDelete] = useState([])\r\n  const [iconSubmodule, setIconSubmodule] = useState('')\r\n\r\n  const { data: dataModule } = useQuery(GET_ONE_MODULE, {\r\n    variables: {\r\n      getOneModuleId: parseInt(_id),\r\n    },\r\n  })\r\n\r\n  const [createModule] = useMutation(CREATE_MODULE, {\r\n    refetchQueries: [{ query: ALL_MODULES }],\r\n  })\r\n\r\n  const [updateModule] = useMutation(UPDATE_MODULE, {\r\n    refetchQueries: [\r\n      { query: ALL_MODULES },\r\n      {\r\n        query: GET_ONE_MODULE,\r\n        variables: { getOneModuleId: parseInt(_id) },\r\n      },\r\n    ],\r\n  })\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    frontLabel: Yup.string().required('Este campo es obligatorio'),\r\n    moduleName: Yup.string().required('Este campo es obligatorio'),\r\n    relativeLink: Yup.string().required('Este campo es obligatorio'),\r\n    icon: Yup.string().required('Este campo es obligatorio'),\r\n    submodules: Yup.array().of(\r\n      Yup.object().shape({\r\n        submoduleName: Yup.string().required('Este campo es obligatorio'),\r\n        frontLabelSubmodule: Yup.string().required('Este campo es obligatorio'),\r\n        relativeLinkSubmodule: Yup.string().required(\r\n          'Este campo es obligatorio'\r\n        ),\r\n        iconSubmodule: Yup.string().required('Este campo es obligatorio'),\r\n      })\r\n    ),\r\n  })\r\n\r\n  const defaultValues = {\r\n    submodules: [\r\n      {\r\n        id: '',\r\n        frontLabelSubmodule: '',\r\n        submoduleName: '',\r\n        relativeLinkSubmodule: '',\r\n        iconSubmodule: '',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const {\r\n    methods,\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({ defaultValues, resolver: yupResolver(validationSchema) })\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      if (dataModule !== undefined && dataModule !== null) {\r\n        const data = dataModule.getOneModule\r\n        setIcon(`fas fa-${data.icon}`)\r\n        const submodules = data.submodules.map((submodule, idx) => {\r\n          setIconSubmodule({\r\n            ...iconSubmodule,\r\n            [`submodules[${idx}].iconSubmodule`]: `fas fa-${submodule.icon}`,\r\n          })\r\n          return {\r\n            id: submodule.id,\r\n            submoduleName: submodule.name,\r\n            relativeLinkSubmodule: submodule.relative_link,\r\n            frontLabelSubmodule: submodule.front_label,\r\n            iconSubmodule: submodule.icon,\r\n          }\r\n        })\r\n        const dataFormated = {\r\n          moduleName: data.name,\r\n          frontLabel: data.front_label,\r\n          relativeLink: data.relative_link,\r\n          icon: data.icon,\r\n          submodules: submodules,\r\n        }\r\n        reset(dataFormated)\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dataModule, reset, _id])\r\n\r\n  const onSubmit = async (data) => {\r\n    // setLoading(true)\r\n    const submodules = data.submodules.map((submodule) => {\r\n      return {\r\n        id: typeof submodule.id === 'number' ? parseInt(submodule.id) : 0,\r\n        name: submodule.submoduleName,\r\n        relative_link: submodule.relativeLinkSubmodule,\r\n        front_label: submodule.frontLabelSubmodule,\r\n        icon: submodule.iconSubmodule,\r\n      }\r\n    })\r\n\r\n    try {\r\n      if (_id) {\r\n        await updateModule({\r\n          variables: {\r\n            moduleId: parseInt(_id),\r\n            moduleInput: {\r\n              name: data.moduleName,\r\n              relative_link: data.relativeLink,\r\n              front_label: data.frontLabel,\r\n              icon: data.icon,\r\n            },\r\n            submodulesIdsTodelete: idsToDelete,\r\n            submoduleInput: submodules,\r\n          },\r\n        })\r\n        return ToastSweetAlert(\r\n          {\r\n            mode: 'ok',\r\n            message: 'Módulo actualizado correctamente',\r\n          },\r\n          history.push(`/modules`)\r\n        )\r\n      } else {\r\n        await createModule({\r\n          variables: {\r\n            moduleInput: {\r\n              name: data.moduleName,\r\n              relative_link: data.relativeLink,\r\n              front_label: data.frontLabel,\r\n              icon: data.icon,\r\n            },\r\n            submoduleInput: submodules,\r\n          },\r\n        })\r\n        return ToastSweetAlert(\r\n          {\r\n            mode: 'ok',\r\n            message: 'Módulo registrado correctamente',\r\n          },\r\n          history.push(`/modules`)\r\n        )\r\n      }\r\n    } catch (error) {\r\n      setLoading(false)\r\n      return ToastSweetAlert({\r\n        mode: 'error',\r\n        message: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Control de módulos\"\r\n        breadcrumb=\"Módulos\"\r\n        windowTitle={`${_id ? 'Editar' : 'Agregar'} módulo `}\r\n      />\r\n      <FormProvider {...methods}>\r\n        <form className=\"p-5\" onSubmit={handleSubmit(onSubmit)}>\r\n          <Box\r\n            title={`${_id ? 'Editar' : 'Agregar'} módulo`}\r\n            btnRedPath=\"/modules\"\r\n            btnRedTxt=\"Cancelar\"\r\n            btnSubmit={true}\r\n            btnState={loading}\r\n            errors={errors}\r\n            content={\r\n              <>\r\n                <div className=\"row\">\r\n                  <div className=\"mb-3 col-12\">\r\n                    <h2>Módulo principal</h2>\r\n                  </div>\r\n                  <div className=\"mb-3 col-12\">\r\n                    <hr />\r\n                  </div>\r\n                  <div className=\"mb-3 col-md-12 col-lg-3\">\r\n                    <InputController\r\n                      label=\"Etiqueta frontal\"\r\n                      type=\"text\"\r\n                      name=\"frontLabel\"\r\n                      placeholder=\"Ingrese el nombre del módulo en el menu\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-md-12 col-lg-3\">\r\n                    <InputController\r\n                      label=\"Nombre módulo\"\r\n                      type=\"text\"\r\n                      name=\"moduleName\"\r\n                      placeholder=\"Ingrese el nombre del módulo\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-md-12 col-lg-3\">\r\n                    <InputController\r\n                      label=\"Link/Enlace\"\r\n                      type=\"text\"\r\n                      name=\"relativeLink\"\r\n                      placeholder=\"Ingrese el link para el módulo\"\r\n                      control={control}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 col-md-12 col-lg-3\">\r\n                    <label>Icono</label>\r\n                    <div className=\"input-group\">\r\n                      <div className=\"input-group-append\">\r\n                        <span\r\n                          className=\"input-group-text\"\r\n                          id=\"inputGroupAppend\"\r\n                        >\r\n                          <i className={icon}></i>\r\n                        </span>\r\n                      </div>\r\n                      <InputController\r\n                        type=\"text\"\r\n                        name=\"icon\"\r\n                        placeholder=\"Icono de FontAwesome u otra librería activa\"\r\n                        aria-describedby=\"inputGroupAppend\"\r\n                        control={control}\r\n                        changeAction={(e) =>\r\n                          setIcon(`fas fa-${e.target.value}`)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mb-3 mt-3 col-12\">\r\n                    <h2>Submódulos</h2>\r\n                  </div>\r\n                  <div className=\"mb-3 col-12\">\r\n                    <hr />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <DynamicForm\r\n                    control={control}\r\n                    btnAppendTxt={'Agregar submódulo'}\r\n                    emptyText=\"No hay submódulos\"\r\n                    iconSubmodule={iconSubmodule} //PARA MI MÓDULO CUSTOM, NO ES NECESARIO\r\n                    prefix=\"submodules\"\r\n                    idsToDelete={idsToDelete}\r\n                    setIdsToDelete={setIdsToDelete}\r\n                    inputs={[\r\n                      {\r\n                        name: 'id',\r\n                        type: 'hidden',\r\n                      },\r\n                      {\r\n                        name: 'frontLabelSubmodule',\r\n                        label: 'Etiqueta frontal',\r\n                        type: 'text',\r\n                        placeholder: 'Ingrese el nombre del módulo en el menu',\r\n                        colSize: 3,\r\n                      },\r\n                      {\r\n                        name: 'submoduleName',\r\n                        label: 'Nombre submódulo',\r\n                        type: 'text',\r\n                        placeholder: 'Ingrese el nombre del submódulo',\r\n                        colSize: 3,\r\n                      },\r\n                      {\r\n                        name: 'relativeLinkSubmodule',\r\n                        label: 'Link/Enlace',\r\n                        type: 'text',\r\n                        placeholder: 'Ingrese el link para el submódulo',\r\n                        colSize: 3,\r\n                      },\r\n                      {\r\n                        name: 'iconSubmodule',\r\n                        label: 'Icono submódulo',\r\n                        type: 'text',\r\n                        placeholder:\r\n                          'Icono de FontAwesome u otra librería activa',\r\n                        iconState: setIconSubmodule, //PARA MI MÓDULO CUSTOM\r\n                        specialSubmodule: true, //PARA MI MÓDULO CUSTOM\r\n                        colSize: 3,\r\n                      },\r\n                    ]}\r\n                  />\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModulesNew\r\n","import { gql } from '@apollo/client'\n\nexport const GET_ALL_USERS_APP = gql`\n  query GetAllAppUsers($searchQuery: String, $limit: Int, $offset: Int) {\n    getAllAppUsers(searchQuery: $searchQuery, limit: $limit, offset: $offset) {\n      rows {\n        name\n        first_name\n        last_name\n        id\n        username\n        userType {\n          name\n        }\n      }\n      count\n    }\n  }\n`\n\nexport const DELETE_USER_APP = gql`\n  mutation DeleteAppUser($id: Int!) {\n    deleteAppUser(id: $id)\n  }\n`\n\nexport const CREATE_USER_APP = gql`\n  mutation CreateAppUser($input: AppUserInput!) {\n    createAppUser(input: $input)\n  }\n`\n\nexport const UPDATE_USER_APP = gql`\n  mutation UpdateAppUser($updateAppUserId: Int!, $input: AppUserUpdateInput!) {\n    updateAppUser(id: $updateAppUserId, input: $input)\n  }\n`\n\nexport const GET_APP_USER = gql`\n  query GetAppUser($getAppUserId: Int!) {\n    getAppUser(id: $getAppUserId) {\n      id\n      name\n      first_name\n      last_name\n      phone\n      email\n      username\n      id_type\n    }\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport ContentHeader from '../../../../Components/Layout/ContentHeader'\nimport LayoutTable from '../../../../Components/Global/LayoutTable'\nimport { useQuery } from '@apollo/client'\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\nimport {\n  DELETE_USER_APP,\n  GET_ALL_USERS_APP,\n} from '../../../../graphql/Catalog/UsersApp/usersApp'\n\nconst UsersApp = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_ALL_USERS_APP, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n    },\n  })\n  const [dataToTable, setDataToTable] = useState([])\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n      let list = []\n      data.getAllAppUsers.rows.map((item) => {\n        return list.push({\n          id: item.id,\n          Nombre: item.name,\n          'Apellido Paterno': item.first_name,\n          'Apellido Materno': item.last_name,\n          Usuario: item.username,\n        })\n      })\n      setDataToTable(list)\n      setTotal(data.getAllAppUsers.count)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Control de usuarios\"\n        breadcrumb=\"Usuarios\"\n        windowTitle=\"Usuarios\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Lista de usuarios\"\n        gql={DELETE_USER_APP}\n        requery={GET_ALL_USERS_APP}\n        exportQuery={DELETE_USER_APP}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n      />\n    </>\n  )\n}\nexport default UsersApp\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport {\n  GET_USER_BY_ID,\n  GET_USERS,\n  REGISTER_USER,\n  UPDATE_USER,\n} from '../../../../graphql/Catalog/Users/user'\n\nimport { FormProvider, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../Layout/ContentHeader'\nimport Box from '../../../Global/Box'\nimport InputController from '../../../Global/InputController'\n\nimport { useHistory, useParams } from 'react-router-dom'\nimport {\n  CREATE_USER_APP,\n  GET_ALL_USERS_APP,\n  GET_APP_USER,\n  UPDATE_USER_APP,\n} from '../../../../graphql/Catalog/UsersApp/usersApp'\n\nimport * as Yup from 'yup'\n\nconst UsersAppNew = () => {\n  const { id: _id } = useParams()\n\n  const [createAppUser] = useMutation(CREATE_USER_APP, {\n    refetchQueries: [{ query: GET_ALL_USERS_APP }],\n  })\n\n  const [updateAppUser] = useMutation(UPDATE_USER_APP, {\n    refetchQueries: [\n      { query: GET_ALL_USERS_APP },\n      {\n        query: GET_APP_USER,\n        variables: {\n          getAppUserId: parseInt(_id),\n        },\n      },\n    ],\n  })\n  const {\n    data: dataOneUser,\n    loading: loadingOneUser,\n    error: errorOneUser,\n  } = useQuery(GET_APP_USER, {\n    variables: {\n      getAppUserId: parseInt(_id),\n    },\n  })\n\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  const createValidationSchema = Yup.object({\n    name: Yup.string().required('El nombre es requerido'),\n    firstName: Yup.string().required('El apellido es requerido'),\n    lastName: Yup.string().required('El apellido es requerido'),\n    userName: Yup.string().required('El nombre de usuario es requerido'),\n    userEmail: Yup.string()\n      .email('El email no es valido')\n      .required('El email es requerido'),\n    userPhone: Yup.string().required('El telefono es requerido'),\n    password: Yup.string().required('La contraseña es requerida'),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden')\n      .required('La confirmación de la contraseña es requerida'),\n    userType: Yup.string().required('El tipo de usuario es requerido'),\n  })\n\n  const updateValidationSchema = Yup.object({\n    name: Yup.string().required('El nombre es requerido'),\n    firstName: Yup.string().required('El apellido es requerido'),\n    lastName: Yup.string().required('El apellido es requerido'),\n    userName: Yup.string().required('El nombre de usuario es requerido'),\n    userEmail: Yup.string()\n      .email('El email no es valido')\n      .required('El email es requerido'),\n    userPhone: Yup.string().required('El telefono es requerido'),\n    password: Yup.string(),\n    passwordConfirm: Yup.string().oneOf(\n      [Yup.ref('password'), null],\n      'Las contraseñas no coinciden'\n    ),\n    userType: Yup.string().required('El tipo de usuario es requerido'),\n  })\n\n  const {\n    reset,\n    watch,\n    methods,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    control,\n    getValues,\n  } = useForm({\n    resolver: yupResolver(\n      _id ? updateValidationSchema : createValidationSchema\n    ),\n  })\n\n  useEffect(() => {\n    if (_id) {\n      if (!loadingOneUser) {\n        if (errorOneUser)\n          return ToastSweetAlert({\n            mode: 'errorModal',\n            message: errorOneUser.message,\n          })\n        if (dataOneUser) {\n          setValue('name', dataOneUser.getAppUser.name)\n          setValue('firstName', dataOneUser.getAppUser.first_name)\n          setValue('lastName', dataOneUser.getAppUser.last_name)\n          setValue('userName', dataOneUser.getAppUser.username)\n          setValue('userEmail', dataOneUser.getAppUser.email)\n          setValue('userPhone', dataOneUser.getAppUser.phone)\n          setValue('userType', dataOneUser.getAppUser.id_type)\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [_id, dataOneUser, errorOneUser])\n\n  const handleSave = async (Data) => {\n    setLoading(true)\n    try {\n      if (_id) {\n        const { data: updateUserData } = await updateAppUser({\n          variables: {\n            updateAppUserId: parseInt(_id),\n            input: {\n              name: Data.name,\n              first_name: Data.firstName,\n              last_name: Data.lastName,\n              username: Data.userName,\n              email: Data.userEmail,\n              password: Data.password || null,\n              phone: Data.userPhone,\n              id_type: parseInt(Data.userType),\n            },\n          },\n        })\n        if (updateUserData.updateAppUser) {\n          return (\n            ToastSweetAlert({\n              mode: 'ok',\n              message: 'Usuario actualizado correctamente',\n            }),\n            history.push(`/catalog/usersApp`)\n          )\n        }\n      } else {\n        const { data: createUserData } = await createAppUser({\n          variables: {\n            input: {\n              name: Data.name,\n              first_name: Data.firstName,\n              last_name: Data.lastName,\n              username: Data.userName,\n              email: Data.userEmail,\n              password: Data.password,\n              phone: Data.userPhone,\n              id_type: parseInt(Data.userType),\n            },\n          },\n        })\n        if (createUserData.createAppUser) {\n          return (\n            ToastSweetAlert({\n              mode: 'ok',\n              message: 'Usuario actualizado correctamente',\n            }),\n            history.push(`/catalog/usersApp`)\n          )\n        }\n      }\n    } catch (error) {\n      setLoading(false)\n      return ToastSweetAlert({\n        mode: 'error',\n        message: error.message,\n      })\n    }\n  }\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Control de usuarios\"\n        breadcrumb=\"Usuarios de App\"\n        windowTitle={`${_id ? 'Editar' : 'Agregar'} usuario `}\n      />\n      <FormProvider {...methods}>\n        <form className=\"p-5\" onSubmit={handleSubmit(handleSave)}>\n          <Box\n            title={`${_id ? 'Editar' : 'Agregar'} nuevo usuario`}\n            btnRedPath=\"/catalog/appUsers\"\n            btnRedTxt=\"Cancelar\"\n            btnSubmit={true}\n            btnState={loading}\n            errors={errors}\n            content={\n              <>\n                <div className=\"mb-3 col-12\">\n                  <h2>Datos Generales</h2>\n                </div>\n                <div className=\"mb-3 col-12\">\n                  <hr />\n                </div>\n                <div className=\"row\">\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Nombre\"\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder=\"Ingrese un nombre\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Apellido paterno\"\n                      type=\"text\"\n                      name=\"firstName\"\n                      placeholder=\"Ingrese un apellido paterno\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Apellido materno\"\n                      type=\"text\"\n                      name=\"lastName\"\n                      placeholder=\"Ingrese un apellido materno\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Usuario\"\n                      type=\"text\"\n                      name=\"userName\"\n                      placeholder=\"Ingrese un usuario\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Correo electrónico\"\n                      type=\"text\"\n                      name=\"userEmail\"\n                      placeholder=\"Ingrese un correo electrónico\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Telefono\"\n                      type=\"text\"\n                      name=\"userPhone\"\n                      placeholder=\"Ingrese un numero de telefono\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Contraseña\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Ingrese una contraseña\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Confirmar contraseña\"\n                      type=\"password\"\n                      name=\"passwordConfirm\"\n                      placeholder=\"Confirme la contraseña\"\n                      control={control}\n                    />\n                  </div>\n                  <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                    <InputController\n                      label=\"Tipo de usuario\"\n                      inputType=\"select\"\n                      name=\"userType\"\n                      placeholder=\"Seleccione un tipo de usuario\"\n                      control={control}\n                      options={[\n                        <option value=\"1\">Picking</option>,\n                        <option value=\"2\">Packing</option>,\n                      ]}\n                    />\n                  </div>\n                </div>\n              </>\n            }\n          />\n        </form>\n      </FormProvider>\n    </>\n  )\n}\n\nexport default UsersAppNew\n","import { gql } from \"@apollo/client\"\n\nexport const GET_QUOTES = gql`\nquery GetQuotes {\n  getQuotes {\n    id\n    cardCode\n    cardName\n    docDate\n    docTime\n    docStatus\n    comments\n    whsCode\n    status {\n      id\n      name\n    }\n  }\n}\n` \nexport const CREATE_QUOTE = gql`\nmutation CreateQuote($inputQuote: quoteData!) {\n  createQuote(inputQuote: $inputQuote)\n}\n`\n\nexport const GET_PROVIDER_INFO = gql`\nmutation GetInfoProvider($inputProvider: providerData!) {\n  getInfoProvider(inputProvider: $inputProvider)\n}\n`\n","\nexport const document_statuses_esp = {\n    1: 'Abierto',\n    2: 'Cerrado',\n    3: 'Cancelado',\n}\n\nexport const order_statuses_esp = {\n    1: 'Pendiente',\n    2: 'Procesando',\n    3: 'Facturacion',\n    4: 'Envíos locales',\n    5: 'Envíos nacionales',\n    6: 'Por Surtir',\n    7: 'En ruta',\n    8: 'Por recolectar',\n    9: 'Recolectando',\n    10: 'Empaquetando',\n    11: 'Completado',\n    12: 'Rechazado',\n    13: 'Regresado',\n}","import React, { useEffect,useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\nimport interactionPlugin from \"@fullcalendar/interaction\" // needed for dayClick\nimport moment from 'moment'\n\nimport ContentHeader from '../../../Layout/ContentHeader';\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert';\nimport Swal from 'sweetalert2';\nimport { useQuery } from '@apollo/client';\n\nimport { GET_QUOTES } from '../../../../graphql/Catalog/Quotes/quotes';\nimport { document_statuses_esp } from '../../../Helpers/StatusesLanguages';\n\nconst ProvidersQuotes =()=>{\n    const statusEsp = document_statuses_esp;\n    const{data,loading,error} = useQuery(GET_QUOTES);\n    const [quotes,setQuotes] = useState({\n        id: null,\n        cardCode: null,\n        cardName: null,\n        comments: null,\n        docDate: null,\n        docStatus: null,\n        docTime: null,\n        whsCode: null,\n    });\n    const [fullCalendar,setFullCalendar] = useState({\n        id: null,\n        title: null,\n        date: null,\n    });\n\n    useEffect(()=>{\n        if(!loading){\n            if(error){\n                return ToastSweetAlert({\n                    mode: 'error',\n                    message: 'Debe escribir el motivo de la cancelacion',\n                });\n            }\n            /* ITERATE DATA FOR FULLCALENDAR */\n            let list = [];\n            data.getQuotes.map((item)=>{\n                list.push({\n                    id:item.id,\n                    title:item.cardName || item.cardCode && 'Codigo proveedor' + item.cardCode || '--',\n                    date: item.docDate + ' ' +item.docTime,\n                });\n            });\n\n            setQuotes(data.getQuotes);\n            setFullCalendar(list);\n        }\n    },[data,loading,error]);\n\n    const Dateclick = (arg) =>{\n        const idVar = arg.event.id;\n\n        const filterData = quotes.find( item => item.id === parseInt(idVar));\n        \n        return Swal.fire({\n            showCloseButton: true,\n            title: 'Detalles de cita',\n            html:`\n                <div id=\"quotesModalBox\">\n                    <h4>${filterData.docDate && filterData.docTime && `<i class=\"fas fa-clock\"></i> ${ moment(filterData.docDate + ' ' + filterData.docTime).format('LL hh:mm a')}` }</h4>\n                    <h5>${filterData.cardCode && `<span class=\"quoteAttribute\">Codigo de proveedor </span><span style=\"float:right;\">${filterData.cardCode}`}</span> </h5>\n                    <h5>${filterData.cardName && `<span class=\"quoteAttribute\">Proveedor </span><span style=\"float:right;\">${filterData.cardName}`}</span></h5>\n                    <h5>${filterData.status?.id && `<span class=\"quoteAttribute\">Estado del documento </span> <span style=\"text-transform:capitalize;float:right;\">${statusEsp[filterData.status?.id]}`}</span> </h5>\n                    <h5>${filterData.whsCode && `<span class=\"quoteAttribute\">Codigo de almacen o tienda </span><span style=\"float:right;\">${filterData.whsCode}`}</span></h5>\n                    <h5>${filterData.comments && `<span class=\"quoteAttribute\">Observaciones </span><span style=\"display:block;padding-top:5px;\">${filterData.comments}`}</span></h5>\n                </div>\n                <div><hr></div>\n                \n            `,\n            confirmButtonText:\n                'Volver al calendario',\n            customClass: {\n                title: 'StandarModalTitle',\n                htmlContainer: 'StandarModalContainer',\n                confirmButton: 'StandarModalButton',\n              }\n        })\n    } \n\n    const renderEventContent =(eventInfo)=> {\n        return (\n          <div className=\"eventBox\">\n            <h5>{eventInfo.event.title} <b>{eventInfo.timeText}</b> </h5>\n          </div>\n        )\n    }\n\n    return(\n        <>\n        {!loading && \n            <>\n                <ContentHeader\n                    title=\"Citas de Proveedores\"\n                    breadcrumb=\"Citas de Proveedores\"\n                    windowTitle=\"Citas\"\n                />\n                <div className=\"card layout-configs\">\n                    <div className=\"card-header\">\n                        <h3 className=\"card-title\">Citas</h3>\n                        <div className=\"control-btn-box\">\n                            <div\n                                className=\"btn-group actions-btn\"\n                                role=\"group\"\n                                aria-label=\"Button group with nested dropdown\"\n                            >\n                            \n                                <Link to={`/citas/proveedores/new`} className=\"btn btn-accept btn-sm\">\n                                <i className=\"fa fa-plus\"></i> Agregar Nuevo &nbsp;\n                                </Link>\n                            \n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body FullCalendar\">\n\n                        <FullCalendar\n                            plugins={[ dayGridPlugin, interactionPlugin ]}\n                            initialView=\"dayGridMonth\"\n                            events={fullCalendar}\n                            eventClick={Dateclick}\n                            locale={'es'}\n                            displayEventTime={true}\n                            eventContent={renderEventContent}\n                            themeSystem=\"bootstrap5\"\n                        />\n\n                    </div>\n                </div>\n            </>\n        }\n        </>\n    );\n}\n\nexport default ProvidersQuotes\n","import * as Yup from 'yup'\nimport moment from 'moment'\n\nconst dateNow = Date();\nconst dateLimit = new Date();\nexport const validationSchemaQuote = Yup.object().shape({\n    cardCode: Yup.string().required('Este campo es obligatorio'),\n    cardName: Yup.string().required('Este campo es obligatorio'),\n    docDate: Yup.date().required('Este campo es obligatorio')\n        .typeError('Este campo es obligatorio')\n        .min(moment(dateNow).format(),'Debe hacer una cita apartir de la fecha actual')\n        .max(moment(dateLimit.setDate(dateLimit.getDate() + 60)).format(),'La cita no debe ser mayor a 60 días'),\n    docTime: Yup.string().required('Este campo es obligatorio'),\n    docStatus: Yup.string().required('Este campo es obligatorio'),\n    comments: Yup.string()    \n        .max(200, 'El comentario debe ser mayor a 4 y menor a 200 dígitos'),\n    whsCode: Yup.string().required('Este campo es obligatorio'),\n});\n\nexport const validationSchemaQuoteOnlyCodes = Yup.object().shape({\n    cardCode: Yup.string(),\n    cardName: Yup.string(),\n});","import { gql } from \"@apollo/client\"\n\nexport const GET_DOCUMENTS_STATUSES = gql`\nquery GetDocumentsStatuses {\n  getDocumentsStatuses {\n    id\n    name\n  }\n}\n` ","import React, { useEffect, useState } from 'react'\nimport ContentHeader from '../../../../Components/Layout/ContentHeader'\nimport Box from '../../../Global/Box'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport InputController from '../../../Global/InputController'\nimport { useMutation, useQuery } from '@apollo/client'\n\nimport { validationSchemaQuote, validationSchemaQuoteOnlyCodes } from '../../../Helpers/validatorQuotes'\nimport { CREATE_QUOTE, GET_PROVIDER_INFO } from '../../../../graphql/Catalog/Quotes/quotes'\nimport { ToastSweetAlert } from '../../../Helpers/ToastSweetAlert'\nimport { useHistory } from 'react-router-dom'\nimport { GET_DOCUMENTS_STATUSES } from '../../../../graphql/Catalog/Documents/documentStatus'\nimport { document_statuses_esp } from '../../../Helpers/StatusesLanguages'\n\nconst ProvidersQuotesNew = () => {\n  const [schemaValidator, setSchemaValidator] = useState(validationSchemaQuote);\n  const [schemaValidatorStep1, setSchemaValidatorStep1] = useState(validationSchemaQuoteOnlyCodes);\n\n  const [createQuote] = useMutation(CREATE_QUOTE);\n  const [providerData] = useMutation(GET_PROVIDER_INFO);\n\n  const {data,loading,error} = useQuery(GET_DOCUMENTS_STATUSES);\n  const history = useHistory();\n  const [statuses,setStatuses] = useState([]);\n  const statusesEsp = document_statuses_esp;\n  const [step,setStep] = useState(1);\n\n  /* FIRST FORM */\n  const {\n    methods:methodsStep1,\n    handleSubmit:handleSubmitStep1,\n    formState: { errors:errorsStep1 },\n    control:controlStep1,\n  } = useForm({\n    resolver: yupResolver(schemaValidatorStep1),\n  });\n\n  /* SECOND FORM */\n  const {\n    methods,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    resolver: yupResolver(schemaValidator),\n  });\n\n  useEffect(()=>{\n    if(!loading){\n      if(error){\n        return ToastSweetAlert({\n          mode: 'error',\n          message: error.message,\n        }),history.push('/citas/proveedores');\n      }\n\n      const list = data.getDocumentsStatuses.map((item)=>{\n        return { label: statusesEsp[item.id], value: item.id }\n      });\n      setStatuses(list);\n\n    }\n  },[data,loading,error]);\n\n  const handleSaveStep1 = async(Data)=>{\n    const {cardCode,cardName} = Data;\n    if(!cardCode && !cardName)\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Debe llenar alguno de los campos',\n      })\n\n    /* GET DATA FROM API SAP */\n    try{\n      await providerData({\n        variables: {\n          inputProvider: {\n            cardCode,\n            cardName,\n          },\n        },\n      })\n    }catch(e){\n      return ToastSweetAlert({\n        mode: 'error',\n        message: e.message,\n      })\n    }\n  }\n\n  const handleSave = async (Data) => {\n    const {cardCode,cardName,comments,docDate,docStatus,docTime,whsCode} = Data;\n      \n    /* INSERT AND UPDATE DATA */\n    // try {\n    //   await createQuote({\n    //     variables: {\n    //       inputQuote: {\n    //         cardCode,\n    //         cardName,\n    //         comments,\n    //         docDate,\n    //         docStatus: parseInt(docStatus),\n    //         docTime,\n    //         whsCode,\n    //       },\n    //     },\n    //   })\n    //   return ToastSweetAlert({\n    //       mode: 'ok',\n    //       message: 'Cita creada',\n    //   }),\n    //   history.goBack();\n    // } catch (e) {\n    //   return ToastSweetAlert({\n    //     mode: 'error',\n    //     message: e.message,\n    //   })\n    // }\n  }\n\n  return (\n    <>\n    {!loading && statuses &&\n      <>\n      {step === 1 ?\n        <>\n        <ContentHeader\n          title=\"Crear cita\"\n          breadcrumb=\"CREAR CITAS DE PROVEEDORES\"\n          windowTitle=\"Crear una cita\"\n        />\n        <FormProvider {...methodsStep1}>\n          <form className=\"p-5\" onSubmit={handleSubmitStep1(handleSaveStep1)}>\n            <Box\n              title=\"Crear una cita\"\n              btnRedPath=\"/citas/proveedores\"\n              btnRedTxt=\"Cancelar\"\n              btnSubmit={true}\n              btnState={false}\n              errors={errorsStep1}\n              content={\n                <>\n                  <div className=\"mb-3 col-12\">\n                    <h2>Ingrese codigo o nombre del proveedor</h2>\n                  </div>\n                  <div className=\"mb-3 col-12\">\n                    <hr />\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"mb-3 col-lg-12 col-md-12 col-sm-12\">\n                      \n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Codigo del proveedor\"\n                        type=\"text\"\n                        name=\"cardCode\"\n                        placeholder=\"Confirme codigo del proveedor\"\n                        control={controlStep1}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Nombre del proveedor\"\n                        type=\"text\"\n                        name=\"cardName\"\n                        placeholder=\"Confirme nombre del proveedor\"\n                        control={controlStep1}\n                      />\n                    </div>\n                  </div>\n                </>\n              }\n            />\n          </form>\n        </FormProvider>\n        </>\n        :\n        <>\n        <ContentHeader\n          title=\"Crear cita\"\n          breadcrumb=\"CREAR CITAS DE PROVEEDORES\"\n          windowTitle=\"Crear una cita\"\n        />\n        <FormProvider {...methods}>\n          <form className=\"p-5\" onSubmit={handleSubmit(handleSave)}>\n            <Box\n              title=\"Crear una cita\"\n              btnRedPath=\"/citas/proveedores\"\n              btnRedTxt=\"Cancelar\"\n              btnSubmit={true}\n              btnState={false}\n              errors={errors}\n              content={\n                <>\n                  <div className=\"mb-3 col-12\">\n                    <h2>Crea una cita a un proveedor</h2>\n                  </div>\n                  <div className=\"mb-3 col-12\">\n                    <hr />\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"mb-3 col-lg-12 col-md-12 col-sm-12\">\n                      \n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Codigo del proveedor\"\n                        type=\"text\"\n                        name=\"cardCode\"\n                        placeholder=\"Confirme codigo del proveedor\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Nombre del proveedor\"\n                        type=\"text\"\n                        name=\"cardName\"\n                        placeholder=\"Confirme nombre del proveedor\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12 selectCapitalize\">\n                      <InputController\n                        label=\"Estado del documento\"\n                        inputType=\"choosen\"\n                        options={statuses}\n                        name=\"docStatus\"\n                        placeholder=\"Confirme estado del documento\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Codigo de almacen o tienda\"\n                        type=\"text\"\n                        name=\"whsCode\"\n                        placeholder=\"Confirme Codigo de almacen o tienda\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Fecha de cita\"\n                        type=\"date\"\n                        name=\"docDate\"\n                        placeholder=\"Confirme fecha de la cita\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-lg-4 col-md-6 col-sm-12\">\n                      <InputController\n                        label=\"Hora de cita\"\n                        type=\"time\"\n                        name=\"docTime\"\n                        placeholder=\"Confirme hora de cita\"\n                        control={control}\n                      />\n                    </div>\n                    <div className=\"mb-3 col-12\">\n                      <InputController\n                        label=\"Observaciones\"\n                        inputType=\"textarea\"\n                        name=\"comments\"\n                        placeholder=\"Confirme sus observaciones\"\n                        control={control}\n                      />\n                    </div>\n                  \n                  </div>\n                </>\n              }\n            />\n          </form>\n        </FormProvider>\n      </>\n      }\n      </>\n    }\n    </>\n  )\n}\n\nexport default ProvidersQuotesNew;\n","import { useQuery } from '@apollo/client'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { GET_ROLE_BY_ID } from '../../../../../graphql/Catalog/Roles/roles'\r\nimport InputController from '../../../../Global/InputController'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport const Sidebar = ({ info, user }) => {\r\n  const [previewPic, setPreviewPic] = useState(null)\r\n  const { data } = useQuery(GET_ROLE_BY_ID, {\r\n    variables: { getOneRoleId: parseInt(user.role) },\r\n  })\r\n  const [roleName, setRoleName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  const { control } = useForm()\r\n\r\n  useEffect(() => {\r\n    if (info) {\r\n      setPreviewPic(info.GetUserById.avatar.url)\r\n    }\r\n  }, [info])\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const { role_name, description } = data.getOneRole\r\n      setRoleName(role_name)\r\n      setDescription(description)\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <div className=\"col-lg-3 col-md-6 col-sm-12\">\r\n      <div className=\"card card-primary card-outline\">\r\n        <div className=\"card-body box-profile\">\r\n          <div className=\"text-center container-upload\">\r\n            <form>\r\n              <InputController\r\n                label=\"Avatar\"\r\n                inputType=\"imageAutoSend\"\r\n                userId={user.idUser}\r\n                name=\"avatar\"\r\n                previewPic={previewPic}\r\n                validateFormat=\"imageAvatar\"\r\n                validateFormatMsg=\"Solo se admite JPG, JPEG y PNG\"\r\n                formatAccept=\"image/png, image/jpg, image/jpeg\"\r\n                control={control}\r\n              />\r\n            </form>\r\n          </div>\r\n\r\n          <h3 className=\"profile-username text-center\">{user.name}</h3>\r\n\r\n          <p className=\"text-muted text-center\">\r\n            <b>{roleName} </b>\r\n            <br />\r\n            {description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../../../../../Auth/AuthContext'\r\nimport { useMutation } from '@apollo/client'\r\nimport { UPDATE_USER_PASSWORD } from '../../../../../graphql/Catalog/Users/user'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { passwordValidator } from '../../../../Helpers/validatorCustomerForm'\r\nimport Swal from 'sweetalert2'\r\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\r\nimport InputController from '../../../../Global/InputController'\r\nimport { types } from '../../../../../Types/types'\r\n\r\nexport const UserInfo = ({ info }) => {\r\n  const { dispatch } = useContext(AuthContext)\r\n  const [_data, set_data] = useState(null)\r\n  const [display, setDisplay] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const [updatePassword] = useMutation(UPDATE_USER_PASSWORD)\r\n  const data = info\r\n  useEffect(() => {\r\n    if (data) {\r\n      set_data(data.GetUserById)\r\n    }\r\n  }, [data])\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    resolver: yupResolver(passwordValidator),\r\n  })\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('user')\r\n    sessionStorage.removeItem('requestPath')\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('configSys')\r\n    dispatch({\r\n      type: types.logout,\r\n    })\r\n  }\r\n\r\n  const handleUpdatePassword = async (data) => {\r\n    Swal.fire({\r\n      title: 'Se procederá a actualizar la contraseña',\r\n      text: '¿Seguro que desea continuar?',\r\n      icon: 'warning',\r\n      allowOutsideClick: false,\r\n      showDenyButton: true,\r\n      denyButtonText: '<i class=\"fas fa-times\"> Cancelar</i>',\r\n      confirmButtonText: '<i class=\"fas fa-wrench\"> Actualizar</i>',\r\n      customClass: {\r\n        confirmButton: 'btn btn-sm btn-accept',\r\n        denyButton: 'btn btn-sm btn-danger',\r\n      },\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          await updatePassword({\r\n            variables: {\r\n              idUser: parseInt(_data.id),\r\n              currentPassword: data.currentPassword,\r\n              password: data.password,\r\n            },\r\n          })\r\n          await handleLogout()\r\n          return ToastSweetAlert(\r\n            {\r\n              mode: 'okModal',\r\n              message:\r\n                'Contraseña actualizada correctamente, por favor inicie sesión nuevamente',\r\n            },\r\n            history.push(`/`)\r\n          )\r\n        } catch (errors) {\r\n          ToastSweetAlert({\r\n            mode: 'errorModal',\r\n            message: errors.message,\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-lg-9 col-md-6 col-sm-12\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header p-2\">\r\n          <h3 className=\"card-title\">Información General</h3>\r\n        </div>\r\n        <div className=\"card-body \">\r\n          <div className=\"card-body d-lg-flex d-md-block row\">\r\n            {_data && (\r\n              <>\r\n                <div className=\"col-lg-4 col-md-12 col-sm-6\">\r\n                  <b>Nombre</b>{' '}\r\n                  <p className=\"mt-2\">{_data.name + ' ' + _data.first_name}</p>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-12 col-sm-6\">\r\n                  <b>Usuario</b> <p className=\"mt-2\">{_data.user_name}</p>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-12 col-sm-12\">\r\n                  <b>Correo</b> <p className=\"mt-2\">{_data.email}</p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header p-2\">\r\n          <h3 className=\"card-title\">Información de dirección</h3>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"card-body row\">\r\n            {_data && (\r\n              <>\r\n                <div className=\"col-lg-6 col-md-8 col-sm-6\">\r\n                  <b>Calle</b> <p className=\"mt-2\">{_data.address.street}</p>\r\n                </div>\r\n                <div className=\"col-lg-2 col-md-4 col-sm-6\">\r\n                  <b>Ext.</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.external_number}</p>\r\n                </div>\r\n                <div className=\"col-lg-2 col-md-4 col-sm-6\">\r\n                  <b>Int</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.internal_number}</p>\r\n                </div>\r\n                <div className=\"col-lg-2 col-md-4 col-sm-6\">\r\n                  <b>C.P.</b> <p className=\"mt-2\">{_data.address.zip_code}</p>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                  <b>Colonia</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.colony.name}</p>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                  <b>Ciudad</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.city.name}</p>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                  <b>Municipio</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.colony.name}</p>\r\n                </div>\r\n                <div className=\"col-lg-3 col-md-4 col-sm-6\">\r\n                  <b>Estado</b>{' '}\r\n                  <p className=\"mt-2\">{_data.address.colony.name}</p>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header p-2\">\r\n          <h3 className=\"card-title\">Actualizar Contraseña</h3>\r\n          {display && (\r\n            <button\r\n              className=\"btn btn-sm btn-danger float-right ml-2\"\r\n              onClick={() => setDisplay(false)}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"btn btn-accept btn-sm float-right\"\r\n            onClick={() => setDisplay(true)}\r\n          >\r\n            Actualizar\r\n          </button>\r\n        </div>\r\n        {display && (\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit(handleUpdatePassword)}>\r\n              <InputController\r\n                label=\"Contraseña actual\"\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                placeholder=\"Ingrese la contraseña actual\"\r\n                control={control}\r\n              />\r\n              <br />\r\n              <InputController\r\n                label=\"Nueva Contraseña\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Ingrese la nueva contraseña\"\r\n                control={control}\r\n              />\r\n              <br />\r\n              <InputController\r\n                label=\"Confirmar nueva contraseña\"\r\n                type=\"password\"\r\n                name=\"passwordConfirm\"\r\n                placeholder=\"Confirme la contraseña\"\r\n                control={control}\r\n              />\r\n              <button type=\"submit\" className=\"mt-3 btn btn-danger btn-block\">\r\n                <b>Actualizar contraseña</b>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useQuery } from '@apollo/client'\r\nimport React, { useContext } from 'react'\r\nimport { AuthContext } from '../../../../../Auth/AuthContext'\r\nimport { GET_USER_BY_ID } from '../../../../../graphql/Catalog/Users/user'\r\nimport ContentHeader from '../../../../Layout/ContentHeader'\r\nimport { Sidebar } from './Sidebar'\r\nimport { UserInfo } from './UserInfo'\r\n\r\nexport const UserProfileMain = () => {\r\n  const { user } = useContext(AuthContext)\r\n  const { data } = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      getUserByIdId: parseInt(user.idUser),\r\n    },\r\n  })\r\n  return (\r\n    <>\r\n      <ContentHeader\r\n        title=\"Perfil de usuario\"\r\n        breadcrumb=\"Perfil\"\r\n        windowTitle=\"Perfil\"\r\n      />\r\n\r\n      <section className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {data && (\r\n              <>\r\n                <Sidebar info={data} user={user} />\r\n                <UserInfo info={data} />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\n\nfunction Sulog() {\n  return <div>Hi1</div>;\n}\n\nexport default Sulog;\n","import React from 'react'\nimport { FormProvider } from 'react-hook-form'\nimport Box from '../Global/Box'\nimport ContentHeader from '../Layout/ContentHeader'\nimport { useParams } from 'react-router-dom'\n\nfunction SulogNew() {\n  const { id: _id } = useParams()\n  return (\n    <>\n      <ContentHeader\n        title=\"Surtido y Logistica\"\n        breadcrumb=\"Roles\"\n        windowTitle={`${_id ? 'Editar' : 'Agregar'} role `}\n      />\n      <FormProvider>\n        <form className=\"p-3\">\n          <Box\n            title={`${_id ? 'Editar' : 'Agregar'} nuevo rol`}\n            btnRedPath=\"/catalog/roles\"\n            btnRedTxt=\"Cancelar\"\n          />\n        </form>\n      </FormProvider>\n    </>\n  )\n}\n\nexport default SulogNew\n","import { PrivateRoute } from '../Routers/PrivateRoute'\nimport React from 'react'\nimport Users from '../Components/Admin/Catalogs/Users/List'\nimport UsersNew from '../Components/Admin/Catalogs/Users/Register'\nimport UsersPermissions from '../Components/Admin/Catalogs/Users/Permissions'\nimport Roles from '../Components/Admin/Catalogs/Roles/Roles'\nimport RolesNew from '../Components/Admin/Catalogs/Roles/RolesNew'\nimport Modules from '../Components/Admin/Catalogs/Modules/Modules'\nimport ModulesNew from '../Components/Admin/Catalogs/Modules/ModulesNew'\nimport UsersApp from '../Components/Admin/Catalogs/UsersApp/UsersApp'\nimport UsersAppNew from '../Components/Admin/Catalogs/UsersApp/UsersAppNew'\nimport ProvidersQuotes from '../Components/Admin/Catalogs/ProvidersQuotes/ProvidersQuotes'\nimport ProvidersQuotesNew from '../Components/Admin/Catalogs/ProvidersQuotes/ProvidersQuotesNew'\nimport { UserProfileMain } from '../Components/Admin/Catalogs/Users/UserProfile/UserProfileMain'\nimport Sulog from '../Components/Sulog/Sulog'\nimport SulogNew from '../Components/Sulog/SulogNew'\nconst moduleRoutesGenerator = (read, create, edit, module, isAuth) => {\n  const components = {\n    Users,\n    UsersNew,\n    UsersPermissions,\n    Roles,\n    RolesNew,\n    Modules,\n    ModulesNew,\n    UserProfileMain,\n    Sulog,\n    SulogNew,\n    UsersApp,\n    UsersAppNew,\n    ProvidersQuotes,\n    ProvidersQuotesNew,\n  }\n\n  const routesArray = []\n  if (read) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        key={module.id}\n        path={module.module_info.relative_link}\n        component={components[module.module_info.name]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  if (create) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        key={module.id}\n        path={`${module.module_info.relative_link}/new`}\n        component={components[`${module.module_info.name}New`]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  if (edit) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        key={module.id}\n        path={`${module.module_info.relative_link}/edit/:id`}\n        component={components[`${module.module_info.name}New`]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  return routesArray\n}\nexport default moduleRoutesGenerator\n","import { gql } from '@apollo/client'\n\nexport const GET_PENDING_ORDERS = gql`\n  query GetPendingOrders(\n    $searchQuery: String\n    $limit: Int\n    $offset: Int\n    $platform: Int\n  ) {\n    getPendingOrders(\n      searchQuery: $searchQuery\n      limit: $limit\n      offset: $offset\n      platform: $platform\n    ) {\n      rows {\n        id\n        platform {\n          name\n        }\n        type {\n          name\n        }\n        payment {\n          platform\n          payment_id\n        }\n        shipping {\n          first_name\n          last_name\n        }\n        order_id\n        order_date\n        store {\n          name\n        }\n        warehouse {\n          name\n        }\n      }\n      count\n    }\n  }\n`\n\nexport const GET_ORDER_DETAILS_BY_ID = gql`\n  query GetOrderById($id: Int!) {\n    getOrderById(id: $id) {\n      id\n      platform {\n        name\n      }\n      type_id\n      type {\n        name\n      }\n      method_id\n      method {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      shipping {\n        first_name\n        last_name\n        email\n        phone\n        address_1\n        postcode\n        state\n        city\n      }\n      order_id\n      store_id\n      store {\n        name\n      }\n      uber_id\n      total_price\n      shipping_price\n      product_quantity\n      products {\n        id\n        product_id\n        name\n        sku\n        quantity\n        price\n        total\n      }\n      warehouse_id\n      warehouse {\n        name\n      }\n      status_id\n      status {\n        id\n      }\n      reason {\n        id\n        reason\n        issusse_id\n        user_id\n        userDetails {\n          name\n        }\n        issusesDetails {\n          id\n          name\n        }\n        createdAt\n      }\n      order_date\n    }\n  }\n`\nexport const EXPORT_PENDING_ORDERS = gql`\n  mutation GetAllPendingExport {\n    getAllPendingExport {\n      id\n      platform {\n        name\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      store {\n        name\n      }\n    }\n  }\n`\n\nexport const CHANGE_TO_PROCESS = gql`\n  mutation ChangeToProcess($orderId: Int!, $storeId: Int!) {\n    changeToProcess(order_id: $orderId, store_id: $storeId) {\n      id\n      status_id\n    }\n  }\n`\n\nexport const CHANGE_TO_BILLING = gql`\n  mutation changeToBilling($orderId: Int!, $shippingCompayId: Int!) {\n    changeToBilling(order_id: $orderId, shipping_compay_id: $shippingCompayId) {\n      id\n      shipping_compay_id\n      status {\n        id\n        name\n      }\n    }\n  }\n`\n","import { useQuery } from '@apollo/client'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  GET_PENDING_ORDERS,\n  EXPORT_PENDING_ORDERS,\n} from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\n\nconst PendingOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_PENDING_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n  const [dataToTable, setDataToTable] = useState([])\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n      let list = data.getPendingOrders.rows.map((order) => {\n        return {\n          id: order.id,\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform.name,\n          Tipo: order.type?.name,\n          'Plataforma de cobro': order.payment?.platform,\n          'No. de cobro': order.payment?.payment_id,\n          Cliente: `${order.shipping.first_name} ${order.shipping.last_name}`,\n          'Numero de venta': order.order_id,\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getPendingOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n  console.log(loading, data)\n  return (\n    <>\n      <ContentHeader\n        title=\"Pedidos\"\n        breadcrumb=\"Pedidos Pendientes\"\n        windowTitle=\"Pendientes\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Pendientes\"\n        requery={GET_PENDING_ORDERS}\n        editText={'Tomar Orden'}\n        exportQuery={EXPORT_PENDING_ORDERS}\n        platformSelector={true}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default PendingOrders\n","import React from 'react';\n\nfunction OrderCol({mediumColSize='3', title, content}) {\n    return (\n        <div className={`col-sm-12 col-md-${mediumColSize}`}>\n            <h5 className=\"header-text-details\">{title}</h5>\n            <p className=\"content-text-details\">{content}</p>\n        </div>\n    );\n}\n\nexport default OrderCol;","import React from 'react'\nimport OrderCol from '../Global/OrderCol'\n\nfunction OrderGeneral({\n  platform = '',\n  paymentId = '',\n  orderId = '',\n  orderDate = '',\n}) {\n  return (\n    <div className=\"box-separator\">\n      <div className=\"row\">\n        <OrderCol title=\"Plataforma\" content={platform} />\n        <OrderCol title=\"No. de cobro\" content={paymentId} />\n        <OrderCol title=\"No. de venta\" content={orderId} />\n        <OrderCol title=\"Fecha y hora\" content={orderDate} />\n      </div>\n    </div>\n  )\n}\n\nexport default OrderGeneral\n","import React, { useEffect, useState } from 'react'\nimport Select from 'react-select'\nimport OrderCol from '../Global/OrderCol'\n\nfunction OrderDetailStore({\n  withStore,\n  orderType,\n  orderStore,\n  orderMethod,\n  orderPaymentPlatform,\n  shippingPrice,\n  totalPrice,\n  id_store,\n  status_id,\n  uberAssignedId,\n  stores = [],\n  id_shippingCompany,\n  shippingCompanies = [],\n  show = false,\n  handleStoreChange = () => {},\n  handleShippingCompanyChange = () => {},\n}) {\n  /*\n      STATUS\n      id  name\n      ---------------\n      1 = pending\n      2 = processing\n      3 = billing\n      4 = local-shipping\n      5 = national-shipping\n      6 = supply\n      7 = in-route\n      8 = collect\n      9 = picking\n      10 = packing\n      11 = completed\n      12 = rejected\n      13 = returned\n  */\n\n  const [storeOptions, setStoreOptions] = useState([])\n  const [shippingCompaniesOptions, setShippingCompaniesOptions] = useState([])\n  useEffect(() => {\n    if (stores.length > 0) {\n      const options = stores.map((store) => {\n        return {\n          value: store.id,\n          label: store.name,\n        }\n      })\n      setStoreOptions(options)\n    }\n  }, [stores])\n  useEffect(() => {\n    if (shippingCompanies.length > 0) {\n      const options = shippingCompanies.map((company) => {\n        return {\n          value: company.id,\n          label: company.name,\n        }\n      })\n      setShippingCompaniesOptions(options)\n    }\n  }, [shippingCompanies])\n\n  return (\n    <>\n      <div className=\"col-12 box-separator\">\n        <div className=\"row\">\n          <OrderCol\n            title=\"Tipo de pedido\"\n            content={orderType}\n            mediumColSize=\"6\"\n          />\n          {withStore || status_id !== 1 || show ? (\n            <OrderCol title=\"Tienda\" content={orderStore} mediumColSize=\"6\" />\n          ) : (\n            <div className=\"col-6\">\n              <h5 className=\"header-text-details\">Tienda</h5>\n              <Select\n                name={'store'}\n                placeholder=\"Selecciona una tienda\"\n                NoOptionsMessage=\"No hay datos registrados\"\n                options={storeOptions}\n                onChange={(e) => handleStoreChange(e)}\n                value={storeOptions?.find((option) => {\n                  if (parseInt(option.value) === parseInt(id_store)) {\n                    return option\n                  }\n                  return null\n                })}\n              />\n            </div>\n          )}\n          {orderMethod === 'Fast' && (\n            <OrderCol\n              title=\"Tipo de entrega\"\n              content={orderMethod}\n              mediumColSize=\"6\"\n            />\n          )}\n          {orderMethod === 'Picking' && (\n            <OrderCol\n              title=\"Tipo de entrega\"\n              content={orderMethod}\n              mediumColSize=\"6\"\n            />\n          )}\n          {orderMethod === 'UDirect' && (\n            <>\n              <OrderCol\n                title=\"Tipo de entrega\"\n                content={orderMethod}\n                mediumColSize=\"6\"\n              />\n              <OrderCol\n                title=\"Tipo de logística\"\n                content={orderMethod}\n                mediumColSize=\"6\"\n              />\n              <OrderCol\n                title=\"Uber assigned id\"\n                content={uberAssignedId}\n                mediumColSize=\"6\"\n              />\n            </>\n          )}\n          {orderType === 'Nacional' && !show && (\n            <div className=\"col-6\">\n              <h5 className=\"header-text-details\">Logistica</h5>\n              <Select\n                name={'logistictCompany'}\n                placeholder=\"Selecciona una compañia\"\n                NoOptionsMessage=\"No hay datos registrados\"\n                options={shippingCompaniesOptions}\n                onChange={(e) => handleShippingCompanyChange(e)}\n                value={shippingCompaniesOptions?.find((option) => {\n                  if (parseInt(option.value) === parseInt(id_shippingCompany)) {\n                    return option\n                  }\n                  return null\n                })}\n              />\n            </div>\n          )}\n          {orderMethod === 'Fast' && status_id === 6 && !show && (\n            <div className=\"col-6\">\n              <h5 className=\"header-text-details\">Logistica</h5>\n              <Select\n                name={'logistictCompany'}\n                placeholder=\"Selecciona una compañia\"\n                NoOptionsMessage=\"No hay datos registrados\"\n                options={shippingCompaniesOptions}\n                onChange={(e) => handleShippingCompanyChange(e)}\n                value={shippingCompaniesOptions?.find((option) => {\n                  if (parseInt(option.value) === parseInt(id_shippingCompany)) {\n                    return option\n                  }\n                  return null\n                })}\n              />\n            </div>\n          )}\n\n          <OrderCol\n            title=\"Tipo de pago\"\n            content={orderPaymentPlatform}\n            mediumColSize=\"6\"\n          />\n          {/* {!show && status_id === 1 && (\n            <div className=\"col-6\">\n              <h5 className=\"header-text-details\">Carga de documento</h5>\n              <input type=\"file\" name=\"file\" id=\"file\" className=\"uploadFile\" />\n              <label htmlFor=\"file\" className=\"process-btn process-btn__gray\">\n                Subir documento <i className=\"fas fa-upload\"></i>\n              </label>\n            </div>\n          )} */}\n        </div>\n      </div>\n\n      {/* DETAILS OF PRICES */}\n      <div className=\"col-12\">\n        <div className=\"row justify-content-between\">\n          <p className=\"cost-header\">Producto</p>\n          <p className=\"cost-text\">{`$${totalPrice - shippingPrice}`}</p>\n        </div>\n        <div className=\"row justify-content-between\">\n          <p className=\"cost-header\">EnvÍo</p>\n          <p className=\"cost-text\">{`$${shippingPrice}`}</p>\n        </div>\n        <div className=\"row justify-content-end\">\n          <p className=\"cost-header text-bold\">Total: {`$${totalPrice}`}</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default OrderDetailStore\n","import React from 'react'\nimport OrderCol from '../Global/OrderCol'\n\nfunction OrderShippingDetails({\n  firstName,\n  lastName,\n  email,\n  phone,\n  address,\n  postcode,\n  city,\n  state,\n}) {\n  return (\n    <div className=\"col-12\">\n      <div className=\"row\">\n        <OrderCol\n          title=\"Cliente\"\n          content={`${firstName} ${lastName}`}\n          mediumColSize=\"4\"\n        />\n        <OrderCol title=\"Email\" content={email} mediumColSize=\"4\" />\n        <OrderCol title=\"Telefono\" content={phone} mediumColSize=\"4\" />\n        <OrderCol title=\"Dirección\" content={address} mediumColSize=\"8\" />\n        <OrderCol title=\"Codigo postal\" content={postcode} mediumColSize=\"4\" />\n        <OrderCol\n          title=\"Referencia\"\n          content={'No hay rerefencia'}\n          mediumColSize=\"4\"\n        />\n        <OrderCol title=\"Ciudad\" content={city} mediumColSize=\"4\" />\n        <OrderCol title=\"Estado\" content={state} mediumColSize=\"4\" />\n      </div>\n    </div>\n  )\n}\n\nexport default OrderShippingDetails\n","import React from 'react'\n\nfunction OrderButtons({ oneButton, firstButtonGray,cancelBtn, onCancel, processBtn, onProcess }) {\n  return (\n    <div className=\"col-12 d-md-flex justify-content-around mb-3\">\n      {oneButton ?\n        <>\n          <div className=\"col-12 text-center\">\n            <button\n              className=\"process-btn process-btn__gray\"\n              style={{ width: '80%' }}\n              onClick={onProcess}\n            >\n              {processBtn}\n            </button>\n          </div>\n        </>\n        :\n        <>\n          <div className=\"col-sm-12 col-md-5\">\n            <button\n              className={ firstButtonGray ? \"process-btn process-btn__gray\": \"process-btn process-btn__red\"}\n              style={{ width: '100%' }}\n              onClick={onCancel}\n            >\n              {cancelBtn}\n            </button>\n          </div>\n          <div className=\"col-sm-12 col-md-5\">\n            <button\n              className=\"process-btn process-btn__gray\"\n              style={{ width: '100%' }}\n              onClick={onProcess}\n            >\n              {processBtn}\n            </button>\n          </div>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default OrderButtons\n","export default __webpack_public_path__ + \"static/media/bebida.6d143add.jpg\";","import React from 'react'\nimport Bebida from '../../Assets/Images/bebida.jpg'\n\nfunction OrderProductCard({ sku, name, price, quantity, total, id_product }) {\n  return (\n    <div className=\"row d-flex align-items-center\">\n      <div className=\"col-8\">\n        <div className=\"row\">\n          <div className=\"image-wrapper col-4 d-flex align-items-center\">\n            <img\n              src={Bebida}\n              style={{ maxWidth: '100%', maxHeight: '100px' }}\n              alt=\"\"\n            />\n          </div>\n          <div className=\"col-4 d-flex align-items-center\">\n            <p className=\"sku-text\">SKU: {sku}</p>\n          </div>\n          <div className=\"col-4 d-flex align-items-center\">\n            <p className=\"product-text\">{name}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-4\">\n        <div className=\"row\">\n          <div className=\"col-12 d-flex align-items-center\">\n            <p className=\"product-detail-text m-0 text-bold\">\n              Precio: ${price}\n            </p>\n          </div>\n          <div className=\"col-12 d-flex align-items-center\">\n            <p className=\"product-detail-text m-0 text-bold\">\n              Cantidad: {quantity}\n            </p>\n          </div>\n          <div className=\"col-12 d-flex align-items-center\">\n            <p className=\"product-detail-text m-0 text-bold\">\n              Subtotal: ${total}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default OrderProductCard\n","import React from 'react'\nimport OrderProductCard from '../OrderProductCard'\n\nfunction OrderProducts({ productsArray = [], totalQuantity }) {\n  return (\n    <>\n      <div\n        className=\"col-12 box-separator overflow-auto pb-3\"\n        style={{ maxHeight: '500px' }}\n      >\n        <div className=\"row mb-3\">\n          <h5 className=\"header-text-details\">Desgloce de Productos</h5>\n        </div>\n        {productsArray.map((product) => {\n          return (\n            <OrderProductCard\n              key={product.id}\n              name={product.name}\n              id_product={product.product_id}\n              price={product.price}\n              sku={product.sku}\n              total={product.total}\n              quantity={product.quantity}\n            />\n          )\n        })}\n      </div>\n      <div className=\"col-12 mt-3\">\n        <div className=\"row justify-content-end\">\n          <p className=\"cost-header\">Botellas totales: {totalQuantity}</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default OrderProducts\n","import { gql } from '@apollo/client'\n\nexport const GET_SIPPING_COMPANIES = gql`\nquery Query {\n  getAllShippingCompanies {\n    id\n    name\n  }\n}\n`","import { gql } from '@apollo/client'\n\nexport const GET_TIMELINE = gql`\nquery GetTimeline($id: Int!) {\n  getTimeline(id: $id) {\n    id\n    order_id\n    status_id\n    dateStatus\n    status {\n      id\n      name\n    }\n    user_id\n    user {\n      id\n      name\n    }\n    dateStatus\n  }\n}\n`\n","import React, { useEffect, useState, useRef } from 'react'\nimport { useQuery } from '@apollo/client'\nimport moment from 'moment'\n\nimport { GET_TIMELINE } from '../../../graphql/Catalog/Timeline/timeline'\n\nconst Timeline = ({ idOrder }) => {\n  const [timeLine, setTimeLine] = useState(null)\n  const boxScroll = useRef()\n  const dictionary = {\n    1: 'Pendiente',\n    2: 'En proceso',\n    3: 'Facturacion',\n    4: 'Envío local',\n    5: 'Envío nacional',\n    6: 'Por surtir',\n    7: 'En ruta',\n    8: 'Por colectar',\n    9: 'En recoleccion',\n    10: 'En paquetado',\n    11: 'Completado',\n    12: 'Cancelado',\n    13: 'Devuelto',\n  }\n\n  /* TIMELINEs DATA */\n  const { data, loading, error } = useQuery(GET_TIMELINE, {\n    variables: {\n      id: parseInt(idOrder),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading && !error) {\n      let list = []\n      data.getTimeline.map((timeData) => {\n        list.push({\n          user: timeData.user.name,\n          order_id: timeData.order_id,\n          status: dictionary[timeData.status.id],\n          date: moment(timeData.dateStatus).format('L'),\n          time: moment(timeData.dateStatus).format('LT'),\n        })\n        return true\n      })\n      setTimeLine(list)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  useEffect(() => {\n    if (boxScroll) {\n      const element = boxScroll.current\n      element.scrollTop = element.scrollHeight\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boxScroll, timeLine])\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"card \">\n          <div className=\"card-header\">\n            <h3 className=\"card-title\">Timeline</h3>\n          </div>\n          <div className=\"card-body timeLine-body\" ref={boxScroll}>\n            {timeLine && (\n              <ul>\n                {timeLine.map((item, idx) => (\n                  <li key={idx}>\n                    <h6 id=\"time\">{item?.time && item.time}</h6>\n                    <h5>\n                      <i className=\"fas fa-circle fa-xs\"></i>\n                      {item?.user && item.user}\n                    </h5>\n                    <h6>{item?.status && 'Estado - ' + item.status}</h6>\n                    <h6>{item?.date && item.date}</h6>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Timeline\n","import { gql } from '@apollo/client'\n\nexport const GET_INTERNAL_NOTES = gql`\nquery GetInternalNotes($orderId: Int!) {\n  getInternalNotes(orderId: $orderId) {\n    id\n    order_id\n    user_id\n    text\n    file_id\n    type\n    user {\n      id\n      name\n    }\n    fileInternal {\n      id\n      url\n    }\n  }\n}\n`\n\nexport const CREATE_INTERNAL_NOTE = gql`\nmutation CreateInternalNote($inputInternalNote: internalNote!) {\n  createInternalNote(inputInternalNote: $inputInternalNote)\n}\n`\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useQuery, useMutation } from '@apollo/client'\nimport {\n  CREATE_INTERNAL_NOTE,\n  GET_INTERNAL_NOTES,\n} from '../../../graphql/Catalog/InternalNotes/internalNotes'\nimport { ToastSweetAlert } from '../../Helpers/ToastSweetAlert'\nimport { AuthContext } from '../../../Auth/AuthContext'\nimport { useRef } from 'react'\nconst InternalNotes = ({ idOrder }) => {\n  const { user } = useContext(AuthContext)\n  const [values, setValues] = useState({\n    text: '',\n    document: '',\n  })\n  const [messages, setMessages] = useState(null)\n  const { text, document } = values\n  const refResetDocument = useRef()\n  const boxScroll = useRef()\n  const [createNote] = useMutation(CREATE_INTERNAL_NOTE, {\n    refetchQueries: [\n      { query: GET_INTERNAL_NOTES, variables: { orderId: parseInt(idOrder) } },\n    ],\n  })\n  const { data, loading, error } = useQuery(GET_INTERNAL_NOTES, {\n    variables: { orderId: parseInt(idOrder) },\n  })\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n      //PINTAR DATOS EN INTERNAL\n      let list = []\n      data.getInternalNotes.map((item) => {\n        list.push({\n          user: item?.user?.name ? item.user.name : '',\n          text: item?.text ? item.text : '',\n          file: item?.fileInternal?.url ? item.fileInternal.url : '',\n          type: item?.type ? item.type : '',\n        })\n        return true\n      })\n      setMessages(list)\n    }\n  }, [data, loading, error])\n  const handleChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    })\n  }\n  const sendInternalNotes = async () => {\n    //Validate inputs data\n    if (!text && !document)\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Debe escribir o subir un documento',\n      })\n    let type = null\n    if (document) {\n      type = document.type.split('/')\n      if (\n        type[1] !== 'pdf' &&\n        type[0] !== 'image' &&\n        type[1] !== 'jpg' &&\n        type[1] !== 'png' &&\n        type[1] !== 'jpeg'\n      )\n        return ToastSweetAlert({\n          mode: 'error',\n          message: 'Archivo incompatible',\n        })\n      if (document.size > 5242880)\n        return ToastSweetAlert({\n          mode: 'error',\n          message: 'Archivo es demasiado pesado',\n        })\n    }\n    //Insert data\n    try {\n      await createNote({\n        variables: {\n          inputInternalNote: {\n            user_id: user.idUser,\n            order_id: idOrder,\n            text: text === '' ? null : text,\n            file: document === '' ? null : document,\n            type: document ? type[1] : null,\n          },\n        },\n      })\n      //If the Insert was a successfull\n      setValues({\n        text: '',\n        document: '',\n      })\n      return (refResetDocument.current.value = '')\n    } catch (e) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: error.message,\n      })\n    }\n  }\n  /* set Scroll to bottom position */\n  useEffect(() => {\n    if (boxScroll) {\n      const element = boxScroll.current\n      element.scrollTop = element.scrollHeight\n    }\n  }, [boxScroll, data, loading, error])\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3 className=\"card-title\">Notas internas</h3>\n          </div>\n          <div className=\"card-body internalNotes-body\">\n            {/* Show history */}\n            <div ref={boxScroll} className=\"boxHistory\">\n              {messages && (\n                <ul>\n                  {messages.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <div>\n                        {item.user}&nbsp;&nbsp;\n                        {item.text && <i className=\"fas fa-comment\"></i>}\n                        {item.text === '' && item.file && (\n                          <i className=\"fas fa-file\"></i>\n                        )}\n                        <li>\n                          {item.text && <p>{item.text}</p>}\n                          {item.type && item.type === 'image' && (\n                            <a\n                              href={item.file}\n                              target=\"_blank\"\n                              rel=\"noreferrer\"\n                            >\n                              <img\n                                src={item.file}\n                                alt=\"Internal Notes images\"\n                              />\n                            </a>\n                          )}\n                          {item.type && item.type === 'pdf' && (\n                            <div className=\"files\">\n                              <a\n                                className=\"documentLink\"\n                                href={item.file}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                              >\n                                Link del documento\n                              </a>\n                              <embed\n                                src={item.file}\n                                width=\"90%\"\n                                height=\"1000px\"\n                              />\n                            </div>\n                          )}\n                        </li>\n                      </div>\n                    </React.Fragment>\n                  ))}\n                </ul>\n              )}\n            </div>\n            {/* Inputs */}\n            <div className=\"boxInput\">\n              <input\n                type=\"text\"\n                placeholder=\"Escribe un mensaje...\"\n                id=\"internalNotesText\"\n                name=\"text\"\n                value={values.text}\n                onChange={handleChange}\n                autoComplete=\"off\"\n              />\n              <input\n                type=\"file\"\n                id=\"internalNotesDocument\"\n                name=\"document\"\n                onChange={(e) =>\n                  setValues({ ...values, document: e.target.files[0] })\n                }\n                ref={refResetDocument}\n                accept=\".jpg, .jpeg, .png, .pdf\"\n              />\n              <label htmlFor=\"internalNotesDocument\" id=\"labelDocument\">\n                <i className=\"fas fa-paperclip\"></i>\n              </label>\n              <button onClick={sendInternalNotes}>\n                <i className=\"fas fa-paper-plane\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default InternalNotes\n","import Swal from 'sweetalert2'\nimport { ToastSweetAlert } from './ToastSweetAlert'\n\nexport const RejectOrder = async (\n  dataIssuses,\n  idUser,\n  createReason,\n  idOrder,\n  history\n) => {\n  \n    let clientsReason = null;\n\n    const { value: reason } = await Swal.fire({\n        title: 'Seleccione la razon',\n        input: 'radio',\n        inputOptions: dataIssuses,\n        inputValidator: (value) => {\n            if (!value) {\n            return 'Debe elegir una razon'\n            }\n        }\n    })\n  \n      \n    if (reason) {\n        let flag = false;\n        let error = true;\n        /* User selected others... */\n        if(dataIssuses[reason].toUpperCase() === \"OTRO\" ){\n            flag = true;\n            const { value: reasonText } = await Swal.fire({\n            title: 'Escribe el motivo',\n            input: 'text',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                if (!value) return 'Debe escribir el motivo de la cancelacion'\n            }\n            })\n            \n            if (reasonText){\n                clientsReason = reasonText;\n                error = false;\n            } \n            \n        }\n\n    if (flag && error)\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Debe escribir el motivo de la cancelacion',\n      })\n\n    /* INSERT AND UPDATE DATA */\n    try {\n      await createReason({\n        variables: {\n          inputReason: {\n            order_id: parseInt(idOrder),\n            issusse_id: parseInt(reason),\n            user_id: parseInt(idUser),\n            reason: clientsReason,\n          },\n        },\n      })\n      return (\n        ToastSweetAlert({\n          mode: 'ok',\n          message: 'Orden rechazada',\n        }),\n        history.goBack()\n      )\n    } catch (e) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: e.message,\n      })\n    }\n  }\n}\n","import { gql } from '@apollo/client'\n\nexport const GET_ISSUES = gql`\nquery GetIssues($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n    getIssues(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n\nexport const GET_ALL_ISSUES = gql`\nquery GetAllIssusses {\n  getAllIssusses {\n    id\n    name\n  }\n}\n`","import { gql } from \"@apollo/client\";\n\nexport const CREATE_REASON = gql`\nmutation CreateReason($inputReason: reasonData!) {\n  createReason(inputReason: $inputReason)\n}\n`","import { gql } from '@apollo/client'\n\nexport const GET_BILLING_ORDERS = gql`\nquery GetBillingOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n    getBillingOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`","import { gql } from '@apollo/client'\n\nexport const GET_IN_PROCESS_ORDERS = gql`\nquery GetInProcessOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n    getInProcessOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`","import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport moment from 'moment'\nimport 'moment/locale/es'\nimport {\n  CHANGE_TO_PROCESS,\n  GET_ORDER_DETAILS_BY_ID,\n  GET_PENDING_ORDERS,\n  CHANGE_TO_BILLING,\n} from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useMutation, useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport { GET_STORES } from '../../../../../graphql/Catalog/Stores/stores'\nimport { GET_SIPPING_COMPANIES } from '../../../../../graphql/Catalog/ShippingCompanies/shippingCompanies'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport Swal from 'sweetalert2'\nimport { RejectOrder } from '../../../../Helpers/RejectOrder'\nimport { AuthContext } from '../../../../../Auth/AuthContext'\nimport { GET_ALL_ISSUES } from '../../../../../graphql/Catalog/Issues/issues'\nimport { CREATE_REASON } from '../../../../../graphql/Catalog/Reasons/reasons'\nimport { GET_BILLING_ORDERS } from '../../../../../graphql/Catalog/Orders/billingOrders'\nimport { GET_COUNTERS_ORDERS } from '../../../../../graphql/Catalog/Orders/countOrders'\nimport { GET_IN_PROCESS_ORDERS } from '../../../../../graphql/Catalog/Orders/inProcessOrders'\n\nconst PendingOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeId, setStoreId] = useState('')\n  const [shippingCompanyId, setShippingCompanyId] = useState('')\n  const [idOrder, setIdOrder] = useState(0)\n  const [warehouseId, setWarehouseId] = useState('')\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [issuses, setIssuses] = useState({})\n\n  /* ORDER DATA */\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  /* STORES DATA */\n  const { data: dataStores, loading: loadingStores } = useQuery(GET_STORES)\n\n  /* SIPPING COMPANIES DATA */\n  const { data: dataShippingCompanies, loading: loadingShippingCompanies } =\n    useQuery(GET_SIPPING_COMPANIES)\n\n  const [changeToProcess] = useMutation(CHANGE_TO_PROCESS)\n  const [changeToBilling] = useMutation(CHANGE_TO_BILLING)\n\n  const { user } = useContext(AuthContext)\n\n  /* GET ALL ISSUSES DATA */\n  const {\n    data: dataIssuses,\n    loading: loadingIssuses,\n    error: errorIssuses,\n  } = useQuery(GET_ALL_ISSUES)\n\n  const [createReason] = useMutation(CREATE_REASON)\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 1) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en pendiente',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  /* SET DATA TO NEW OBJ */\n  useEffect(() => {\n    if (!loadingIssuses && !errorIssuses) {\n      let list = {}\n      dataIssuses.getAllIssusses.map((item) => {\n        list = Object.assign(list, { [item.id]: item.name })\n        return true\n      })\n      setIssuses(list)\n    }\n  }, [dataIssuses, loadingIssuses, errorIssuses])\n\n  const onSubmitLocal = async () => {\n    if (!storeId) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Por favor seleccione una tienda',\n      })\n    }\n    try {\n      const { data } = await changeToProcess({\n        variables: {\n          orderId: parseInt(_id),\n          storeId: parseInt(storeId),\n        },\n        refetchQueries: [\n          {\n            query: GET_PENDING_ORDERS,\n            variables: {\n              searchQuery: '',\n              limit: null,\n              offset: null,\n              platform: null,\n            },\n          },\n          {\n            query: GET_COUNTERS_ORDERS,\n          },\n          {\n            query: GET_IN_PROCESS_ORDERS,\n            variables: {\n              searchQuery: '',\n              limit: null,\n              offset: null,\n              platform: null,\n            },\n          },\n        ],\n      })\n      if (data.changeToProcess) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const onSubmitNational = async () => {\n    if (!warehouseId) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Por favor seleccione un almacen',\n      })\n    }\n    if (!shippingCompanyId) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Por favor seleccione una empresa de logistica',\n      })\n    }\n    try {\n      const { data } = await changeToBilling({\n        variables: {\n          orderId: parseInt(_id),\n          shippingCompayId: parseInt(shippingCompanyId),\n        },\n        refetchQueries: [\n          {\n            query: GET_PENDING_ORDERS,\n            variables: {\n              searchQuery: '',\n              limit: null,\n              offset: null,\n              platform: null,\n            },\n          },\n          { query: GET_BILLING_ORDERS },\n          { query: GET_COUNTERS_ORDERS },\n        ],\n      })\n      if (data.changeToBilling) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n\n  const handleStoreChange = (e) => {\n    setStoreId(parseInt(e.value))\n  }\n  const handleShippingCompanyChange = (e) => {\n    setShippingCompanyId(parseInt(e.value))\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById &&\n        !loading &&\n        !loadingStores &&\n        !loadingShippingCompanies &&\n        data?.getOrderById?.status?.id === 1 && (\n          <>\n            <ContentHeader\n              title=\"Orden Pendiente\"\n              breadcrumb=\"Ordenes\"\n              windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n            />\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles</h3>\n                      </div>\n                      <div className=\"card-body col-12\">\n                        <OrderGeneral\n                          orderDate={moment(\n                            data?.getOrderById?.order_date\n                          ).format('LLL')}\n                          orderId={data?.getOrderById?.order_id}\n                          paymentId={data?.getOrderById?.payment.payment_id}\n                          platform={data?.getOrderById?.platform.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de pago</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderDetailStore\n                          orderType={data.getOrderById.type?.name}\n                          orderStore={\n                            data.getOrderById.store?.name ||\n                            data.getOrderById.warehouse?.name\n                          }\n                          orderPaymentPlatform={\n                            data.getOrderById.payment?.platform\n                          }\n                          orderMethod={data.getOrderById.method?.name}\n                          withStore={storeFromDB}\n                          totalPrice={data.getOrderById.total_price}\n                          shippingPrice={data.getOrderById.shipping_price}\n                          id_store={storeId}\n                          status={data?.getOrderById?.status?.id}\n                          uberAssignedId={data?.getOrderById?.uber_id}\n                          stores={dataStores?.getAllStores.rows}\n                          shippingCompanies={\n                            dataShippingCompanies?.getAllShippingCompanies\n                          }\n                          id_shippingCompany={shippingCompanyId}\n                          status_id={data?.getOrderById?.status_id}\n                          handleStoreChange={handleStoreChange}\n                          handleShippingCompanyChange={\n                            handleShippingCompanyChange\n                          }\n                          show={show}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Desgloce de productos</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderProducts\n                          productsArray={data.getOrderById.products}\n                          totalQuantity={data.getOrderById.product_quantity}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de envío</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderShippingDetails\n                          city={data.getOrderById.shipping?.city}\n                          address={data.getOrderById.shipping?.address_1}\n                          postcode={data.getOrderById.shipping?.postcode}\n                          email={data.getOrderById.shipping?.email}\n                          phone={data.getOrderById.shipping?.phone}\n                          firstName={data.getOrderById.shipping?.first_name}\n                          lastName={data.getOrderById.shipping?.last_name}\n                          state={data.getOrderById.shipping?.state}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {!show && (\n                    <OrderButtons\n                      cancelBtn={'Rechazar'}\n                      onCancel={async () =>\n                        RejectOrder(\n                          issuses,\n                          user.idUser,\n                          createReason,\n                          idOrder,\n                          history\n                        )\n                      }\n                      processBtn={'Procesar'}\n                      onProcess={\n                        data.getOrderById.type_id === 1\n                          ? onSubmitNational\n                          : onSubmitLocal\n                      }\n                    />\n                  )}\n                </div>\n              </div>\n\n              {/* TIMELINE & INTERNAL NOTES */}\n              <div className=\"col-4\">\n                <Timeline idOrder={idOrder} />\n                <InternalNotes idOrder={idOrder} />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default PendingOrdersNew\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_IN_PROCESS_ORDERS } from '../../../../../graphql/Catalog/Orders/inProcessOrders'\n\nconst InProcessOrder = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_IN_PROCESS_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getInProcessOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getInProcessOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"En proceso\"\n        breadcrumb=\"Pedidos en proceso\"\n        windowTitle=\"En proceso\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Proceso\"\n        requery={GET_IN_PROCESS_ORDERS}\n        editText={'Tomar Orden'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default InProcessOrder\n","import { gql } from '@apollo/client'\n\nexport const GET_TO_STOCK_ORDERS = gql`\nquery GetToStockOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n    getToStockOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n\nexport const CHANGE_TO_SUPPLY = gql`\n  mutation ChangeToSupply($orderId: Int!) {\n    changeToSupply(order_id: $orderId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`\n","import React, { useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery, useMutation } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport {\n  CHANGE_TO_SUPPLY,\n  GET_TO_STOCK_ORDERS,\n} from '../../../../../graphql/Catalog/Orders/toStockOrders'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport Swal from 'sweetalert2'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport { RejectOrder } from '../../../../Helpers/RejectOrder'\nimport { GET_ALL_ISSUES } from '../../../../../graphql/Catalog/Issues/issues'\nimport { CREATE_REASON } from '../../../../../graphql/Catalog/Reasons/reasons'\nimport { AuthContext } from '../../../../../Auth/AuthContext'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst InProcessOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeId, setStoreId] = useState('')\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [idOrder, setIdOrder] = useState(0)\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [issuses, setIssuses] = useState({})\n  const { user } = useContext(AuthContext)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  const [changeToSupply] = useMutation(CHANGE_TO_SUPPLY)\n\n  /* GET ALL ISSUSES DATA */\n  const {\n    data: dataIssuses,\n    loading: loadingIssuses,\n    error: errorIssuses,\n  } = useQuery(GET_ALL_ISSUES)\n\n  const [createReason] = useMutation(CREATE_REASON)\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 2) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en proceso',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  /* SET DATA TO NEW OBJ */\n  useEffect(() => {\n    if (!loadingIssuses && !errorIssuses) {\n      let list = {}\n      dataIssuses.getAllIssusses.map((item) => {\n        list = Object.assign(list, { [item.id]: item.name })\n        return true\n      })\n      setIssuses(list)\n    }\n  }, [dataIssuses, loadingIssuses, errorIssuses])\n\n  const onSubmitLocal = async () => {\n    try {\n      const { data } = await changeToSupply({\n        variables: {\n          orderId: parseInt(_id),\n          storeId: parseInt(storeId),\n        },\n        refetchQueries: [{ query: GET_TO_STOCK_ORDERS }],\n      })\n      if (data.changeToSupply) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const onSubmitNational = () => {}\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById && !loading && data?.getOrderById?.status?.id === 2 && (\n        <>\n          <ContentHeader\n            title=\"Orden en Proceso\"\n            breadcrumb=\"Proceso\"\n            windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n          />\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles</h3>\n                    </div>\n                    <div className=\"card-body col-12\">\n                      <OrderGeneral\n                        orderDate={moment(\n                          data?.getOrderById?.order_date\n                        ).format('LLL')}\n                        orderId={data?.getOrderById?.order_id}\n                        paymentId={data?.getOrderById?.payment.payment_id}\n                        platform={data?.getOrderById?.platform.name}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de pago</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderDetailStore\n                        orderType={data.getOrderById.type?.name}\n                        orderStore={\n                          data.getOrderById.store?.name ||\n                          data.getOrderById.warehouse?.name\n                        }\n                        orderPaymentPlatform={\n                          data.getOrderById.payment?.platform\n                        }\n                        orderMethod={data.getOrderById.method?.name}\n                        withStore={storeFromDB}\n                        totalPrice={data.getOrderById.total_price}\n                        shippingPrice={data.getOrderById.shipping_price}\n                        handleStoreChange={handleStoreChange}\n                        id_store={storeId}\n                        status={data?.getOrderById?.status?.id}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Desgloce de productos</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderProducts\n                        productsArray={data.getOrderById.products}\n                        totalQuantity={data.getOrderById.product_quantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de envío</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderShippingDetails\n                        city={data.getOrderById.shipping?.city}\n                        address={data.getOrderById.shipping?.address_1}\n                        postcode={data.getOrderById.shipping?.postcode}\n                        email={data.getOrderById.shipping?.email}\n                        phone={data.getOrderById.shipping?.phone}\n                        firstName={data.getOrderById.shipping?.first_name}\n                        lastName={data.getOrderById.shipping?.last_name}\n                        state={data.getOrderById.shipping?.state}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {!show && (\n                  <OrderButtons\n                    cancelBtn={'Rechazar'}\n                    onCancel={async () =>\n                      RejectOrder(\n                        issuses,\n                        user.idUser,\n                        createReason,\n                        idOrder,\n                        history\n                      )\n                    }\n                    processBtn={'Surtir'}\n                    onProcess={\n                      data.getOrderById.type_id === 1\n                        ? onSubmitNational\n                        : onSubmitLocal\n                    }\n                  />\n                )}\n              </div>\n            </div>\n\n            {/* TIMELINE & INTERNAL NOTES */}\n            <div className=\"col-4\">\n              <Timeline idOrder={idOrder} />\n              <InternalNotes idOrder={idOrder} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default InProcessOrdersNew\n","import { gql } from '@apollo/client'\n\nexport const GET_LOCAL_ORDERS = gql`\nquery GetLocalOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getLocalOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      status {\n        id\n        name\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_LOCAL_ORDERS } from '../../../../../graphql/Catalog/Orders/localOrders'\n\nconst LocalShippingOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_LOCAL_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getLocalOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Estatus: order.status?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getLocalOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Locales\"\n        breadcrumb=\"Pedidos Locales\"\n        windowTitle=\"Locales\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Locales\"\n        requery={GET_LOCAL_ORDERS}\n        editText={'Detalles'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default LocalShippingOrders\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst LocalShippingOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeId, setStoreId] = useState('')\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [idOrder, setIdOrder] = useState(0)\n  const [storeFromDB, setStoreFromDB] = useState(false)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (\n        data?.getOrderById?.status?.id !== 2 &&\n        data?.getOrderById?.status?.id !== 6 &&\n        data?.getOrderById?.status?.id !== 7 &&\n        data?.getOrderById?.status?.id !== 8\n      ) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en locales',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const onSubmitLocal = () => {\n    if (!storeId) {\n      alert('Por favor seleccione una tienda')\n      return\n    }\n  }\n  const onSubmitNational = () => {}\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById &&\n        !loading &&\n        (data?.getOrderById?.status?.id === 2 ||\n          data?.getOrderById?.status?.id === 6 ||\n          data?.getOrderById?.status?.id === 7 ||\n          data?.getOrderById?.status?.id === 8) && (\n          <>\n            <ContentHeader\n              title=\"Orden Local\"\n              breadcrumb=\"Ordenes\"\n              windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n            />\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles</h3>\n                      </div>\n                      <div className=\"card-body col-12\">\n                        <OrderGeneral\n                          orderDate={moment(\n                            data?.getOrderById?.order_date\n                          ).format('LLL')}\n                          orderId={data?.getOrderById?.order_id}\n                          paymentId={data?.getOrderById?.payment.payment_id}\n                          platform={data?.getOrderById?.platform.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de pago</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderDetailStore\n                          orderType={data.getOrderById.type?.name}\n                          orderStore={\n                            data.getOrderById.store?.name ||\n                            data.getOrderById.warehouse?.name\n                          }\n                          orderPaymentPlatform={\n                            data.getOrderById.payment?.platform\n                          }\n                          orderMethod={data.getOrderById.method?.name}\n                          withStore={storeFromDB}\n                          totalPrice={data.getOrderById.total_price}\n                          shippingPrice={data.getOrderById.shipping_price}\n                          handleStoreChange={handleStoreChange}\n                          id_store={storeId}\n                          status={data?.getOrderById?.status?.id}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Desgloce de productos</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderProducts\n                          productsArray={data.getOrderById.products}\n                          totalQuantity={data.getOrderById.product_quantity}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de envío</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderShippingDetails\n                          city={data.getOrderById.shipping?.city}\n                          address={data.getOrderById.shipping?.address_1}\n                          postcode={data.getOrderById.shipping?.postcode}\n                          email={data.getOrderById.shipping?.email}\n                          phone={data.getOrderById.shipping?.phone}\n                          firstName={data.getOrderById.shipping?.first_name}\n                          lastName={data.getOrderById.shipping?.last_name}\n                          state={data.getOrderById.shipping?.state}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  {!show && (\n                    <OrderButtons\n                      firstButtonGray={true}\n                      cancelBtn={'Imprimir'}\n                      onCancel={() => history.push('/orders/local')}\n                      processBtn={'Procesar'}\n                      onProcess={\n                        data.getOrderById.type_id === 1\n                          ? onSubmitNational\n                          : onSubmitLocal\n                      }\n                    />\n                  )}\n                </div>\n              </div>\n\n              {/* TIMELINE & INTERNAL NOTES */}\n              <div className=\"col-4\">\n                <Timeline idOrder={idOrder} />\n                <InternalNotes idOrder={idOrder} />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default LocalShippingOrdersNew\n","import { gql } from '@apollo/client'\n\nexport const GET_NATIONAL_ORDERS = gql`\nquery GetNationalOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getNationalOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      status {\n        id\n        name\n      }\n      warehouse {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_NATIONAL_ORDERS } from '../../../../../graphql/Catalog/Orders/nationalOrders'\n\nconst NationalShippingOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_NATIONAL_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getNationalOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Estatus: order.status?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getNationalOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Nacionales\"\n        breadcrumb=\"Pedidos Nacionales\"\n        windowTitle=\"Nacionales\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Nacionales\"\n        requery={GET_NATIONAL_ORDERS}\n        editText={'Detalles'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default NationalShippingOrders\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst NationalShippingOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeId, setStoreId] = useState('')\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [idOrder, setIdOrder] = useState(0)\n  const [storeFromDB, setStoreFromDB] = useState(false)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (\n        data?.getOrderById?.status?.id !== 7 &&\n        data?.getOrderById?.status?.id !== 3 &&\n        data?.getOrderById?.status?.id !== 9 &&\n        data?.getOrderById?.status?.id !== 10 &&\n        data?.getOrderById?.status?.id !== 8\n      ) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en nacionales',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const onSubmitLocal = () => {\n    if (!storeId) {\n      alert('Por favor seleccione una tienda')\n      return\n    }\n  }\n  const onSubmitNational = () => {}\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById &&\n        !loading &&\n        (data?.getOrderById?.status?.id === 7 ||\n          data?.getOrderById?.status?.id === 3 ||\n          data?.getOrderById?.status?.id === 9 ||\n          data?.getOrderById?.status?.id === 10 ||\n          data?.getOrderById?.status?.id === 8) && (\n          <>\n            <ContentHeader\n              title=\"Orden Nacionales\"\n              breadcrumb=\"Ordenes\"\n              windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n            />\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles</h3>\n                      </div>\n                      <div className=\"card-body col-12\">\n                        <OrderGeneral\n                          orderDate={moment(\n                            data?.getOrderById?.order_date\n                          ).format('LLL')}\n                          orderId={data?.getOrderById?.order_id}\n                          paymentId={data?.getOrderById?.payment.payment_id}\n                          platform={data?.getOrderById?.platform.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de pago</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderDetailStore\n                          orderType={data.getOrderById.type?.name}\n                          orderStore={\n                            data.getOrderById.warehouse?.name ||\n                            data.getOrderById.store?.name\n                          }\n                          orderPaymentPlatform={\n                            data.getOrderById.payment?.platform\n                          }\n                          orderMethod={data.getOrderById.method?.name}\n                          withStore={storeFromDB}\n                          totalPrice={data.getOrderById.total_price}\n                          shippingPrice={data.getOrderById.shipping_price}\n                          handleStoreChange={handleStoreChange}\n                          id_store={storeId}\n                          status={data?.getOrderById?.status?.id}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Desgloce de productos</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderProducts\n                          productsArray={data.getOrderById.products}\n                          totalQuantity={data.getOrderById.product_quantity}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de envío</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderShippingDetails\n                          city={data.getOrderById.shipping?.city}\n                          address={data.getOrderById.shipping?.address_1}\n                          postcode={data.getOrderById.shipping?.postcode}\n                          email={data.getOrderById.shipping?.email}\n                          phone={data.getOrderById.shipping?.phone}\n                          firstName={data.getOrderById.shipping?.first_name}\n                          lastName={data.getOrderById.shipping?.last_name}\n                          state={data.getOrderById.shipping?.state}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {!show && (\n                    <OrderButtons\n                      firstButtonGray={true}\n                      cancelBtn={'Imprimir'}\n                      onCancel={() => history.push('/orders/pending')}\n                      processBtn={'Procesar'}\n                      onProcess={\n                        data.getOrderById.type_id === 1\n                          ? onSubmitNational\n                          : onSubmitLocal\n                      }\n                    />\n                  )}\n                </div>\n              </div>\n              {/* TIMELINE & INTERNAL NOTES */}\n              <div className=\"col-4\">\n                <Timeline idOrder={idOrder} />\n                <InternalNotes idOrder={idOrder} />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default NationalShippingOrdersNew\n","import { gql } from '@apollo/client'\n\nexport const GET_SHIPPED_ORDERS = gql`\nquery GetShippedOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getShippedOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n\nexport const CHANGE_TO_SHIPPED = gql`\n  mutation ChangeToShipped($orderId: Int!) {\n    changeToShipped(order_id: $orderId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_SHIPPED_ORDERS } from '../../../../../graphql/Catalog/Orders/shippedOrders'\n\nconst ShippedOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_SHIPPED_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getShippedOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getShippedOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Enviados\"\n        breadcrumb=\"Pedidos enviados\"\n        windowTitle=\"Enviados\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Enviados\"\n        requery={GET_SHIPPED_ORDERS}\n        editText={'Detalles'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default ShippedOrders\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderProducts from '../../../../OrderProducts'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst ShippedOrdersNew = () => {\n  const { id: _id } = useParams()\n  const [storeId, setStoreId] = useState('')\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [idOrder, setIdOrder] = useState(0)\n  const history = useHistory()\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/shipped')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/shipped')\n        )\n      }\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/shipped')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 11) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en enviados',\n          },\n          history.push('/orders/shipped')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById && !loading && data?.getOrderById?.status?.id === 11 && (\n        <>\n          <ContentHeader\n            title=\"Orden Enviada\"\n            breadcrumb=\"Enviados\"\n            windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n          />\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles</h3>\n                    </div>\n                    <div className=\"card-body col-12\">\n                      <OrderGeneral\n                        orderDate={moment(\n                          data?.getOrderById?.order_date\n                        ).format('LLL')}\n                        orderId={data?.getOrderById?.order_id}\n                        paymentId={data?.getOrderById?.payment.payment_id}\n                        platform={data?.getOrderById?.platform.name}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de pago</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderDetailStore\n                        orderType={data.getOrderById.type?.name}\n                        orderStore={\n                          data.getOrderById.store?.name ||\n                          data.getOrderById.warehouse?.name\n                        }\n                        orderPaymentPlatform={\n                          data.getOrderById.payment?.platform\n                        }\n                        orderMethod={data.getOrderById.method?.name}\n                        withStore={storeFromDB}\n                        totalPrice={data.getOrderById.total_price}\n                        shippingPrice={data.getOrderById.shipping_price}\n                        handleStoreChange={handleStoreChange}\n                        id_store={storeId}\n                        status={data?.getOrderById?.status?.id}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Desgloce de productos</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderProducts\n                        productsArray={data.getOrderById.products}\n                        totalQuantity={data.getOrderById.product_quantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de envío</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderShippingDetails\n                        city={data.getOrderById.shipping?.city}\n                        address={data.getOrderById.shipping?.address_1}\n                        postcode={data.getOrderById.shipping?.postcode}\n                        email={data.getOrderById.shipping?.email}\n                        phone={data.getOrderById.shipping?.phone}\n                        firstName={data.getOrderById.shipping?.first_name}\n                        lastName={data.getOrderById.shipping?.last_name}\n                        state={data.getOrderById.shipping?.state}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* TIMELINE & INTERNAL NOTES */}\n            <div className=\"col-4\">\n              <Timeline idOrder={idOrder} />\n              <InternalNotes idOrder={idOrder} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ShippedOrdersNew\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_TO_STOCK_ORDERS } from '../../../../../graphql/Catalog/Orders/toStockOrders'\n\nconst ToStockOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_TO_STOCK_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getToStockOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getToStockOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Surtir\"\n        breadcrumb=\"Pedidos por surtir\"\n        windowTitle=\"Surtir\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Surtir\"\n        requery={GET_TO_STOCK_ORDERS}\n        editText={'Tomar Orden'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default ToStockOrders\n","import { gql } from '@apollo/client'\n\nexport const GET_COLLECT_ORDERS = gql`\nquery GetCollectOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getCollectOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n\nexport const CHANGE_TO_COLLECT = gql`\n  mutation ChangeToCollect($orderId: Int!, $shippingCompayId: Int) {\n    changeToCollect(order_id: $orderId, shipping_compay_id: $shippingCompayId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport 'moment/locale/es'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useMutation, useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport { GET_SIPPING_COMPANIES } from '../../../../../graphql/Catalog/ShippingCompanies/shippingCompanies'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport Swal from 'sweetalert2'\nimport { CHANGE_TO_COLLECT } from '../../../../../graphql/Catalog/Orders/collectOrders'\nimport { GET_TO_STOCK_ORDERS } from '../../../../../graphql/Catalog/Orders/toStockOrders'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\n\nconst ToStockOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeId, setStoreId] = useState('')\n  const [shippingCompanyId, setShippingCompanyId] = useState('')\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [idOrder, setIdOrder] = useState(0)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return (\n          ToastSweetAlert({\n            mode: 'error',\n            message: error.message,\n          }),\n          history.push('/orders/stock')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/stock')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/stock')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 6) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en surtir',\n          },\n          history.push('/orders/stock')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const [changeToCollect] = useMutation(CHANGE_TO_COLLECT)\n\n  /* SIPPING COMPANIES DATA */\n  const {\n    data: dataShippingCompanies,\n    loading: loadingShippingCompanies,\n    // error: errorShippingCompanies,\n  } = useQuery(GET_SIPPING_COMPANIES)\n  const onSubmitLogistic = async () => {\n    if (!shippingCompanyId) {\n      return ToastSweetAlert({\n        mode: 'error',\n        message: 'Por favor seleccione una empresa de logistica',\n      })\n    }\n    try {\n      const { data } = await changeToCollect({\n        variables: {\n          orderId: parseInt(_id),\n          shippingCompayId: parseInt(shippingCompanyId),\n        },\n        refetchQueries: [{ query: GET_TO_STOCK_ORDERS }],\n      })\n      if (data.changeToCollect) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const onSubmitNoLogistic = async () => {\n    try {\n      const { data } = await changeToCollect({\n        variables: {\n          orderId: parseInt(_id),\n        },\n        refetchQueries: [{ query: GET_TO_STOCK_ORDERS }],\n      })\n      if (data.changeToCollect) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n  const handleShippingCompanyChange = (e) => {\n    setShippingCompanyId(parseInt(e.value))\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById &&\n        !loading &&\n        !loadingShippingCompanies &&\n        data?.getOrderById?.status?.id === 6 && (\n          <>\n            <ContentHeader\n              title=\"Orden por surtir\"\n              breadcrumb=\"Surtir\"\n              windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n            />\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles</h3>\n                      </div>\n                      <div className=\"card-body col-12\">\n                        <OrderGeneral\n                          orderDate={moment(\n                            data?.getOrderById?.order_date\n                          ).format('LLL')}\n                          orderId={data?.getOrderById?.order_id}\n                          paymentId={data?.getOrderById?.payment.payment_id}\n                          platform={data?.getOrderById?.platform.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de pago</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderDetailStore\n                          orderType={data.getOrderById.type?.name}\n                          orderStore={\n                            data.getOrderById.store?.name ||\n                            data.getOrderById.warehouse?.name\n                          }\n                          orderPaymentPlatform={\n                            data.getOrderById.payment?.platform\n                          }\n                          orderMethod={data.getOrderById.method?.name}\n                          withStore={storeFromDB}\n                          totalPrice={data.getOrderById.total_price}\n                          shippingPrice={data.getOrderById.shipping_price}\n                          id_store={storeId}\n                          status_id={data?.getOrderById?.status?.id}\n                          uberAssignedId={data?.getOrderById?.uber_id}\n                          handleStoreChange={handleStoreChange}\n                          shippingCompanies={\n                            dataShippingCompanies?.getAllShippingCompanies\n                          }\n                          id_shippingCompany={shippingCompanyId}\n                          handleShippingCompanyChange={\n                            handleShippingCompanyChange\n                          }\n                          show={show}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Desgloce de productos</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderProducts\n                          productsArray={data.getOrderById.products}\n                          totalQuantity={data.getOrderById.product_quantity}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de envío</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderShippingDetails\n                          city={data.getOrderById.shipping?.city}\n                          address={data.getOrderById.shipping?.address_1}\n                          postcode={data.getOrderById.shipping?.postcode}\n                          email={data.getOrderById.shipping?.email}\n                          phone={data.getOrderById.shipping?.phone}\n                          firstName={data.getOrderById.shipping?.first_name}\n                          lastName={data.getOrderById.shipping?.last_name}\n                          state={data.getOrderById.shipping?.state}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  {!show && (\n                    <OrderButtons\n                      firstButtonGray={true}\n                      cancelBtn={'Imprimir'}\n                      onCancel={() => history.push('/orders/pending')}\n                      processBtn={'Por recolectar'}\n                      onProcess={\n                        data.getOrderById.method?.name === 'Fast'\n                          ? onSubmitLogistic\n                          : onSubmitNoLogistic\n                      }\n                    />\n                  )}\n                </div>\n              </div>\n              {/* TIMELINE & INTERNAL NOTES */}\n              <div className=\"col-4\">\n                <Timeline idOrder={idOrder} />\n                <InternalNotes idOrder={idOrder} />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default ToStockOrdersNew\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_BILLING_ORDERS } from '../../../../../graphql/Catalog/Orders/billingOrders'\n\nconst BillingOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_BILLING_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getBillingOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getBillingOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Facturacion\"\n        breadcrumb=\"Pedidos Facturacion\"\n        windowTitle=\"Facturacion\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Facturacion\"\n        requery={GET_BILLING_ORDERS}\n        editText={'Detalles'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default BillingOrders\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport moment from 'moment'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery } from '@apollo/client'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\n// import Swal from 'sweetalert2'\n\nconst BillingOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const [storeId, setStoreId] = useState('')\n  const [idOrder, setIdOrder] = useState(0)\n  const history = useHistory()\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [storeFromDB, setStoreFromDB] = useState(false)\n\n  // const inputOptions = new Promise((resolve) => {\n  //   setTimeout(() => {\n  //     resolve({\n  //       0: 'No hay stock',\n  //       1: 'Cliente se arrepintio',\n  //       2: 'Otro',\n  //     })\n  //   }, 1000)\n  // })\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 3) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en facturacion',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const onSubmitLocal = () => {\n    /* Imprimir */\n    if (!storeId) {\n      alert('Por favor seleccione una tienda')\n      return\n    }\n  }\n  const onSubmitNational = () => {}\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n  // const orderRejected = async (deleted = false) => {\n  //   if (deleted) {\n  //     const { value: issues } = await Swal.fire({\n  //       title: 'Seleccione un motivo',\n  //       input: 'radio',\n  //       inputOptions: inputOptions,\n  //       inputValidator: (value) => {\n  //         if (!value) {\n  //           return 'Debe elegir un motivo de cancelación'\n  //         }\n  //       },\n  //     })\n  //     if (issues) {\n  //       /* issues selected */\n  //       Swal.fire({ html: `You selected: ${issues}` })\n  //     }\n  //   }\n  // }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById && !loading && data?.getOrderById?.status?.id === 3 && (\n        <>\n          <ContentHeader\n            title=\"Orden Facturación\"\n            breadcrumb=\"Facturación\"\n            windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n          />\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles</h3>\n                    </div>\n                    <div className=\"card-body col-12\">\n                      <OrderGeneral\n                        orderDate={moment(\n                          data?.getOrderById?.order_date\n                        ).format('LLL')}\n                        orderId={data?.getOrderById?.order_id}\n                        paymentId={data?.getOrderById?.payment.payment_id}\n                        platform={data?.getOrderById?.platform.name}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de pago</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderDetailStore\n                        orderType={data.getOrderById.type?.name}\n                        orderStore={\n                          data.getOrderById.store?.name ||\n                          data.getOrderById.warehouse?.name\n                        }\n                        orderPaymentPlatform={\n                          data.getOrderById.payment?.platform\n                        }\n                        orderMethod={data.getOrderById.method?.name}\n                        withStore={storeFromDB}\n                        totalPrice={data.getOrderById.total_price}\n                        shippingPrice={data.getOrderById.shipping_price}\n                        handleStoreChange={handleStoreChange}\n                        id_store={storeId}\n                        status={data?.getOrderById?.status?.id}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Desgloce de productos</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderProducts\n                        productsArray={data.getOrderById.products}\n                        totalQuantity={data.getOrderById.product_quantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de envío</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderShippingDetails\n                        city={data.getOrderById.shipping?.city}\n                        address={data.getOrderById.shipping?.address_1}\n                        postcode={data.getOrderById.shipping?.postcode}\n                        email={data.getOrderById.shipping?.email}\n                        phone={data.getOrderById.shipping?.phone}\n                        firstName={data.getOrderById.shipping?.first_name}\n                        lastName={data.getOrderById.shipping?.last_name}\n                        state={data.getOrderById.shipping?.state}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {!show && (\n                  <OrderButtons\n                    oneButton={true}\n                    onProcess={\n                      data.getOrderById.type_id === 1\n                        ? onSubmitNational\n                        : onSubmitLocal\n                    }\n                    processBtn={'Imprimir'}\n                  />\n                )}\n              </div>\n            </div>\n\n            {/* TIMELINE & INTERNAL NOTES */}\n            <div className=\"col-4\">\n              <Timeline idOrder={idOrder} />\n              <InternalNotes idOrder={idOrder} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default BillingOrdersNew\n","import { gql } from '@apollo/client'\n\nexport const GET_TO_REJECTED_ORDERS = gql`\nquery GetRejectedOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getRejectedOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    # count\n  }\n}\n`\nexport const CHANGE_TO_REJECTED = gql`\n  mutation changeToRejected($orderId: Int!) {\n    changeToRejected(order_id: $orderId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`\nexport const CHANGE_TO_RETURNED = gql`\n  mutation ChangeToReturned($orderId: Int!) {\n    changeToReturned(order_id: $orderId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_TO_REJECTED_ORDERS } from '../../../../../graphql/Catalog/Orders/rejectedOrders'\n\nconst RejectedOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_TO_REJECTED_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getRejectedOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order.store?.name || order.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getRejectedOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Enviados\"\n        breadcrumb=\"Pedidos Enviados\"\n        windowTitle=\"Enviados\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Enviados\"\n        requery={GET_TO_REJECTED_ORDERS}\n        editText={'Detalles'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default RejectedOrders\n","\nimport React from 'react'\n\nfunction OrdersIssuesDetails({ \n    issues = '--', \n    user = '--', \n    timestap = '--' \n}) {\n  return (\n    <div className=\"col-12 overflow-auto\">\n      <div className=\"row\">\n        <div className={`col-sm-12 col-md-12 px-0`}>\n          <p className=\"content-text-details px-2\">\n            <span>{ issues }</span>\n            <br/>\n            <small> {user} - {timestap} </small>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default OrdersIssuesDetails\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrdersIssuesDetails from '../../../../OrdersIssuesDetails'\nimport OrderProducts from '../../../../OrderProducts'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst RejectedOrdersNew = () => {\n  const { id: _id } = useParams()\n  const [storeId, setStoreId] = useState('')\n  // const [warehouseId, setWarehouseId] = useState('')\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [idOrder, setIdOrder] = useState(0)\n  const history = useHistory()\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/rejected')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/rejected')\n        )\n      }\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (\n        data?.getOrderById?.status?.id !== 12 &&\n        data?.getOrderById?.status?.id !== 13\n      ) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta rechazada',\n          },\n          history.push('/orders/rejected')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setStoreId(orderData.store_id)\n      // setWarehouseId(orderData.warehouse_id)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n  const handleStoreChange = (e) => {\n    setStoreId(e.value)\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById &&\n        !loading &&\n        (data?.getOrderById?.status?.id === 12 ||\n          data?.getOrderById?.status?.id === 13) && (\n          <>\n            <ContentHeader\n              title=\"Orden Rechazada\"\n              breadcrumb=\"Ordenes\"\n              windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n            />\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles</h3>\n                      </div>\n                      <div className=\"card-body col-12\">\n                        <OrderGeneral\n                          orderDate={moment(\n                            data?.getOrderById?.order_date\n                          ).format('LLL')}\n                          orderId={data?.getOrderById?.order_id}\n                          paymentId={data?.getOrderById?.payment.payment_id}\n                          platform={data?.getOrderById?.platform.name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de pago</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderDetailStore\n                          orderType={data.getOrderById.type?.name}\n                          orderStore={\n                            data.getOrderById.store?.name ||\n                            data.getOrderById.warehouse?.name\n                          }\n                          orderPaymentPlatform={\n                            data.getOrderById.payment?.platform\n                          }\n                          orderMethod={data.getOrderById.method?.name}\n                          withStore={storeFromDB}\n                          totalPrice={data.getOrderById.total_price}\n                          shippingPrice={data.getOrderById.shipping_price}\n                          handleStoreChange={handleStoreChange}\n                          id_store={storeId}\n                          status={data?.getOrderById?.status?.id}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Desgloce de productos</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderProducts\n                          productsArray={data.getOrderById.products}\n                          totalQuantity={data.getOrderById.product_quantity}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de envío</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrderShippingDetails\n                          city={data.getOrderById.shipping?.city}\n                          address={data.getOrderById.shipping?.address_1}\n                          postcode={data.getOrderById.shipping?.postcode}\n                          email={data.getOrderById.shipping?.email}\n                          phone={data.getOrderById.shipping?.phone}\n                          firstName={data.getOrderById.shipping?.first_name}\n                          lastName={data.getOrderById.shipping?.last_name}\n                          state={data.getOrderById.shipping?.state}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div className=\"card\">\n                      <div className=\"card-header\">\n                        <h3 className=\"card-title\">Detalles de cancelacion</h3>\n                      </div>\n                      <div className=\"card-body\">\n                        <OrdersIssuesDetails\n                          issues={\n                            data.getOrderById?.reason?.issusesDetails?.name !==\n                            'Otro'\n                              ? data.getOrderById?.reason?.issusesDetails?.name\n                              : data.getOrderById?.reason?.reason\n                          }\n                          user={\n                            data.getOrderById?.reason?.userDetails?.name ||\n                            '---'\n                          }\n                          timestap={\n                            moment(data.getOrderById?.reason?.createdAt).format(\n                              'LL hh:MM a'\n                            ) || '---'\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* TIMELINE & INTERNAL NOTES */}\n              <div className=\"col-4\">\n                <Timeline idOrder={idOrder} />\n                <InternalNotes idOrder={idOrder} />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  )\n}\n\nexport default RejectedOrdersNew\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_COLLECT_ORDERS } from '../../../../../graphql/Catalog/Orders/collectOrders'\n\nconst CollectOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_COLLECT_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getCollectOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getCollectOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"Por recolectar\"\n        breadcrumb=\"Pedidos por recolectar\"\n        windowTitle=\"Por recolectar\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"Por recolectar\"\n        requery={GET_COLLECT_ORDERS}\n        editText={'Tomar Orden'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default CollectOrders\n","import { gql } from '@apollo/client'\n\nexport const GET_IN_ROUTE_ORDERS = gql`\nquery GetInRouteOrders($searchQuery: String, $limit: Int, $offset: Int, $platform: Int) {\n  getInRouteOrders(searchQuery: $searchQuery, limit: $limit, offset: $offset, platform: $platform) {\n    rows {\n      id\n      platform_id\n      platform {\n        name\n        id\n      }\n      type {\n        name\n      }\n      payment {\n        platform\n        payment_id\n      }\n      store {\n        name\n      }\n      warehouse {\n        name\n      }\n      shipping {\n        first_name\n        last_name\n      }\n      order_id\n      order_date\n    }\n    count\n  }\n}\n`\n\nexport const CHANGE_TO_IN_ROUTE = gql`\n  mutation ChangeToInRoute($orderId: Int!) {\n    changeToInRoute(order_id: $orderId) {\n      id\n      status {\n        id\n        name\n      }\n    }\n  }\n`","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { GET_COLLECT_ORDERS } from '../../../../../graphql/Catalog/Orders/collectOrders'\nimport { useMutation, useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport Swal from 'sweetalert2'\nimport { CHANGE_TO_SHIPPED } from '../../../../../graphql/Catalog/Orders/shippedOrders'\nimport { CHANGE_TO_IN_ROUTE } from '../../../../../graphql/Catalog/Orders/inRouteOrders'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst CollectOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [storeFromDB, setStoreFromDB] = useState(false)\n  const [idOrder, setIdOrder] = useState(0)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 8) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en recoleccion',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const [changeToShipped] = useMutation(CHANGE_TO_SHIPPED)\n  const [changeToInRoute] = useMutation(CHANGE_TO_IN_ROUTE)\n\n  const onSubmitComplete = async () => {\n    try {\n      const { data } = await changeToShipped({\n        variables: {\n          orderId: parseInt(_id),\n        },\n        refetchQueries: [{ query: GET_COLLECT_ORDERS }],\n      })\n      if (data.changeToProcess) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const onSubmitInRoute = async () => {\n    try {\n      const { data } = await changeToInRoute({\n        variables: {\n          orderId: parseInt(_id),\n        },\n        refetchQueries: [{ query: GET_COLLECT_ORDERS }],\n      })\n      if (data.changeToInRoute) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n  const onSubmitNational = async () => {}\n\n  const onSubmit = () => {\n    if (data.getOrderById.type_id === 2) {\n      if (\n        data.getOrderById.method?.name === 'Fast' ||\n        data.getOrderById.method?.name === 'UDirect'\n      )\n        return onSubmitInRoute()\n      if (data.getOrderById.method?.name === 'Picking')\n        return onSubmitComplete()\n    } else {\n      return onSubmitNational()\n    }\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById && !loading && data?.getOrderById?.status?.id === 8 && (\n        <>\n          <ContentHeader\n            title=\"Orden por recolectar\"\n            breadcrumb=\"Por recolectar\"\n            windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n          />\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles</h3>\n                    </div>\n                    <div className=\"card-body col-12\">\n                      <OrderGeneral\n                        orderDate={moment(\n                          data?.getOrderById?.order_date\n                        ).format('LLL')}\n                        orderId={data?.getOrderById?.order_id}\n                        paymentId={data?.getOrderById?.payment.payment_id}\n                        platform={data?.getOrderById?.platform.name}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de pago</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderDetailStore\n                        orderType={data.getOrderById.type?.name}\n                        orderStore={\n                          data.getOrderById.store?.name ||\n                          data.getOrderById.warehouse?.name\n                        }\n                        orderPaymentPlatform={\n                          data.getOrderById.payment?.platform\n                        }\n                        orderMethod={data.getOrderById.method?.name}\n                        withStore={storeFromDB}\n                        totalPrice={data.getOrderById.total_price}\n                        shippingPrice={data.getOrderById.shipping_price}\n                        status={data?.getOrderById?.status?.id}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Desgloce de productos</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderProducts\n                        productsArray={data.getOrderById.products}\n                        totalQuantity={data.getOrderById.product_quantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de envío</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderShippingDetails\n                        city={data.getOrderById.shipping?.city}\n                        address={data.getOrderById.shipping?.address_1}\n                        postcode={data.getOrderById.shipping?.postcode}\n                        email={data.getOrderById.shipping?.email}\n                        phone={data.getOrderById.shipping?.phone}\n                        firstName={data.getOrderById.shipping?.first_name}\n                        lastName={data.getOrderById.shipping?.last_name}\n                        state={data.getOrderById.shipping?.state}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {!show && (\n                  <OrderButtons\n                    firstButtonGray={true}\n                    cancelBtn={'Imprimir'}\n                    onCancel={() => history.push('/orders/pending')}\n                    processBtn={'Entregar'}\n                    onProcess={onSubmit}\n                  />\n                )}\n              </div>\n            </div>\n            {/* TIMELINE & INTERNAL NOTES */}\n            <div className=\"col-4\">\n              <Timeline idOrder={idOrder} />\n              <InternalNotes idOrder={idOrder} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default CollectOrdersNew\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\n\nimport LayoutTable from '../../../../Global/LayoutTable'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { useQuery } from '@apollo/client'\n\n/* DATA */\nimport { GET_IN_ROUTE_ORDERS } from '../../../../../graphql/Catalog/Orders/inRouteOrders'\n\nconst InRouteOrders = () => {\n  const [pagePagination, setPagePagination] = useState({\n    searchQuery: null,\n    limit: 10,\n    offset: 0,\n    platform: null,\n  })\n  const [total, setTotal] = useState(0)\n  const { loading, error, data } = useQuery(GET_IN_ROUTE_ORDERS, {\n    variables: {\n      searchQuery: pagePagination.searchQuery,\n      limit: pagePagination.limit,\n      offset: pagePagination.offset,\n      platform: pagePagination.platform,\n    },\n  })\n\n  const [dataToTable, setDataToTable] = useState([])\n\n  useEffect(() => {\n    if (!loading) {\n      if (error)\n        return ToastSweetAlert({\n          mode: 'errorModal',\n          message: error.message,\n        })\n\n      const list = data.getInRouteOrders.rows.map((order) => {\n        return {\n          id: order.id ? order.id : '--',\n          'Hora y fecha':\n            moment(order?.order_date).format('L') +\n              ', ' +\n              moment(order?.order_date).format('LT') || '--',\n          Plataforma: order.platform?.name || '--',\n          Tipo: order.type?.name || '--',\n          'Plataforma de cobro': order.payment?.platform || '--',\n          'No. de cobro': order.payment?.payment_id || '--',\n          Cliente: `${order.shipping?.first_name} ${order.shipping?.last_name}`,\n          'Numero de venta': order.order_id ? order.order_id : '--',\n          Tienda: order?.store?.name || order?.warehouse?.name || '--',\n        }\n      })\n      setTotal(data.getInRouteOrders.count)\n      setDataToTable(list)\n    }\n  }, [loading, error, data])\n\n  return (\n    <>\n      <ContentHeader\n        title=\"En ruta\"\n        breadcrumb=\"Pedidos por en ruta\"\n        windowTitle=\"En ruta\"\n      />\n      <LayoutTable\n        data={dataToTable}\n        title=\"En ruta\"\n        requery={GET_IN_ROUTE_ORDERS}\n        editText={'Tomar Orden'}\n        totalCount={total}\n        pagePagination={pagePagination}\n        setPagePagination={setPagePagination}\n        platformSelector={true}\n        loadingData={loading}\n      />\n    </>\n  )\n}\n\nexport default InRouteOrders\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport ContentHeader from '../../../../Layout/ContentHeader'\nimport { GET_ORDER_DETAILS_BY_ID } from '../../../../../graphql/Catalog/Orders/pendingOrders'\nimport { useMutation, useQuery } from '@apollo/client'\nimport OrderGeneral from '../../../../OrderGeneral'\nimport OrderDetailStore from '../../../../OrderDetailStore'\nimport OrderShippingDetails from '../../../../OrderShippingDetails'\nimport OrderButtons from '../../../../OrderButtons'\nimport OrderProducts from '../../../../OrderProducts'\nimport { GET_IN_ROUTE_ORDERS } from '../../../../../graphql/Catalog/Orders/inRouteOrders'\nimport { CHANGE_TO_SHIPPED } from '../../../../../graphql/Catalog/Orders/shippedOrders'\nimport { CHANGE_TO_RETURNED } from '../../../../../graphql/Catalog/Orders/rejectedOrders'\nimport { ToastSweetAlert } from '../../../../Helpers/ToastSweetAlert'\nimport Timeline from '../../../../Global/Timeline/Timeline'\nimport InternalNotes from '../../../../Global/InternalNotes/InternalNotes'\nimport Swal from 'sweetalert2'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nconst InRouteOrdersNew = () => {\n  const { id: _id, show } = useParams()\n  const history = useHistory()\n  const [idOrder, setIdOrder] = useState(0)\n  const [storeFromDB, setStoreFromDB] = useState(false)\n\n  const { data, loading, error } = useQuery(GET_ORDER_DETAILS_BY_ID, {\n    variables: {\n      id: parseInt(_id),\n    },\n  })\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: error.message,\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER DOESN'T EXISTS */\n      if (!data.getOrderById) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no existe',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      /* VERIFY IF ORDER TYPE ES CORRECT */\n      if (data?.getOrderById?.status?.id === 12) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden ha sido rechazada',\n          },\n          history.push('/orders/local')\n        )\n      }\n      if (data?.getOrderById?.status?.id !== 7) {\n        return ToastSweetAlert(\n          {\n            mode: 'error',\n            message: 'Esta orden no esta en ruta',\n          },\n          history.push('/orders/local')\n        )\n      }\n\n      const orderData = data.getOrderById\n      if (orderData.store?.name || orderData.warehouse?.name)\n        setStoreFromDB(true)\n      setIdOrder(orderData.order_id)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, loading, error])\n\n  const [changeToShipped] = useMutation(CHANGE_TO_SHIPPED)\n  const [changeToReturned] = useMutation(CHANGE_TO_RETURNED)\n\n  const onSubmitCompleted = async () => {\n    try {\n      const { data } = await changeToShipped({\n        variables: {\n          orderId: parseInt(_id),\n        },\n        refetchQueries: [{ query: GET_IN_ROUTE_ORDERS }],\n      })\n      if (data.changeToShipped) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n\n  const onSubmitReturned = async () => {\n    try {\n      const { data } = await changeToReturned({\n        variables: {\n          orderId: parseInt(_id),\n        },\n        refetchQueries: [{ query: GET_IN_ROUTE_ORDERS }],\n      })\n      if (data.changeToReturned) {\n        Swal.fire({\n          title: 'Bien',\n          text: 'Pedido procesado',\n          icon: 'success',\n          allowOutsideClick: false,\n          buttonsStyling: false,\n          confirmButtonText: '<i class=\"fas fa-check\"> Aceptar </i>',\n          customClass: {\n            confirmButton: 'btn btn-sm btn-accept',\n          },\n        }).then((result) => {\n          if (result.isConfirmed) {\n            history.goBack()\n          }\n        })\n      }\n    } catch (error) {\n      return ToastSweetAlert({\n        mode: 'errorModal',\n        message: error.message,\n      })\n    }\n  }\n\n  moment.locale('es') //Change dates languages to spanish\n\n  return (\n    <>\n      {data?.getOrderById && !loading && data?.getOrderById?.status?.id === 7 && (\n        <>\n          <ContentHeader\n            title=\"Orden en ruta\"\n            breadcrumb=\"En ruta\"\n            windowTitle={`${_id ? 'Editar' : 'Agregar'} orden `}\n          />\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles</h3>\n                    </div>\n                    <div className=\"card-body col-12\">\n                      <OrderGeneral\n                        orderDate={moment(\n                          data?.getOrderById?.order_date\n                        ).format('LLL')}\n                        orderId={data?.getOrderById?.order_id}\n                        paymentId={data?.getOrderById?.payment.payment_id}\n                        platform={data?.getOrderById?.platform.name}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de pago</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderDetailStore\n                        orderType={data.getOrderById.type?.name}\n                        orderStore={\n                          data.getOrderById.store?.name ||\n                          data.getOrderById.warehouse?.name\n                        }\n                        orderPaymentPlatform={\n                          data.getOrderById.payment?.platform\n                        }\n                        orderMethod={data.getOrderById.method?.name}\n                        withStore={storeFromDB}\n                        totalPrice={data.getOrderById.total_price}\n                        shippingPrice={data.getOrderById.shipping_price}\n                        status={data?.getOrderById?.status?.id}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Desgloce de productos</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderProducts\n                        productsArray={data.getOrderById.products}\n                        totalQuantity={data.getOrderById.product_quantity}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"card\">\n                    <div className=\"card-header\">\n                      <h3 className=\"card-title\">Detalles de envío</h3>\n                    </div>\n                    <div className=\"card-body\">\n                      <OrderShippingDetails\n                        city={data.getOrderById.shipping?.city}\n                        address={data.getOrderById.shipping?.address_1}\n                        postcode={data.getOrderById.shipping?.postcode}\n                        email={data.getOrderById.shipping?.email}\n                        phone={data.getOrderById.shipping?.phone}\n                        firstName={data.getOrderById.shipping?.first_name}\n                        lastName={data.getOrderById.shipping?.last_name}\n                        state={data.getOrderById.shipping?.state}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {!show && data.getOrderById.method?.name !== 'UDirect' && (\n                  <OrderButtons\n                    cancelBtn={'Orden devuelta'}\n                    onCancel={onSubmitReturned}\n                    processBtn={'Orden entregada'}\n                    onProcess={onSubmitCompleted}\n                  />\n                )}\n              </div>\n            </div>\n            {/* TIMELINE & INTERNAL NOTES */}\n            <div className=\"col-4\">\n              <Timeline idOrder={idOrder} />\n              <InternalNotes idOrder={idOrder} />\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default InRouteOrdersNew\n","import { PrivateRoute } from '../Routers/PrivateRoute'\nimport React from 'react'\nimport PendingOrders from '../Components/Agent/Catalogs/Orders/Pending/PendingOrders'\nimport PendingOrdersNew from '../Components/Agent/Catalogs/Orders/Pending/PendingOrdersNew'\nimport InProcessOrders from '../Components/Shared/Catalogs/Orders/Process/InProcessOrders'\nimport InProcessOrdersNew from '../Components/Shared/Catalogs/Orders/Process/InProcessOrdersNew'\nimport LocalShippingOrders from '../Components/Agent/Catalogs/Orders/Local/LocalShippingOrders'\nimport LocalShippingOrdersNew from '../Components/Agent/Catalogs/Orders/Local/LocalShippingOrdersNew'\nimport NationalShippingOrders from '../Components/Agent/Catalogs/Orders/National/NationalShippingOrders'\nimport NationalShippingOrdersNew from '../Components/Agent/Catalogs/Orders/National/NationalShippingOrdersNew'\nimport ShippedOrders from '../Components/Shared/Catalogs/Orders/Shipped/ShippedOrders'\nimport ShippedOrdersNew from '../Components/Shared/Catalogs/Orders/Shipped/ShippedOrdersNew'\nimport ToStockOrders from '../Components/Shared/Catalogs/Orders/ToStock/ToStockOrders'\nimport ToStockOrdersNew from '../Components/Shared/Catalogs/Orders/ToStock/ToStockOrdersNew'\nimport BillingOrders from '../Components/Shared/Catalogs/Orders/Billing/BillingOrders'\nimport BillingOrdersNew from '../Components/Shared/Catalogs/Orders/Billing/BillingOrdersNew'\nimport RejectedOrders from '../Components/Shared/Catalogs/Orders/Rejected/RejectedOrders'\nimport RejectedOrdersNew from '../Components/Shared/Catalogs/Orders/Rejected/RejectedOrdersNew'\nimport CollectOrders from '../Components/Shared/Catalogs/Orders/Collect/CollectOrders'\nimport CollectOrdersNew from '../Components/Shared/Catalogs/Orders/Collect/CollectOrdersNew'\nimport InRouteOrders from '../Components/Shared/Catalogs/Orders/InRoute/InRouteOrders'\nimport InRouteOrdersNew from '../Components/Shared/Catalogs/Orders/InRoute/InRouteOrdersNew'\n\nconst submoduleRoutesGenerator = (read, create, edit, module, isAuth) => {\n  const components = {\n    PendingOrders,\n    PendingOrdersNew,\n    InProcessOrders,\n    InProcessOrdersNew,\n    LocalShippingOrders,\n    LocalShippingOrdersNew,\n    NationalShippingOrders,\n    NationalShippingOrdersNew,\n    ShippedOrders,\n    ShippedOrdersNew,\n    ToStockOrders,\n    ToStockOrdersNew,\n    BillingOrders,\n    BillingOrdersNew,\n    RejectedOrders,\n    RejectedOrdersNew,\n    CollectOrders,\n    CollectOrdersNew,\n    InRouteOrders,\n    InRouteOrdersNew\n  }\n  let routesArray = []\n  if (create) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        path={`${module.module_info.relative_link}${module.submodule_info.relative_link}/new`}\n        component={components[`${module.submodule_info.name}New`]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  if (read) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        path={`${module.module_info.relative_link}${module.submodule_info.relative_link}`}\n        component={components[module.submodule_info.name]}\n        isAuth={isAuth}\n      />\n    )\n    routesArray.push(\n      <PrivateRoute\n        exact\n        path={`${module.module_info.relative_link}${module.submodule_info.relative_link}/details/:id/:show`}\n        component={components[`${module.submodule_info.name}New`]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  if (edit) {\n    routesArray.push(\n      <PrivateRoute\n        exact\n        path={`${module.module_info.relative_link}${module.submodule_info.relative_link}/edit/:id`}\n        component={components[`${module.submodule_info.name}New`]}\n        isAuth={isAuth}\n      />\n    )\n  }\n  return routesArray\n}\nexport default submoduleRoutesGenerator\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './../Styles/Global.scss'\r\nimport LoadingLayer from './../Components/Global/LoadingLayer'\r\n\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\nimport { AuthContext } from '../Auth/AuthContext'\r\n\r\n//PUBLIC COMPONENTS\r\nimport { Login } from '../Components/Auth/Login'\r\n\r\n//ADMIN COMPONENTS\r\nimport Home from '../Components/Admin/Home/Example'\r\n\r\n//PUBLIC COMPONENTS\r\nimport Verification from '../Components/Auth/Verification'\r\nimport Error404 from './../Components/Pages/404/Error404'\r\nimport PasswordRecovery from '../Components/Auth/Recovery'\r\n\r\n//GRAPHQL COMPONENTS\r\nimport { useMutation } from '@apollo/client'\r\nimport { DECRYPT_TOKEN } from '../graphql/Auth/auth'\r\nimport { GET_ALL_USER_PERMISSIONS } from './../graphql/Catalog/Users/user'\r\n\r\nimport { types } from '../Types/types'\r\nimport moduleRoutesGenerator from '../helpers/moduleRoutesGenerator'\r\nimport submoduleRoutesGenerator from '../helpers/submoduleRoutesGenerator'\r\n\r\nexport const AppRouter = () => {\r\n  const { user, dispatch } = useContext(AuthContext)\r\n  const [decryptToken] = useMutation(DECRYPT_TOKEN)\r\n  const [getAllUserPermissions] = useMutation(GET_ALL_USER_PERMISSIONS)\r\n  const [loading, setLoading] = useState(false)\r\n  const token = localStorage.getItem('token')\r\n\r\n  useEffect(() => {\r\n    const validateToken = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const { data: tokenData } = await decryptToken({\r\n          variables: {\r\n            token,\r\n          },\r\n        })\r\n        const decoded = tokenData.decryptToken\r\n        const { data: userPermissionsData } = await getAllUserPermissions({\r\n          variables: {\r\n            userID: decoded.id,\r\n          },\r\n        })\r\n        const userPermissions = await userPermissionsData.getAllUserPermissions\r\n        setLoading(false)\r\n        dispatch({\r\n          type: types.login,\r\n          payload: {\r\n            logged: true,\r\n            idUser: decoded.id,\r\n            role: decoded.role,\r\n            email: decoded.email,\r\n            avatar: decoded.avatar,\r\n            userPermissions,\r\n            name: decoded.name,\r\n          },\r\n        })\r\n      } catch (e) {\r\n        setLoading(false)\r\n        sessionStorage.removeItem('user')\r\n        dispatch({\r\n          type: types.logout,\r\n        })\r\n      }\r\n    }\r\n    if (token) {\r\n      validateToken()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [Permissions, token])\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Router>\r\n          <Switch>\r\n            <PublicRoute\r\n              exact\r\n              path=\"/login\"\r\n              component={Login}\r\n              isAuth={user.logged}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path=\"/recuperar-contraseña\"\r\n              component={PasswordRecovery}\r\n              isAuth={user.logged}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path=\"/verificar/usuario/:token?\"\r\n              component={Verification}\r\n              isAuth={user.logged}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/dashboard\"\r\n              component={Home}\r\n              isAuth={user.logged}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/\"\r\n              component={Home}\r\n              isAuth={user.logged}\r\n            />\r\n            {user.userPermissions\r\n              ? user.userPermissions.map((module) => {\r\n                  const { access_read, access_retrieve, access_edit } = module\r\n                  if (!module.id_submodule) {\r\n                    return moduleRoutesGenerator(\r\n                      access_read,\r\n                      access_retrieve,\r\n                      access_edit,\r\n                      module,\r\n                      user.logged\r\n                    )\r\n                  }\r\n                  return submoduleRoutesGenerator(\r\n                    access_read,\r\n                    access_retrieve,\r\n                    access_edit,\r\n                    module,\r\n                    user.logged\r\n                  )\r\n                })\r\n              : null}\r\n            )\r\n            {localStorage.getItem('token') && (\r\n              <Route component={Error404} isAuth={false} />\r\n            )}\r\n            {!localStorage.getItem('token') && (\r\n              <PublicRoute path=\"*\" exact component={Error404} isAuth={true} />\r\n            )}\r\n          </Switch>\r\n        </Router>\r\n      ) : (\r\n        <LoadingLayer />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { createUploadLink } from 'apollo-upload-client'\nimport { setContext } from 'apollo-link-context'\n\nconst httpLink = createUploadLink({\n  uri: 'http://127.0.0.1:4000/graphql', //LOCALHOST\n  // uri: 'https://neosuite.vinosamerica.graphql.com', //PRODUCTIVO\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token')\n  const requestPath = window.location.pathname\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n      requestPath,\n    },\n  }\n})\n\nconst client = new ApolloClient({\n  connectToDevTools: true,\n  cache: new InMemoryCache({ addTypename: false }),\n  link: authLink.concat(httpLink),\n})\n\nexport default client\n","import React, { useReducer } from 'react'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport { AuthContext } from './Auth/AuthContext'\r\nimport { authReducer } from './Auth/AuthReducer'\r\nimport { AppRouter } from './Routers/AppRouter'\r\nimport client from './config/apollo'\r\nimport * as dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nfunction App() {\r\n  const [user, dispatch] = useReducer(authReducer, {})\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        dispatch,\r\n      }}\r\n    >\r\n      <ApolloProvider client={client}>\r\n        <AppRouter />\r\n      </ApolloProvider>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}